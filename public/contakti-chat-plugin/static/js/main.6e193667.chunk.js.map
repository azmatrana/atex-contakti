{"version":3,"sources":["components/shopping_cart/Cart.jsx","components/shopping_cart/Product.jsx","classes/Api.js","classes/ContaktiChat.js","components/chat_plugin/Dropdown.jsx","classes/MessageFactory.js","classes/ChatUtils.js","components/modules/utils/Text.jsx","components/modules/utils/CarouselWrapper.jsx","components/chat_box/MessageImagesModal.jsx","components/chat_box/Message.jsx","components/others/SendChatHistory.jsx","components/chat_box/ChatBox.jsx","components/others/CallBackBox.jsx","components/shopping_cart/ProductInfoModal.jsx","components/chat_plugin/ChatPlugin.jsx","App.js","reportWebVitals.js","index.js"],"names":["Cart","props","onProductRemove","product","products","state","_","reject","p","id","setState","length","onCartEmpty","countSum","addProduct","find","quantity","replaceProduct","currency","push","sum","each","price","index","findIndex","splice","handleShipmentChange","event","selectedShipmentMethod","target","value","handleCheckoutMethodChange","selectedCheckoutMethod","shipmentMethods","showModal","selectedProduct","contaktiChat","shipment_methods","checkout_methods","this","render","color","text_color","translations","className","style","backgroundColor","user_dashboard","shopping_cart","cart_title","onClick","toggleCart","maxHeight","overflow","increaseQuantity","total","handleShow","checkout_method","onChange","map","method","eval","title","name","checkout","handleOrder","order","Component","Product","decreaseQuantity","product_title","action","href","position","type","width","margin","readOnly","disabled","colSpan","Api","document","location","origin","includes","serverUrl","baseUrl","prototype","get","a","route","fetch","res","json","data","post","cache","headers","body","JSON","stringify","response","postFile","file_data","ContaktiChat","locale","serviceChannel","chat_settings","url_obj","serverProtocol","api","channel","settings","chat_inquiry_fields","chat_initial_buttons","chatBotEnabled","enable_chatbot","chatWithHuman","initialMsg","initial_msg","agents_online","is_ad_finland","is_ad_finland_company","checkout_paytrail","checkout_ticket","Dropdown","toggle_dropdown","e","expanded","mouseover","styleObj","mouseout","end","quit","showEndChat","sendchatHistory","sendChatHistory","showSendEmail","showStart","startChat","downloadChat","downloadChatHistory","hidden","onMouseOver","onMouseOut","download_txt_file","display","send_to_email","end_chat","start_new_chat","ChatMessage","asJSON","ChatMessageFactory","options","from","username","initialise","newMessage","message","chatBot","msg","channel_id","chatbot","quitMessage","botToHumanSwitchMessage","fileMessage","file_url","file_path","ChatUtils","replaceURLs","replace","url","hyperlink","match","replaceAllNewLines","convertHtmlToText","html","getUrlParams","params","split","forEach","pair","decodeURIComponent","Text","parse","text","CarouselWrapper","handleSelect","selectedIndex","activeIndex","Carousel","onSelect","images","image","Item","src","file","alt","file_name","MessageImagesModal","handleClose","Modal","show","onHide","Body","Message","handleMessageImageShow","imageIndex","modalImages","handleMessageImageClose","userName","fromTime","envelope","fromColor","bgClass","download","rel","upload_chat","gridTemplateColumns","borderColor","files","addToCart","handleProductShow","action_buttons","btn","i","hyper_link","test","sendCustomActionMessage","moment","timestamp","local","format","userInfo","info","SendChatHistory","handleChange","key","sendEmail","email","chat_history","quitChat","cancel","transcript","bgColor","send_chat_history_title","placeholder","messageemail_chat","messagemsg_chat","rows","messagesend_chat","messagesend_cancel","ChatBox","onStartClientResponse","agentPresent","setSendDisabled","callback","onMessageReceived","connect","chatChannel","fayeServer","server","window","Danthes","sign","setTimeout","displayNoAgentOnlineScreen","timeOut","contakti_chat","showNoAgentOnlineScreen","connectTimeout","scrollDown","showNoAgentOnline","successCallback","agent_online","indicators","getElementById","messageCame","localStorage","getItem","setItem","innerHTML","typing_text","removeItem","agentsCount","quit_chat","join_chat","welcome_message","agentName","clearTimeout","ask_human_to_help","innerText","changeFromBotToHumanChat","messages","chat_transcript","getChatTranscript","has_custom_action","custom_action_text","showCustomActionButtion","customActionButtionText","client_data","field","label","camelCase","phone","chat_display_fields","sendMessage","msg_text","messageFactory","_channelUrl","messagesListContainer","scrollIntoView","behavior","block","inline","sendQuitNotify","quitSent","encodeURIComponent","_channelIndicatorUrl","onKeyIndicator","onKeyPress","keyCode","onSendClicked","preventDefault","showDetailInput","showChat","toggleDropDown","bot_alias","enable_initial_buttons","moment1","msgs","setChatStarted","disableChatSendDisabled","updateUserDetail","uploadFile","fileInput","click","handleFileChange","formdata","FormData","append","uploadedFileUrls","showSendChatHistory","showSendChatHistoryFlag","chatUtils","_moment","fileDownload","createTicket","isFromCart","task_data","order_details","setPluginDisabledState","createdTask","createOrder","task_id","shipment_method","chatbot_product_id","setOrderCreated","orderCreated","messageContainer","started","messagEnvelopes","disableMessageInput","Object","keys","chat","msgFactory","bottom","getElementsByClassName","classList","remove","onclick","_onSendClicked","bind","minimized","inquiryData","textAlign","fontSize","paddingTop","thanks_for_order","onSubmit","marginTop","input_type","required","marginBottom","start_chat","ref","el","chat_not_available","chat_leave_a_message_link","type_message","charCode","visibility","attachment_chat","marginRight","instance","CallBackBox","createCallBack","number","date","time","datetime","Date","thanks_chat","callBackSent","sentmessage_chat","callback_chat","cbnumber_chat","clear","time_chat","float","boxSizing","paddingRight","message_chat","ProductInfoModal","Header","closeButton","Title","description","attachments","f","Footer","Button","variant","background","buttonColor","size","btnText","ChatPlugin","handleProductModalClose","showProductModal","handleProductModalShow","flag","showDropDown","chatStarted","showNoAgentScreen","showChatPlugin","chatInitialized","showPlugin","cont_chat","setSettings","showMinimize","cartEmpty","showCartIcon","hideChatPlugin","stopPropagation","showCart","destroyChat","onResize","height","parent","postMessage","cart","hideCartIcon","disableChatboxContent","createCartTicket","chatBox","order_products","taskId","loading","urlParams","serviceChannelId","setServiceChannel","setTranslations","parent_width_class","outerWidth","handleWidth","handleHeight","pointerEvents","opacity","cursor","product_details","close","enable_cart","chat_title","showDropdown","top","left","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.6e193667.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Product from './Product';\nimport _ from 'lodash';\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      shipmentMethods: [],\n      sum: 0,\n      currency: \"USD\",\n      showModal: false,\n      selectedProduct: {},\n      selectedShipmentMethod: this.props.contaktiChat.shipment_methods[0],\n      selectedCheckoutMethod: this.props.contaktiChat.checkout_methods[0]\n    }\n  }\n  componentDidMount() {\n    this.countSum();\n    let { contaktiChat } = this.props;\n  }\n\n  onProductRemove = (product) => {\n    let { products } = this.state;\n    products = _.reject(products, (p) => {\n      return p.id === product.id;\n    });\n    this.setState({ products }, () => {\n      if (this.state.products.length === 0) {\n        this.props.onCartEmpty();\n      }\n      this.countSum();\n    });\n\n  }\n\n  addProduct = (p) => {\n    let { products } = this.state;\n    var product = _.find(products, { id: p.id });\n    if (product) {\n      product.quantity += 1;\n      this.replaceProduct(product);\n    }\n    else {\n      p.quantity = 1;\n      let currency = p.currency;\n      products.push(p)\n      this.setState({ products, currency }, () => this.countSum());\n\n    }\n  }\n\n\n  countSum = () => {\n    let sum = 0;\n    let { products } = this.state;\n    _.each(products, (product) => {\n      sum += (product.price * product.quantity);\n    });\n    this.setState({ sum });\n  }\n\n  replaceProduct = (product) => {\n    let { products } = this.state;\n    var index = _.findIndex(products, { id: product.id });\n    products.splice(index, 1, product);\n    this.setState({ products });\n    this.countSum();\n  }\n\n  handleShipmentChange = (event) => {\n    this.setState({selectedShipmentMethod: event.target.value });\n  }\n\n  handleCheckoutMethodChange = (event) => {\n    this.setState({selectedCheckoutMethod: event.target.value });\n  }\n\n  render() {\n    let { products, selectedCheckoutMethod } = this.state;\n    const { contaktiChat } = this.props\n    let color = contaktiChat.color;\n    let text_color = contaktiChat.text_color;\n    const { translations } = contaktiChat\n    return (\n      <div id=\"contakti_cart_box\" className=\"cart_box\">\n        <div className=\"msg_head\" style={{ backgroundColor: color }}>\n          <span id=\"contakti-user-name\" style={{ color: text_color }}> {translations.user_dashboard.shopping_cart.cart_title}</span>\n          <span id=\"close-cart-icon\" className=\"float-end p-1 mr-2 d-none d-sm-block d-md-none\" onClick={this.props.toggleCart}><i className=\"fa fa-times\"></i></span>\n        </div>\n\n        <div className=\"cart_body d-flex flex-column justify-content-between\">\n          <div style={{ maxHeight: \"270px\", overflow: \"auto\" }}>\n            <Product\n              products={products}\n              onProductRemove={this.onProductRemove}\n              increaseQuantity={this.addProduct}\n              replaceProduct={this.replaceProduct}\n              total={`${this.state.currency} ${this.state.sum}`}\n              translations={translations.user_dashboard.shopping_cart}\n              handleShow={this.props.handleShow}\n            />\n          </div>\n          <div className=\"text-center\">\n            <div className=\"row form-group\">\n              <div className=\"col-6\">\n                <label> {translations.user_dashboard.shopping_cart.checkout_method}</label>\n                <div className=\"centera\" id=\"checkout_method_select\">\n                  <select className=\"form-control w-100 m-auto\" onChange={this.handleCheckoutMethodChange}\n                          value={this.state.selectedCheckoutMethod}>\n                    {contaktiChat.checkout_methods.map((method, index) => {\n                      return <option value={method}> {eval(\"translations.service_channels.\" + method )}</option>\n                    })}\n                  </select>\n                </div>\n              </div>\n\n              <div className=\"col-6\">\n              <label> {translations.shipment_methods.title}</label>\n                <div className=\"centera\" id=\"shipment_method_select\">\n                  <select className=\"form-control w-100 m-auto\" onChange={this.handleShipmentChange}\n                          value={this.state.selectedShipmentMethod}>\n                    {contaktiChat.shipment_methods.map((method, index) => {\n                      return (<option key={index}> {method.name}</option>)\n                    })}\n                  </select>\n                </div>\n              </div>\n            </div>\n\n            <div>\n              {selectedCheckoutMethod === \"checkout_paytrail\" ? (\n\n                <button className=\"btn w-50\" style={{\n                  color: text_color,\n                  backgroundColor: color\n                }}> {translations.user_dashboard.shopping_cart.checkout}</button>\n              ) : (\n                <button className=\"btn w-50\" style={{\n                  color: text_color,\n                  backgroundColor: color\n                }}\n                  onClick={() => this.props.handleOrder(this.state.products, this.state.selectedCheckoutMethod, this.state.selectedShipmentMethod, this.state.sum)}\n                > {translations.user_dashboard.shopping_cart.order}</button>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Cart;\n","import React, { Component } from 'react';\nclass Product extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n\n\n  onProductRemove = (p) => {\n    this.props.onProductRemove(p);\n  }\n\n  increaseQuantity = (product) => {\n    this.props.increaseQuantity(product)\n  }\n\n  decreaseQuantity = (product) => {\n    if (product.quantity > 1) {\n      product.quantity -= 1;\n      this.props.replaceProduct(product)\n    }\n  }\n\n\n  render() {\n    let { products } = this.props;\n    const {translations} = this.props\n\n    return (\n      <table className=\"table table-condensed table-striped \">\n        <thead>\n          <tr>\n            <th className=\"border-0\">{translations.product_title}</th>\n            <th className=\"border-0 text-center\">{translations.quantity}</th>\n            <th className=\"border-0 text-center\">{translations.price}</th>\n            <th className=\"border-0 text-center\">{translations.action}</th>\n          </tr>\n        </thead>\n\n        <tbody id=\"cart_body\">\n          {\n            products.map((product, index) => {\n              return <tr key={index}>\n                <td className=\"px-1 border-0\"><a href=\"#\" onClick={()=> { this.props.handleShow(product) }}>{product?.title}</a></td>\n                <td className=\"px-1 border-0\">\n                  <div className=\"center\" style={{ position: \"relative\" }}>\n                    <span onClick={() => this.increaseQuantity(product)}> <i className=\"fa fa-plus\"></i> </span>\n                    <input type=\"text\" className=\"form-control\" style={{ width: \"50px\", margin: \"0px 5px\" }} value={product?.quantity} readOnly />\n                    <span onClick={() => this.decreaseQuantity(product)} > <i className=\"fa fa-minus\" ></i></span>\n                  </div>\n                </td>\n                <td className=\"px-1 border-0 text-center\">{product?.currency} {product?.price}</td>\n                <td className=\"px-1 border-0 center\">\n                  <button\n                    onClick={() => this.onProductRemove(product)}\n                    className=\"btn btn-danger \" ><i className=\"fa fa-times\" disabled ></i></button>\n                </td>\n              </tr>\n\n            })\n          }\n          <tr className=\"table-active\">\n            <td className=\"px-1 border-0 text-end\" colSpan=\"3\">\n              <strong>{translations.total}: {this.props.total}</strong>\n             </td>\n             <td className=\"px-1 border-0 \"/>\n          </tr>\n        </tbody>\n\n      </table>\n\n    );\n  }\n}\nexport default Product;","const Api = function (options= {}) {\n    \n    // this.serverUrl = process.env.HOST_NAME\n    // this.serverProtocol = process.env.PROTOCOL\n    // this.origin = options.host || 'http://localhost:3000'\n\n    if (document.location.origin.includes(\":300\"))\n    {\n        this.origin = 'http://localhost:3000'\n    }\n    else{\n        this.origin = document.location.origin\n    }\n    \n    this.serverUrl = this.origin + '/api/v1'\n    this.baseUrl = this.serverUrl;\n}\n\nApi.prototype.origin = \"ASdas\"\n\nApi.prototype.get = async function (route = '') {\n    const res = await fetch(`${this.baseUrl}/${route}`)\n    const data = await res.json()\n    if (!data) {\n        return null\n    }\n    else {\n        return data\n    }\n}\nApi.prototype.post = async function (route = '', data = {}) {\n    const response = await fetch(`${this.baseUrl}/${route}`, {\n        method: 'POST',\n        cache: 'no-cache',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data) \n    });\n    return await response.json();\n}\n\nApi.prototype.postFile = async function (route = '', file_data = {}) {\n    const response = await fetch(`${this.baseUrl}/${route}`, {\n        method: 'POST',\n        cache: 'no-cache',\n        body: file_data \n    });\n    return await response.json();\n}\nexport default Api\n\n\n","import Api from \"./Api\";\n\nclass ContaktiChat {\n    constructor(options = {}) {\n        // this.serverProtocol = process.env.PROTOCOL\n        if (document.location.origin.includes(\":300\"))\n        {\n            this.origin = 'http://localhost:3000'\n        }\n        else{\n            this.origin = document.location.origin\n        }\n\n        this.serverUrl = this.origin + '/api/v1'\n        this.locale = 'en';\n        this.serviceChannel = null;\n        this.chat_settings = {};\n        this.url_obj = {\n            serverUrl: this.serverUrl,\n            serverProtocol: this.serverProtocol\n        };\n        this.api = new Api(this.url_obj);\n    }\n    setServiceChannel(channel){\n        this.serviceChannel = channel;\n    }\n\n    async setSettings() {\n        let res = await this.api.get(`chat/${this.serviceChannel}/get_chat_settings`);\n        this.chat_settings = res.settings;\n        this.chat_settings.chat_inquiry_fields = res.chat_inquiry_fields;\n        this.chat_settings.chat_initial_buttons = res.chat_initial_buttons;\n        this.chatBotEnabled = this.chat_settings.enable_chatbot;\n        this.chatWithHuman = !(this.chat_settings.enable_chatbot);\n        this.initialMsg = this.chat_settings.initial_msg;\n        this.color = this.chat_settings.color;\n        this.text_color = this.chat_settings.text_color;\n        this.agents_online = res.agents_online;\n        this.is_ad_finland = res.is_ad_finland_company\n        this.shipment_methods = res.shipment_methods\n        \n        this.checkout_methods = []\n        if (this.chat_settings.checkout_paytrail) this.checkout_methods.push(\"checkout_paytrail\")\n        if (this.chat_settings.checkout_ticket) this.checkout_methods.push(\"checkout_ticket\")\n\n    }\n\n    async setTranslations() {\n        this.translations = await this.api.get(`chat/get_translations`);\n    }\n}\n\nexport default ContaktiChat\n","import React, { Component } from 'react';\n\nclass Dropdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: false,\n      showSendEmail: true,\n      showStart: false,\n      showEndChat: true,\n    }\n  }\n\n\n  // document.onclick = (event){\n  // \tif(!event.target.classList.contains('dropdown-toggle') && !event.target.classList.contains('fa-cog')){\n  // \t\tif(document.querySelector('.dropdown')){\n  // \t\t\tdocument.querySelector('.dropdown').classList.remove(\"open\");\n  // \t\t}\n  // \t}\n  // }\n\n  toggle_dropdown = (e) => {\n    // ele.parentElement.classList.remove(\"close-force\");\n    // e.target.parentNode.classList.toggle(\"open\");\n    this.setState({ expanded: !this.state.expanded });\n  }\n   mouseover = (e) => {\n    e.target.style.color = this.props.styleObj.color;\n    e.target.style.backgroundColor = this.props.styleObj.backgroundColor;\n  }\n  mouseout = (e) => {\n    e.target.style.color = this.props.styleObj.backgroundColor;\n    e.target.style.backgroundColor = this.props.styleObj.color;\n  }\n\n  end = () => {\n    this.props.quit();\n    this.setState({showEndChat: false});\n  }\n\n  sendchatHistory = () =>{\n    this.toggle_dropdown();\n    this.props.sendChatHistory();\n    this.setState({showSendEmail: false, showStart: true});\n  }\n\n  startChat =  async() =>{\n    this.setState({showStart: false});\n    await this.props.quit();\n    await this.props.startChat();\n  }\n\n  downloadChat = () => {\n    this.props.downloadChatHistory();\n  }\n\n\n  // mouseoverdownload(e) {\n  //   var x = document.getElementById(\"download_chat_history\");\n  //   x.style.color = document.getElementById('contakti-user-name').style.color;\n  //   x.style.backgroundColor = document.getElementById('contakti-msg-head').style.backgroundColor;\n  // }\n\n  // mouseoutdownload(e) {\n  //   var x = document.getElementById(\"download_chat_history\");\n  //   x.style.color = document.getElementById('contakti-msg-head').style.backgroundColor;\n  //   x.style.backgroundColor = document.getElementById('contakti-user-name').style.color;\n  // }\n\n  // mouseoversend(e) {\n  //   var y = document.getElementById(\"send_chat_history\");\n  //   y.style.color = document.getElementById('contakti-user-name').style.color;\n  //   y.style.backgroundColor = document.getElementById('contakti-msg-head').style.backgroundColor;\n  // }\n\n  // mouseoutsend(e) {\n  //   var y = document.getElementById(\"send_chat_history\");\n  //   y.style.color = document.getElementById('contakti-msg-head').style.backgroundColor;\n  //   y.style.backgroundColor = document.getElementById('contakti-user-name').style.color;\n  // }\n\n  // mouseovercancel(e) {\n  //   var z = document.getElementById(\"contakti-msg-close-chat\");\n  //   z.style.color = document.getElementById('contakti-user-name').style.color;\n  //   z.style.backgroundColor = document.getElementById('contakti-msg-head').style.backgroundColor;\n  // }\n\n  // mouseoutcancel(e) {\n  //   var z = document.getElementById(\"contakti-msg-close-chat\");\n  //   z.style.color = document.getElementById('contakti-msg-head').style.backgroundColor;\n  //   z.style.backgroundColor = document.getElementById('contakti-user-name').style.color;\n  // }\n\n  // mouseoverstart(e) {\n  //   var z = document.getElementById(\"contakti-msg-start-chat\");\n  //   z.style.color = document.getElementById('contakti-user-name').style.color;\n  //   z.style.backgroundColor = document.getElementById('contakti-msg-head').style.backgroundColor;\n  // }\n\n  // mouseoutstart(e) {\n  //   var z = document.getElementById(\"contakti-msg-start-chat\");\n  //   z.style.color = document.getElementById('contakti-msg-head').style.backgroundColor;\n  //   z.style.backgroundColor = document.getElementById('contakti-user-name').style.color;\n  // }\n\n\n\n\n\n  render() {\n    const {translations} = this.props\n    return (\n      <div className=\"dropdown chat-setting d--inline-block\" id=\"chat-setting-dropdown\" >\n        <button\n         style={{ color: this.props.styleObj.color }}\n          className=\"dropdown-toggle\"\n          onClick={this.toggle_dropdown}\n        >\n          <i className=\"fa fa-cog\"></i></button>\n\n        <ul className=\"chatsetting-dropdown-menu\" hidden={this.state.expanded ? false : true } id=\"chat-setting-dropdown-menu\">\n          <li>\n            <a id=\"download_chat_history\" style={{color: this.props.styleObj.backgroundColor, backgroundColor: this.props.styleObj.color }} onClick={this.downloadChat}  onMouseOver={this.mouseover} onMouseOut={this.mouseout}>\n             {translations.user_dashboard.download_txt_file}\n            </a>\n          </li>\n          <li>\n            <a id=\"send_chat_history\" style={{ display:this.state.showSendEmail? \"block\": \"none\", color: this.props.styleObj.backgroundColor, backgroundColor: this.props.styleObj.color }} onClick={this.sendchatHistory} onMouseOver={this.mouseover} onMouseOut={this.mouseout}>\n            {translations.user_dashboard.send_to_email}\n            </a>\n          </li>\n          <li>\n            <a id=\"contakti-msg-close-chat\" onClick={this.end} style={{ display:this.state.showEndChat? \"block\": \"none\" , color: this.props.styleObj.backgroundColor, backgroundColor: this.props.styleObj.color }} onMouseOver={this.mouseover} onMouseOut={this.mouseout}>\n            {translations.user_dashboard.end_chat}\n            </a>\n            <a id=\"contakti-msg-start-chat\" style={{ display:this.state.showStart? \"block\": \"none\", color: this.props.styleObj.backgroundColor, backgroundColor: this.props.styleObj.color }} onClick={this.startChat} onMouseOver={this.mouseover} onMouseOut={this.mouseout}>\n            {translations.user_dashboard.start_new_chat}\n            </a>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Dropdown;","const ChatMessage = function() {\n\n};\n\nChatMessage.prototype.asJSON = function() {\n    return JSON.stringify(this);\n};\nconst ChatMessageFactory = function(options) {\n    this.from = options.username;\n    this.channel = options.channel;\n    this.type = 'message';\n\n};\n\nChatMessageFactory.prototype.initialise = function() {\n\n}\nChatMessageFactory.prototype.newMessage = function(message, type, chatBot = false, from) {\n    var msg = new ChatMessage();\n    msg.from = from || this.from;\n    msg.channel_id = this.channel;\n    msg.type = type || this.type;\n    msg.chatbot = chatBot;\n    msg.message = message;\n    return msg;\n};\n\nChatMessageFactory.prototype.quitMessage = function() {\n    var msg = new ChatMessage();\n    msg.from = this.from;\n    msg.channel_id = this.channel;\n    msg.type = 'quit';\n    msg.message = 'Quitting.';\n    return msg;\n};\n\nChatMessageFactory.prototype.botToHumanSwitchMessage = function() {\n    var msg = new ChatMessage();\n    msg.from = this.from;\n    msg.channel_id = this.channel;\n    msg.type = 'botToHuman';\n    msg.message = 'Requesting human..';\n    return msg;\n};\n\n\nChatMessageFactory.prototype.fileMessage = function(file_url, file_path) {\n    var msg = new ChatMessage();\n    msg.from = this.from;\n    msg.channel_id = this.channel;\n    msg.type = 'file';\n    msg.message = file_url;\n    msg.file_path = file_path;\n    return msg;\n};\n\n\nexport default ChatMessageFactory","class ChatUtils {\n  static replaceURLs = (message) => {\n    if (!message) return '';\n    var urlRegex = /(((https?:\\/\\/)|(www\\.))[^\\s]+)/g;\n    let new_message = message.replace(urlRegex, function (url) {\n      var hyperlink = url;\n      if (!hyperlink.match('^https?:\\/\\/')) {\n        hyperlink = 'http://' + hyperlink;\n      }\n      return '<a href=\"' + hyperlink + '\" target=\"_blank\" rel=\"noopener noreferrer\">' + url + '</a>'\n    });\n\n    return new_message;\n  }\n\n  static replaceAllNewLines = (message) => {\n    if (!message) return '';\n    return message.replace(/\\n/g, '<br/>');\n  }\n\n  static convertHtmlToText = (html) => {\n    html = html.replace(/<style([\\s\\S]*?)<\\/style>/gi, '');\n    html = html.replace(/<script([\\s\\S]*?)<\\/script>/gi, '');\n    html = html.replace(/<\\/div>/ig, '\\n');\n    html = html.replace(/<\\/li>/ig, '\\n');\n    html = html.replace(/<li>/ig, '  *  ');\n    html = html.replace(/<\\/ul>/ig, '\\n');\n    html = html.replace(/<\\/p>/ig, '\\n');\n    html = html.replace(/<br\\s*[\\/]?>/gi, \"\\n\");\n    html = html.replace(/<[^>]+>/ig, '');\n    return html\n  }\n\n  static getUrlParams = (url) => {\n    var params = {};\n    (url + '?').split('?')[1].split('&').forEach(\n      function (pair) {\n        pair = (pair + '=').split('=').map(decodeURIComponent);\n        if (pair[0].length) {\n          params[pair[0]] = pair[1];\n        }\n      });\n\n    return params;\n  }\n};\n\nexport default ChatUtils","import parse from 'html-react-parser';\n\nconst Text = (props) => {\n    return parse(props.text)\n}\n \nexport default Text;","import React, { Component } from 'react';\nimport { Carousel } from 'react-bootstrap';\nclass CarouselWrapper extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { index: 0}\n    }\n    componentDidMount(){\n        let activeIndex = this.props.activeIndex ;\n        this.setState({ index: activeIndex});\n    }\n    handleSelect= (selectedIndex, e) => {\n        this.setState({ index: selectedIndex  });\n    }\n    render() { \n        \n        return ( <> \n        <Carousel activeIndex={this.state.index} onSelect={this.handleSelect}>\n            {this.props.images.map((image, index) => {\n                return (\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src={`${this.props.origin}${image.file.url}`}\n                            alt={image.file_name}\n                        />\n                    </Carousel.Item>\n                )\n            })}\n\n        </Carousel></> );\n    }\n}\n \nexport default CarouselWrapper;","import React, { Component } from 'react';\nimport { Button, Modal, } from 'react-bootstrap'\nimport CarouselWrapper from '../modules/utils/CarouselWrapper';\nclass MessageImagesModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    handleClose = () => {\n        this.props.handleClose()\n    }\n    render() {\n        return (\n            <>\n                <Modal show={this.props.showModal} onHide={this.handleClose}>\n                    <Modal.Body>\n                        <CarouselWrapper\n                            images={this.props.images}\n                            origin={this.props.origin}\n                            activeIndex={this.props.activeIndex}\n                        />\n                    </Modal.Body>\n                </Modal>\n            </>\n        );\n    }\n}\n\nexport default MessageImagesModal;","import React, { Component } from 'react';\nimport moment from 'moment';\nimport ChatUtils from '../../classes/ChatUtils';\nimport Text from '../modules/utils/Text';\nimport MessageImagesModal from './MessageImagesModal';\nclass Message extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.userName,\n      fromTime: this.props.envelope.from === this.username ? 'time_b' : 'time_a',\n      fromColor: this.props.from === this.username ? 'from_b' : 'from_a',\n      imageIndex: null,\n      showModal: false,\n      modalImages: []\n    }\n  }\n  handleMessageImageShow = (index, images) => {\n    this.setState({ imageIndex: index, showModal: true, modalImages: images});\n  }\n  handleMessageImageClose = () => {\n    this.setState({ showModal: false  });\n  }\n\n  render() {\n    var { contaktiChat } = this.props;\n\n    return (\n      <div className={this.props.bgClass} >\n        <MessageImagesModal\n         showModal={this.state.showModal}\n         activeIndex={this.state.imageIndex}\n         images={this.state.modalImages}\n         handleClose={this.handleMessageImageClose}\n         origin={contaktiChat.origin}/>\n        {this.props.envelope.type === 'file' ? (\n          <a download target=\"_blank\" rel=\"noreferrer\" href={ChatUtils.replaceAllNewLines(this.props.envelope.message)}>{`${this.props.envelope.from} ${contaktiChat.translations.user_dashboard.upload_chat}`}</a>\n\n        ) : (\n          <Text text={ChatUtils.replaceAllNewLines(ChatUtils.replaceURLs(this.props.envelope.message))} />\n        )}\n        { this.props.envelope.images ? (<div style={{gridTemplateColumns: \"auto auto auto auto\"}} className=\"d-grid mt-1\">\n          { this.props.envelope.images.map((image, index) => {\n            return(<div className=\"me-1 mb-1\">\n              <img src={`${contaktiChat.origin}${image.file.url}`} onClick={() => { this.handleMessageImageShow(index, this.props.envelope.images)}} style={{borderColor: contaktiChat.color}} className=\"img-thumbnail\"></img>\n            </div>)\n          })}\n\n        </div>) : \"\"\n        }\n        {\n          this.props.envelope.files ? (this.props.envelope.files.map((file) => {\n            return (\n              <div>\n                <a download target=\"_blank\" rel=\"noreferrer\" href={file.url}>{file.name}</a>\n              </div>)\n\n          })) : \"\"\n        }\n        {this.props.envelope.products ? (\n          <div id=\"chat-answer-products-wrapper\" className=\"mt-1\">\n            {this.props.envelope.products.map(product => {\n              return (<div className=\"answer_product\" key={`product-item-${product.id}`}>\n                <div className=\"child1\"><strong>{product.title}</strong> </div>\n                <div className=\"child2\">\n                  <a href=\"#\" onClick={() => this.props.addToCart(product)} className=\"add-to-cart-btn\" data-product-id={product.id} style={{ color: contaktiChat.text_color, backgroundColor: contaktiChat.color }}>\n                    <i className=\"fa fa-shopping-cart\"></i>\n                  </a>\n                </div>\n                <span onClick={() => {this.props.handleProductShow(product)}}> <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i> </span>\n              </div>)\n            })\n            }\n          </div>\n        ) : \"\"}\n\n        {this.props.envelope.action_buttons ? (\n          <div>\n               {this.props.envelope.action_buttons.map((btn, i) => {\n              return (\n                <div key={`action-buttons-${i}`}>\n                  <br />\n                  {btn.hyper_link && btn.hyper_link.length > 0 ? <a href={((!/^https?:\\/\\//i.test(btn.hyper_link))?'http://': \"\") + btn.hyper_link} className=\"action-button\" target=\"_blank\" style={{ backgroundColor: contaktiChat.color, color: contaktiChat.text_color }}><Text text={btn.text} /></a> :\n                    <button className=\"action-button\" style={{ backgroundColor: contaktiChat.color, color: contaktiChat.text_color }} onClick={this.props.sendCustomActionMessage}><Text text={btn?.text} /> </button>\n                  }\n                  <br />\n                </div>\n              )\n\n            })\n            }\n          </div>\n\n        ) : \"\"}\n        {\n          this.props.envelope.type !== 'quit' && this.props.envelope.type !== 'initial' ? (\n            <div>\n              <br />\n              <div className={`msg_time${this.state.fromTime}`}> {moment(this.props.envelope.timestamp ? this.props.envelope.timestamp : \"\").local().format('D.M.YYYY HH.mm')}</div>\n              <div className={`msg_from${this.state.fromColor}`}>{this.props.envelope.from} </div>\n              {this.props.envelope.from === this.props.userName ? (\n                <div>\n                  {this.props.userInfo.map((info, i) => {\n                    return (<div key={`user-info-${i}`} className={`msg_from${this.state.fromColor}`}>{info} </div>)\n                  })}\n                </div>\n              ) : \"\"}\n            </div>\n          ) : \"\"}\n      </div>);\n  }\n}\n\nexport default Message;\n","import React, { Component } from 'react';\nimport Api from '../../classes/Api';\nclass SendChatHistory extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            chat_history: \"\"\n        }\n    }\n    componentDidMount() {\n        this.setState({ chat_history: this.props.transcript });\n    }\n\n    handleChange = (event, key) => {\n        let state = this.state;\n        let inputName = event.target.name;\n        state[inputName] = event.target.value;\n        this.setState({ ...state });\n    }\n\n    sendEmail = () => {\n        let email = this.state.email;\n        let message = this.state.chat_history;\n        var url = 'chat/' + this.props.contaktiChat.serviceChannel + '/send_email_chat_history';\n        let data = { email: email, message: message };\n        new Api().post(url, data);\n        this.props.quitChat();\n    }\n\n    cancel = async () => {\n       await this.props.quitChat();\n        this.props.startChat();\n    }\n\n    render() {\n        const translations = this.props.contaktiChat.translations.user_dashboard\n        const color = this.props.bgColor\n        return (\n            <div id=\"contakti-user-details\" className=\"flex-column justify-content-between d-flex pt-2 px-1\">\n                <div>\n                  <label>{translations.send_chat_history_title}</label>\n                  <input type=\"email\" name=\"email\" onChange={this.handleChange} value={this.state.email} placeholder={translations.messageemail_chat} className=\"form-control callback-control\" id=\"send-chat-history-email\" />\n                  <br /><br />\n                  <textarea placeholder={translations.messagemsg_chat} className=\"form-control sendchat--history\" rows=\"4\" id=\"send-chat-history-message\" name=\"chat_history\" onChange={this.handleChange} value={this.state.chat_history} ></textarea>\n                  <br />\n                  <input type=\"hidden\" id=\"chat-client-container\" name=\"chat-client-container\" />\n                </div>\n                <div className=\"pb-2\">\n                  <div className=\"send-button-container pull-left\">\n                      <button id=\"send-chat-history-send\" className=\"send\" style={{ backgroundColor: color, margin: \"5px\" }}    onClick={this.sendEmail}>{translations.messagesend_chat}  </button>\n                      <span></span>\n                      <button id=\"send-chat-history-cancel\" className=\"send\" style={{ backgroundColor: color, margin: \"5px\" }}  onClick={this.cancel} >{translations.messagesend_cancel}</button>\n                  </div>\n                  <div className=\"pull-right\">\n                      Powered by <a href=\"http://contakti.com\" target=\"_blank\" rel=\"noreferrer\" style={{ position: \"relative\" }}>contakti.com</a>\n                      <div className=\"send-button-container pull-left\">\n\n                      </div>\n                  </div>\n                </div>\n            </div>);\n    }\n}\n\nexport default SendChatHistory;","import React, { Component } from 'react';\nimport ChatMessageFactory from '../../classes/MessageFactory';\nimport Message from './Message';\nimport Api from '../../classes/Api';\nimport moment from 'moment';\nimport SendChatHistory from '../others/SendChatHistory';\nimport _ from 'lodash';\nimport Text from '../modules/utils/Text';\nimport ChatUtils from '../../classes/ChatUtils';\nclass ChatBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chatChannel: null,\n      fayeServer: null,\n      messageContainer: document.getElementById('chat_area'),\n      username: '',\n      email: '',\n      phone: '',\n      messageFactory: new ChatMessageFactory({ username: this.username, channel: this.chatChannel, email: this.email, phone: this.phone }),\n      quitSent: false,\n      messageCame: false,\n      agentPresent: false,\n      agentsCount: 0,\n      connectTimeout: 0,\n      started: false,\n      messages: [],\n      messagEnvelopes: [],\n      contaktiChat: {},\n      showDetailInput: true,\n      showChat: false,\n      newMessage: \"\",\n      disableChatSendDisabled: false,\n      disableMessageInput: false,\n      showNoAgentOnline: false,\n      agentName: \"\",\n      showSendChatHistoryFlag: false,\n      chat_transcript: \"\",\n      showCustomActionButtion: false,\n      customActionButtionText: \"\",\n      uploadedFileUrls: [],\n      orderCreated: false\n    }\n  }\n  componentDidMount() {\n    if (!this.props.contaktiChat || (this.props.contaktiChat && Object.keys(this.props.contaktiChat).length === 0)) {\n      return;\n    }\n    let chat = this.props.contaktiChat\n\n    this.setState({ messageContainer: document.getElementById('chat_area') });\n    this.setState({ contaktiChat: chat }, async () => {\n      if (this.state.contaktiChat.chat_settings.format !== \"inquiry\" || this.state.contaktiChat.chat_settings.chat_inquiry_fields.length === 0) {\n        await this.startChat();\n      }\n      // window.onbeforeunload = this.quitChat;\n    });\n    this.setSendDisabled();\n  }\n\n  onStartClientResponse = (response) => {\n    if ((!this.state.agentPresent) && this.state.contaktiChat.chatWithHuman) {\n      this.setSendDisabled()\n    }\n\n    response.callback = this.onMessageReceived;\n    response.connect = true;\n\n    this.setState({ chatChannel: response.channel });\n    this.setState({ fayeServer: response.server });\n    window.Danthes.sign(response);\n    // Set client info in redis to use when client closes or reloads the chat.\n    setTimeout(() => {\n      const url = this.state.contaktiChat.serverUrl + `/chat/set_client_info?channel_id=${this.state.chatChannel}`\n      fetch(url, {\n        \"Content-Type\": \"application/json\"\n      });\n    }, 2000);\n\n  };\n\n\n\n  displayNoAgentOnlineScreen = (timeOut = 60000) => {\n    let contakti_chat = this.state.contaktiChat;\n    if (contakti_chat.agents_online == false && contakti_chat.chatWithHuman == true)\n    {\n      this.props.showNoAgentOnlineScreen();\n    }\n    else{\n      this.setState({\n        connectTimeout: setTimeout(() => {\n          this.scrollDown();\n          this.setState({ showNoAgentOnline: true });\n        }, timeOut)\n      });\n    }\n\n  };\n\n  successCallback = (data) => {\n    let contakti_chat = this.state.contaktiChat;\n    if (data.agent_online == false)\n    {\n      this.displayNoAgentOnlineScreen(0);\n    }\n    else\n    {\n      contakti_chat.chatWithHuman = true;\n      contakti_chat.chatBotEnabled = false;\n      this.setState({ contaktiChat: contakti_chat }, () => {\n        this.setSendDisabled();\n        this.displayNoAgentOnlineScreen();\n      });\n    }\n  }\n  onMessageReceived = (envelope) => {\n    if (envelope.type === 'indicator') {\n      return\n    }\n    //TODO indicators\n    var indicators = document.getElementById('contakti-msg-indicator');\n    this.setState({ messageCame: true });\n    if (envelope.type === 'agent_indicator') {\n      indicators = document.getElementById('contakti-msg-indicator');\n      var has_cookies = localStorage.getItem('indicator_state')\n      if (!has_cookies) {\n        // setCookies\n        localStorage.setItem('indicator_state', 'true')\n        indicators.innerHTML = envelope.from + this.state.contaktiChat.translations.user_dashboard.typing_text + '<div id=\"wave\"> <span class=\"dot\"></span> <span class=\"dot\"></span> <span class=\"dot\"></span> </div>';\n        this.setState({\n          connectTimeout: setTimeout(function () {\n            var indicators = document.getElementById('contakti-msg-indicator');\n            indicators.innerHTML = '';\n            // remove cookie\n            localStorage.removeItem('indicator_state')\n          }, 5000)\n        });\n      }\n    }\n    else {\n      if (envelope.type === 'quit') {\n        this.setState({ agentsCount: this.state.agentsCount - 1 });\n        envelope.message = `${envelope.from} ${this.state.contaktiChat.translations.user_dashboard.quit_chat}`;\n        if (this.state.agentsCount < 1) {\n          // Disable send button. Do stuff!\n          this.setState({ agentPresent: false });\n          this.setSendDisabled();\n        }\n      }\n      else if (envelope.type === 'join') {\n        this.setState({ agentsCount: this.state.agentsCount + 1 });\n        if (this.state.agentPresent) {\n          envelope.message = `${envelope.from} ${this.state.contaktiChat.translations.user_dashboard.join_chat}`;\n        } else {\n          envelope.message = `${envelope.from} ${this.state.contaktiChat.chat_settings.welcome_message}`;\n        }\n        this.setState({ agentPresent: true, agentName: envelope.from });\n        clearTimeout(this.state.connectTimeout);\n        this.setSendDisabled();\n      }\n      else if (envelope.type === 'switch_to_human') {\n        envelope.message = `${this.state.contaktiChat.translations.user_dashboard.ask_human_to_help}`;\n        if (envelope.from !== this.username) {\n          indicators.innerText = \"\";\n        }\n        this.changeFromBotToHumanChat(this.successCallback);\n      }\n      let { messages, chat_transcript } = this.state;\n      if (envelope) messages.push(envelope);\n      chat_transcript = this.getChatTranscript()\n      this.setState({ messages, chat_transcript })\n      if (envelope.has_custom_action && envelope.custom_action_text) {\n        this.setState({ showCustomActionButtion: true, customActionButtionText: envelope.custom_action_text });\n      }\n      if (envelope.from !== this.state.username) {\n        indicators.innerText = \"\";\n      }\n\n    }\n    this.scrollDown();\n  };\n\n\n\n\n  changeFromBotToHumanChat = async (successCallback) => {\n\n    let client_data = [];\n    if (this.state.contaktiChat.chat_settings.format === 'inquiry') {\n      client_data = this.state.contaktiChat.chat_settings.chat_inquiry_fields.map(field => {\n        return { label: field.title, value: this.state[_.camelCase(field.title)] }\n      })\n    }\n    else {\n      client_data = [\n        { label: \"Name\", value: this.state.username }\n      ]\n    }\n    let params = {\n      chatbot: false,\n      channel_id: this.state.chatChannel,\n      name: this.state.username,\n      email: this.state.email,\n      phone: this.state.phone,\n      chat_display_fields: client_data,\n      is_ad_finland_company: this.state.contaktiChat.is_ad_finland\n        }\n    // var options = \"chatbot=\" + false + \"&name=\" + this.state.username + \"&email=\" + this.state.email + \"&phone=\" + this.state.phone + \"&channel_id=\" + encodeURIComponent(this.state.chatChannel);\n    let route = `/chat/${this.state.contaktiChat.serviceChannel}/bot_initiate_human_chat`;\n    let res = await new Api().post(route, params);\n    successCallback(res);\n  }\n\n\n  setUsername(name) {\n    if (!name) {\n      name = 'Anonymous';\n    }\n    this.setState({ username: name });\n    let msgFactory = this.state.messageFactory\n    msgFactory.from = name;\n    this.setState({ messageFactory: msgFactory });\n  };\n\n  sendCustomActionMessage = (e) => {\n    this.sendMessage(e.target.innerText);\n  }\n\n  sendMessage = (msg_text = \"\") => {\n    if (msg_text.length === 0) {\n      msg_text = this.state.newMessage;\n    }\n    if (msg_text.length > 0) {\n      var msg = this.state.messageFactory.newMessage(msg_text, null, this.state.contaktiChat.chatBotEnabled);\n      let route = this._channelUrl();\n      new Api().post(route, msg);\n      this.setState({ newMessage: \"\" })\n    }\n  };\n\n\n\n  _channelUrl = () => {\n    return this.state.chatChannel + '/send_msg';\n  };\n\n  scrollDown = () => {\n    if (this.messagesListContainer) {\n      this.messagesListContainer.scrollIntoView({ behavior: \"smooth\", block: \"end\", inline: \"nearest\" });\n    }\n  };\n\n  sendQuitNotify = () => {\n    if (this.state.quitSent) return;\n    this.setState({ quitSent: true });\n    var msg = this.state.messageFactory.quitMessage();\n    let route = this._channelUrl();\n    new Api().post(route, msg);\n    var ret = true ? null : ':D'; // Some browsers need fooling to evaluate onbeforeunload\n    return ret;\n  };\n\n  quitChat = async () => {\n    if (this.state.agentPresent) {\n      this.sendQuitNotify();\n    } else {\n      if (this.state.chatChannel) {\n        let route = `/chat/${this.state.contaktiChat.serviceChannel}/abort_chat?channel_id=${encodeURIComponent(this.state.chatChannel)}`;\n        await new Api().get(route);\n      }\n    }\n  };\n  _channelIndicatorUrl = () => {\n\n    return this.state.chatChannel + \"/send_indicator\";\n  };\n\n  onKeyIndicator = () => {\n    var msg = this.state.messageFactory.newMessage(\"Customer typing\");\n    let route = this._channelIndicatorUrl();\n    new Api().post(route, msg);\n  };\n\n  onKeyPress = (event) => {\n    var keyCode = event.keyCode;\n    if (keyCode !== 13) {\n      this.onKeyIndicator();\n    }\n\n  };\n\n  onSendClicked = (event) => {\n    this.setSendDisabled();\n    this.sendMessage();\n  };\n\n  startChat = async (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    let name = \"Anonymous\";\n    if (this.state.contaktiChat.chat_settings.format === 'inquiry') {\n      name = this.state[_.camelCase(this.state.contaktiChat.chat_settings.chat_inquiry_fields[0]?.title)]\n    }\n    this.setState({\n      showDetailInput: false,\n      showChat: true,\n      username: this.state.username.length > 0 ? this.state.username : name,\n      messageFactory: new ChatMessageFactory({\n        username: this.state.username.length > 0 ? this.state.username : name,\n        channel: this.state.chatChannel,\n        email: this.state.email,\n        phone: this.state.phone\n      })\n    });\n    this.props.toggleDropDown(true);\n    if (this.state.contaktiChat.chatWithHuman) {\n      this.displayNoAgentOnlineScreen();\n    }\n    let client_data = [];\n    if (this.state.contaktiChat.chat_settings.format === 'inquiry') {\n      client_data = this.state.contaktiChat.chat_settings.chat_inquiry_fields.map(field => {\n        return { label: field.title, value: this.state[_.camelCase(field.title)] }\n      })\n    }\n    else {\n      client_data = [\n        { label: \"Name\", value: name }\n      ]\n    }\n    let params = {\n      chatbot: this.state.contaktiChat.chatBotEnabled,\n      name: name,\n      email: this.state.email,\n      phone: this.state.phone,\n      chat_display_fields: client_data,\n      is_ad_finland_company: this.state.contaktiChat.is_ad_finland\n    }\n\n    let route = `chat/${this.state.contaktiChat.serviceChannel}/initiate_chat`;\n    let res = await new Api().post(route, params);\n\n    if (this.state.contaktiChat.initialMsg.length > 0) {\n      var msg = this.state.messageFactory.newMessage(this.state.contaktiChat.initialMsg, \"initial\", this.state.contaktiChat.chatBotEnabled, this.state.contaktiChat.chat_settings.bot_alias);\n      if (this.state.contaktiChat.chatBotEnabled && this.state.contaktiChat.chat_settings.enable_initial_buttons) {\n        msg.action_buttons = this.state.contaktiChat.chat_settings.chat_initial_buttons.map(btn => {return{ text: btn.title}});\n      }\n      let moment1 = moment;\n      msg.timestamp = moment1().local().format();\n      let msgs = this.state.messages\n      msgs.push(msg);\n      this.setState({ messages: msgs });\n    }\n    this.props.setChatStarted();\n    this.onStartClientResponse(res);\n  };\n\n  setSendDisabled = (event) => {\n    if (!this.state.agentPresent && this.state.contaktiChat?.chatWithHuman) {\n      this.setState({ disableChatSendDisabled: true })\n      if (!this.state.agentPresent && this.state.contaktiChat?.chatWithHuman) {\n        this.setState({ disableChatSendDisabled: true })\n\n      }\n    } else {\n      this.setState({ disableChatSendDisabled: false })\n    }\n  };\n\n  maximize() {\n    document.getElementById('contakti-msg-box').style.bottom = '0px';\n    var chatSettingDrowpdown = document.getElementById('chat-setting-dropdown')\n    if (chatSettingDrowpdown && document.getElementsByClassName('show-dropdown').length > 0) {\n      document.getElementById('chat-setting-dropdown').style.display = \"block\";\n    }\n    document.getElementById('contakti-msg-minimize').classList.remove('hide');\n    var sendButton = document.getElementById('contakti-chat-send-btn');\n    sendButton.onclick = this._onSendClicked.bind(this);\n    this.setState({ messageContainer: document.getElementById('contakti-msg-body') });\n    this.setState({ minimized: false });\n  };\n\n  updateUserDetail = () => {\n  }\n\n  handleChange = (event, key) => {\n    let state = this.state;\n    let inputName = event.target.name;\n    state[inputName] = event.target.value;\n    this.setState({ ...state });\n  }\n  uploadFile = () => {\n    this.fileInput.click();\n  }\n  handleFileChange = async (e) => {\n    // const fileData = e.target.files[0];\n\n    let file = e.target.files[0];\n\n\n    var formdata = new FormData();\n    formdata.append(\"upload\", file, file.name);\n\n    let response = await new Api().postFile('chat/uploadfile', formdata);\n    this.state.uploadedFileUrls.push(response.file_url)\n    var msg = this.state.messageFactory.fileMessage(response.file_url, response.file_path);\n    let route = this._channelUrl();\n    new Api().post(route, msg);\n\n  }\n\n  showSendChatHistory = () => {\n    this.setState({ showSendChatHistoryFlag: true });\n  }\n  getChatTranscript = () => {\n    let transcript = \"\";\n    this.state.messages.forEach(message => {\n      let chatUtils = ChatUtils\n      if(message && message.message){\n      transcript += chatUtils.convertHtmlToText(message?.message)\n      transcript += '\\n'\n      }\n      if (message && message.files) {\n        message.files.forEach(file => {\n          transcript += file.url;\n          transcript += '\\n'\n        })\n      }\n      if (message && message.action_buttons) {\n        message.action_buttons.forEach(btn => {\n          transcript += btn.text;\n          if(btn.hyper_link && btn.hyper_link.length > 0 ){\n            transcript +=  `( ${btn.hyper_link} )`\n          }\n          transcript += '\\n';\n        })\n      }\n      if (message && message.type !== 'quit') {\n        let _moment = moment;\n        transcript += _moment(message.timestamp ? message.timestamp : []).local().format('D.M.YYYY HH.mm')\n        transcript += '\\n';\n        transcript += message.from;\n        transcript += '\\n';\n      }\n      transcript += '\\n';\n    })\n    return transcript;\n  }\n\n  downloadChat = () => {\n    this.fileDownload.click();\n  }\n\n  createTicket = async (isFromCart = false, products = [], sum = \"\", title=\"\" ) => {\n    const task_data = {};\n    task_data['channel_id'] = this.state.chatChannel\n    task_data['media_channel_id'] = this.state.contaktiChat.serviceChannel;\n    task_data['messages_attributes'] = [];\n    task_data['messages_attributes'][0] = {};\n    task_data['messages_attributes'][0]['title'] = title;\n    task_data['messages_attributes'][0][\"channel_type\"] = 'chat';\n    if (this.state.customActionButtionText.length > 0 && title.length === 0) {\n      task_data['messages_attributes'][0]['title'] = this.state.customActionButtionText;\n    }\n    task_data['messages_attributes'][0]['to'] = 'Internal';\n    task_data['messages_attributes'][0]['from'] = this.state.username;\n    task_data['user_uploaded_file_urls'] = this.state.uploadedFileUrls;\n    if (this.state.email.length > 0) task_data['messages_attributes'][0]['from'] = this.state.email;\n    let transcript = \"\";\n    if (this.state.contaktiChat.chat_settings.format === 'inquiry') {\n      this.state.contaktiChat.chat_settings.chat_inquiry_fields.forEach(field => {\n        transcript += `${field.title} : ${this.state[_.camelCase(field.title)]}\\n`;\n      })\n    }\n    else {\n      transcript += `Name : ${this.state.username}\\n`;\n    }\n    transcript += `\\n`;\n    if(this.state.newMessage.length > 0){\n      var msg = this.state.messageFactory.newMessage(this.state.newMessage);\n      let {messages} = this.state;\n      messages.push(msg);\n    }\n    transcript += this.getChatTranscript();\n    if(isFromCart === true){\n      transcript +=  `${this.state.contaktiChat.translations.user_dashboard.shopping_cart.order_details}: \\n`\n      products.forEach(product => {\n        transcript += `${product.title}&nbsp&nbsp&nbsp&nbsp&nbsp${product.quantity}-items&nbsp&nbsp&nbsp&nbsp&nbsp${product.currency}${product.price}\\n` \n      })\n      transcript += `\\ntotal: ${products[0].currency}${sum}\\n`\n\n    }\n\n    task_data['messages_attributes'][0]['description'] = transcript;\n    task_data['type'] = 'chat';\n    const url = 'tasks/create_task_from_chat'\n    this.props.setPluginDisabledState(true);\n    let createdTask = await new Api().post(url, task_data);\n    this.props.setPluginDisabledState(false);\n    this.setState({ showCustomActionButtion: false, customActionButtionText: \"\" });\n    this.quitChat();\n    if(isFromCart === false){\n      this.props.quit();\n    }\n\n    return createdTask.id;\n  }\n\n  createOrder = async (task_id = null, products = [], checkout_method = \"\", shipment_method=\"\", sum=\"\" ) => {\n    let data = {};\n    data['checkout_method'] = checkout_method;\n    data['shipment_method'] = shipment_method;\n    data['task_id'] = task_id;\n    data['total'] = sum;\n    data['order_products_attributes'] = [];\n    data['inquiry_fields_data'] = [];\n\n    if (this.state.contaktiChat.chat_settings.format === 'inquiry') {\n      data['inquiry_fields_data'] = this.state.contaktiChat.chat_settings.chat_inquiry_fields.map(field => {\n        return { label: field.title, value: this.state[_.camelCase(field.title)] }\n      })\n    }\n    \n    products.forEach( async (product) => {\n      let p = {\n        chatbot_product_id: product.id,\n        quantity: product.quantity,\n        price: product.price\n      }\n      data['order_products_attributes'].push(p);\n    })\n    let createdOrder = await new Api().post('orders', data)\n  }\n\n  setOrderCreated = () => {\n    this.setState({ orderCreated:  true});\n  }\n\n  render() {\n    if (!this.state.contaktiChat) {\n      return null;\n    }\n    const { contaktiChat, disableChatSendDisabled } = this.state;\n    const { messages } = this.state;\n\n    let inquiryData = [];\n    if (contaktiChat.chat_settings?.format === 'inquiry') {\n      contaktiChat.chat_settings.chat_inquiry_fields.forEach((field, index) => {\n        if (index > 0) {\n          inquiryData.push(this.state[_.camelCase(field.title)]);\n        }\n      })\n    }\n\n\n\n    return (\n\n      <div id=\"contakti-msg-container\" className=\"msg_wrap h-100\">\n         { this.state.orderCreated ? (<div style={{textAlign: \"center\", fontSize: \"110%\", paddingTop: \"3em\"}}> <Text text={contaktiChat.translations.user_dashboard.shopping_cart.thanks_for_order} /> </div>) : (<div>\n        <div id=\"contakti-chat-agent-details\" className=\"msg_agent\" style={{ display: this.state.agentName === \"\" ? \"none\" : \"block\", color: this.props.contaktiChat.text_color, backgroundColor: this.props.contaktiChat.color }}>\n          <div className=\"msg_agent_name\" id=\"contakti-chat-agent-name\">{this.state.agentName}</div>\n        </div>\n        {\n          contaktiChat?.chat_settings?.format === \"inquiry\" && contaktiChat?.chat_settings.chat_inquiry_fields.length > 0 ?\n            <div id=\"contakti-user-details\" className=\"h-100 px-1\" style={{ display: this.state.showDetailInput ? 'block' : 'none' }} >\n              <form className=\"flex-column justify-content-between d-flex h-100\" onSubmit={async (event) => { await this.startChat(event); }}>\n                <div style={{ maxHeight: \"330px\", overflow: \"auto\", marginTop: \"115px\" }} >\n                  {contaktiChat?.chat_settings.chat_inquiry_fields.map((field, index) => {\n                    return (<div key={`inquiry-fields-${index}`}><label>{field.title}</label>\n                      <input type={field.input_type} required className=\"form-control-start\" value={this.state[_.camelCase(field.title)] || \"\"} name={_.camelCase(field.title)} onChange={this.handleChange} id=\"contakti-input-name\" />\n                    </div>\n                    )\n                  })}\n                </div>\n                <div style={{ textAlign: 'center', marginBottom: \"20px\" }} >\n                  <div>\n                    <input type=\"submit\" id=\"contakti-input-details-submit\" className=\"btn btn-default btn-block\" value={contaktiChat.translations.user_dashboard.start_chat} style={{ backgroundColor: this.props.contaktiChat.color, color: this.props.contaktiChat.text_color }} />\n                  </div>\n                  <div >\n                    Powered by <a href=\"http://contakti.com\" target=\"_blank\" rel=\"noreferrer\">contakti.com</a>\n                  </div>\n                </div>\n              </form>\n            </div>\n            : null\n        }\n        {this.state.showSendChatHistoryFlag ? (<SendChatHistory contaktiChat={contaktiChat} bgColor={contaktiChat.color} transcript={this.state.chat_transcript} quitChat={() => { this.props.quit(); this.quitChat(); }} startChat={() => this.props.startChat()} />) : (\n          <div className={this.state.showDetailInput === false ? '' : 'd-none'}>\n\n            <div id=\"contakti-msg-body\" className=\"msg_bodyclient\">\n              {contaktiChat?.chat_settings?.format === \"inquiry\" && contaktiChat?.chat_settings.chat_inquiry_fields.length > 0 ? (\n                null\n              ) : \"\"}\n              <div style={{ display: this.state.showChat ? 'block' : 'none' }} id=\"chat_area\" ref={(el) => { this.messagesListContainer = el; }}>\n                {\n                  this.state.showNoAgentOnline ? (\n                    <div className=\"msg_n\">{contaktiChat.translations.user_dashboard.chat_not_available}<a href=\"#\" onClick={this.props.showNoAgentOnlineScreen} id=\"contakti_chat_not_available_link\"> {contaktiChat.translations.user_dashboard.chat_leave_a_message_link}</a></div>\n                  ) : (\n\n                    <div>\n                      {\n                        messages.map((message, index) => {\n                          return (\n                            <Message key={index}\n                              envelope={message}\n                              handleProductShow={this.props.handleProductShow}\n                              bgClass={message.from === this.state.username ? 'msg_b' : 'msg_a'}\n                              userName={this.state.username}\n                              sendCustomActionMessage={this.sendCustomActionMessage}\n                              addToCart={(product) => { this.props.addToCart(product) }}\n                              contaktiChat={contaktiChat}\n                              userInfo={inquiryData}\n                            />\n                          );\n\n                        })\n                      }\n                    </div>\n\n                  )}\n              </div>\n            </div>\n            <div id=\"contakti-msg-indicator\" className=\"msg_indictor\"> </div>\n            <div id=\"contakti-msg-footer\" className=\"msg_footer\" style={{ display: this.state.showChat ? 'block' : 'none' }}>\n              <div className=\"block-row\">\n                <div className=\"input-block\">\n                  <textarea\n                    id=\"contakti-chat-text-input\"\n                    value={this.state.newMessage}\n                    disabled={disableChatSendDisabled}\n                    name='newMessage'\n                    onChange={this.handleChange}\n                    className=\"msg_input form-control\"\n                    placeholder={contaktiChat?.translations?.user_dashboard.type_message}\n                    onKeyPress={(event) => {\n                      if (event.charCode === 13) {\n                        event.preventDefault();\n                        this.onSendClicked();\n                      }\n                      else {\n                        this.onKeyPress(event);\n                      }\n                    }}\n                    disabled={this.state.disableChatSendDisabled ? true : false}\n                    rows=\"3\" />\n                </div>\n                <div className=\"button-block\">\n                  <a\n                    className={`contakti-chat-send-btn ${this.state.newMessage.length > 0 ? \"\" : \"disabled\"}`}\n                    onClick={this.onSendClicked}\n                    style={{ backgroundColor: this.props.contaktiChat.color, color: this.props.contaktiChat.text_color }}>\n                    <span className=\"fa fa-send\"></span>\n                  </a>\n                </div>\n              </div>\n              <div className=\"block-row mb-1\">\n                <div className=\"pull-left\">\n                  <button id=\"custom_action_button\" onClick={this.createTicket} style={{ visibility: this.state.showCustomActionButtion ? 'visible' : 'hidden' }}> {this.state.customActionButtionText}</button>\n                </div>\n              </div>\n              <div className=\"block-row mb-10\">\n                <div className=\"pull-left\">\n                  <a onClick={this.uploadFile} id=\"contakti-open-file\">{contaktiChat.translations?.user_dashboard.attachment_chat}</a>\n                </div>\n                <div className=\"pull-right\">\n                  Powered by <a href=\"http://contakti.com\" target=\"_blank\" rel=\"noreferrer\" style={{ marginRight: '10px' }}>contakti.com</a>\n                </div>\n              </div>\n              <form id=\"contakti-file-upload-form\" style={{ display: 'none' }}>\n                <input type=\"file\" id=\"contakti-file-upload-input\" ref={instance => { this.fileInput = instance; }} name=\"upload\" onChange={this.handleFileChange} />\n              </form>\n            </div>\n          </div>\n        )}\n        </div>\n        )}\n        \n        <a ref={instance => { this.fileDownload = instance; }} style={{ display: \"none\" }} href={`data:text/plain;charset=utf-8,${encodeURIComponent(this.state.chat_transcript)}`} download=\"chat_history.txt\"></a>\n      </div>\n    );\n  }\n}\n\nexport default ChatBox;\n","import React, { Component } from 'react';\nimport Api from '../../classes/Api';\nimport Text from '../modules/utils/Text';\nclass CallBackBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      phone: \"\",\n      date: \"\",\n      time: \"\",\n      email: \"\",\n      message: \"\",\n      callBackSent: false\n\n    }\n  }\n\n  createCallBack = () => {\n    let number = this.state.phone\n    let date = this.state.date\n    let time = this.state.time\n    let datetime = '';\n    if (date.length > 0) {\n      datetime = new Date(`${date}`);\n      if (time.length > 0) {\n        datetime = new Date(`${date}T${time}`);\n      }\n    }\n    let email = this.state.email\n    let message = this.state.message\n    let url = '/chat/' + this.props.contaktiChat.serviceChannel + '/create_callback'\n    new Api().post(url, { number: number, datetime: datetime, email: email, message: message });\n    document.getElementById('contakti-user-name').innerHTML = this.props.contaktiChat.translations.user_dashboard.thanks_chat;\n    this.setState({callBackSent: true})\n  }\n\n\n  handleChange = (event, key) => {\n    let state = this.state;\n    let inputName = event.target.name;\n    state[inputName] = event.target.value;\n    this.setState({ ...state });\n  }\n  render() {\n    return (\n      <div className=\"call_back_box h-100\">\n      { this.state.callBackSent? (<div style={{textAlign: \"center\", fontSize: \"110%\", paddingTop: \"3em\"}}> <Text text={this.props.contaktiChat.translations.user_dashboard.sentmessage_chat} /> </div>) : (\n      <form id=\"contakti-user-details\" onSubmit={this.createCallBack} className=\"h-100 flex-column justify-content-between d-flex\">\n        <div className=\"row\">\n          <div className=\"col-12 pb-2\">\n            <label>{this.props.contaktiChat.translations.user_dashboard.callback_chat}</label>\n          </div>\n\n          <div className=\"col-12 pb-2\">\n            <div>\n              <div className=\"small-label pb-2\">{this.props.contaktiChat.translations.user_dashboard.cbnumber_chat}</div>\n              <input type=\"text\" onChange={this.handleChange} placeholder={this.props.contaktiChat.translations.user_dashboard.cbnumber_chat} name=\"phone\" className=\"form-control callback-control\" value={this.state.phone} id=\"messagebox-callback-number\" required />\n            </div>\n            <div style={{clear: \"both\"}}></div>\n          </div>\n\n          <div className=\"col-12\">\n            <div className=\"small-label pb-2\">{this.props.contaktiChat.translations.user_dashboard.time_chat}</div>\n            <div style={{clear: \"both\"}}></div>\n\n            <div style={{width: \"50%\", float: \"left\", boxSizing: \"border-box\",  paddingRight: \"20px\"}}>\n              <input type=\"date\" id=\"messagebox-date-field\" name=\"date\" value={this.state.date} onChange={this.handleChange} />\n            </div>\n\n            <div style={{width: \"50%\", float: \"left\", boxSizing: \"border-box\",  paddingRight: \"20px\"}}>\n              <input type=\"time\" id=\"messagebox-time-field\" name=\"time\" value={this.state.time} onChange={this.handleChange} />\n            </div>\n\n\n            <div style={{clear: \"both\"}}></div>\n          </div>\n          <div className=\"col-12 pb-2\">\n            <label>{this.props.contaktiChat.translations.user_dashboard.message_chat}</label>\n            <input type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} placeholder={this.props.contaktiChat.translations.user_dashboard.messageemail_chat} className=\"form-control callback-control\" id=\"messagebox-email\" required />\n            <br />\n            <textarea name=\"message\" value={this.state.message} onChange={this.handleChange} placeholder={this.props.contaktiChat.translations.user_dashboard.messagemsg_chat} className=\"form-control\" rows=\"8\" id=\"messagebox-message\"></textarea>\n\n          </div>\n        </div>\n          <div className=\"footer-sec\">\n            <div className=\"send-button-container pull-left\">\n              <button  type=\"submit\" id=\"messagebox-send\" className={`send ${this.state.phone.length > 0 && this.state.email.length > 0  ? \"\" : \"disabled\"}`} style={{backgroundColor: this.props.contaktiChat.color }} ><span className=\"fa fa-send\"></span></button>\n            </div>\n            <div className=\"pull-right\">\n              Powered by <a href=\"http://contakti.com\" target=\"_blank\" rel=\"noreferrer\" style={{position: \"relative\"}}>contakti.com</a>\n              <div className=\"send-button-container pull-left\">\n\n              </div>\n            </div>\n          </div>\n      </form>\n      )}\n      </div>\n\n    );\n  }\n}\n\nexport default CallBackBox;","import React, { Component } from 'react';\nimport { Button, Modal, } from 'react-bootstrap'\nimport CarouselWrapper from '../modules/utils/CarouselWrapper';\n\nclass ProductInfoModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: false,\n\n        }\n    }\n    handleClose = () => {\n        this.props.handleClose();\n    }\n    render() {\n        let { product } = this.props\n        return (\n            <>\n                <Modal show={this.props.show} onHide={this.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>{this.props.title}</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"d-flex justify-content-between px-2\">\n                            <span className=\"float-start\">{product.title}</span>\n                            <span className=\"float-end\">{product.currency} {product.price}</span>\n                        </div>\n                        <hr />\n                        {product.images && product.images.length > 0 &&\n                            <div>\n                                <CarouselWrapper \n                                images={product.images}\n                                origin={this.props.origin}\n                                 />    \n                                <hr />\n                            </div>\n                        }\n\n                        <div  className=\"overflow-auto mt-1 px-2\" >\n                            <div>{product.description}</div>\n                            {product.attachments && product.attachments.length > 0 && <div>\n                                {product.attachments.map((f, index) => {\n                                    return (\n                                        <span className=\"mx-1\">\n                                            <a className=\"text-decoration-none\" href={`${this.props.origin}${f.file.url}`} download >{f.file_name}</a>\n                                        </span>\n                                    )\n                                })}\n                            </div>\n                            }\n\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" style={{ background: this.props.buttonColor }}  size=\"sm\" onClick={this.handleClose}>\n                            {this.props.btnText}\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default ProductInfoModal;\n","import React, { Component } from 'react';\nimport ContaktiChat from '../../classes/ContaktiChat';\nimport Dropdown from './Dropdown';\nimport ChatBox from '../chat_box/ChatBox';\nimport CallBackBox from '../others/CallBackBox';\nimport ChatUtils from '../../classes/ChatUtils';\nimport ReactResizeDetector from 'react-resize-detector/build/withPolyfill';\nimport Cart from '../shopping_cart/Cart';\nimport ProductInfoModal from '../shopping_cart/ProductInfoModal';\n\nclass ChatPlugin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      style: {},\n      contaktiChat: {},\n      translations: {},\n      loading: true,\n      showDropDown: false,\n      showNoAgentScreen: false,\n      showPlugin: false,\n      showMinimize: false,\n      chatStarted: false,\n      chatInitialized: false,\n      showCartIcon: false,\n      showCart: false,\n      cartEmpty: true,\n      showProductModal: false,\n      selectedProduct: {},\n      disableChatboxContent: false\n    }\n  }\n  handleProductModalClose = () => {\n    this.setState({ showProductModal: false })\n  };\n  handleProductModalShow = (p) => {\n    this.setState({ showProductModal: true, selectedProduct: p });\n  }\n\n  async componentDidMount() {\n    let contakti_chat = new ContaktiChat();\n    let chatUtils = ChatUtils\n    let urlParams = chatUtils.getUrlParams(window.location.href)\n    let serviceChannelId = urlParams.id;\n    contakti_chat.setServiceChannel(serviceChannelId);\n    await contakti_chat.setSettings();\n    await contakti_chat.setTranslations();\n\n    this.setState({\n      contaktiChat: contakti_chat,\n      loading: false,\n      style: {\n        color: contakti_chat.text_color,\n        backgroundColor: contakti_chat.color\n      }\n    });\n  }\n\n  toggleDropDown = (flag) => {\n    this.setState({ showDropDown: flag });\n  }\n  setChatStarted = () => {\n    if (!this.state.chatStarted) {\n      this.setState({ chatStarted: true });\n    }\n  }\n  showNoAgentOnlineScreen = (e) => {\n    this.setState({ showNoAgentScreen: true });\n    if (e) e.preventDefault();\n  }\n  showChatPlugin = async () => {\n    if (!this.state.chatInitialized) {\n      this.setState({ chatInitialized: true });\n    }\n    if (!this.state.showPlugin) {\n      let cont_chat = this.state.contaktiChat\n      await cont_chat.setSettings();\n      this.setState({ showPlugin: true, showMinimize: true, contaktiChat: cont_chat });\n\n      if (this.state.chatStarted) {\n        this.setState({ showDropDown: true });\n      }\n      if (!this.state.cartEmpty) {\n        this.setState({ showCartIcon: true });\n      }\n\n    }\n\n  }\n  hideChatPlugin = (e) => {\n    e.stopPropagation();\n    if (this.state.showPlugin) {\n      this.setState({ showPlugin: false, showMinimize: false, showDropDown: false, showCart: false, showCartIcon: false });\n    }\n  }\n  destroyChat = () => {\n    this.setState({ chatInitialized: false, showPlugin: false, showMinimize: false, showDropDown: false, showCartIcon: false, cartEmpty: true });\n  }\n  onResize = (width, height) => {\n    // if (width < 350){\n    //   // width = 350;\n    // }\n    // if ( height < 535)\n    // {\n    //   // height = 535;\n    // }\n    window.parent.postMessage({ type: 'set_dimensions', width, height }, \"*\");\n  }\n  toggleCart = () => {\n    this.setState({ showCart: !this.state.showCart });\n  }\n  addToCart = (product) => {\n    this.setState({ showCartIcon: true, cartEmpty: false }, () => this.cart.addProduct(product));\n  }\n  hideCartIcon = () => {\n    this.setState({ showCartIcon: false, showCart: false, cartEmpty: true });\n  }\n\n  setPluginDisabledState = (disabled = false) => {\n    this.setState({ disableChatboxContent: disabled });\n  }\n\n  createCartTicket = async (products, checkout_method, shipment_method, sum) => {\n    this.setPluginDisabledState(true);\n    const taskId = await this.chatBox.createTicket(true, products, sum, this.state.contaktiChat.translations.user_dashboard.shopping_cart.order_products);\n    await this.chatBox.createOrder(taskId, products, checkout_method, shipment_method, sum);\n    this.chatBox.setOrderCreated();\n    this.setState({ showCart: false, showCartIcon: false});\n    this.setPluginDisabledState(false);\n  }\n\n\n  render() {\n    const { contaktiChat, loading } = this.state;\n    let parent_width_class = '';\n\n    if (window.parent) {\n      if (window.outerWidth <= 600) {\n        parent_width_class += ' max-600-width '\n      }\n    }\n\n    if (loading) {\n      return null;\n    }\n\n    const disabledContent = {\n      pointerEvents: 'none',\n      opacity: '0.6',\n      cursor: 'not-allowed'\n    }\n\n    return (\n      <div id=\"contakti-chat-main\" className={parent_width_class}>\n        <ReactResizeDetector handleWidth handleHeight onResize={this.onResize} >\n          <div id=\"contakti-msg-box\"\n            className={`\n                 chat-plugin-parent\n                 ${this.state.showMinimize === true ? \"open\" : \"\"}\n              `}\n            style={this.state.disableChatboxContent ? disabledContent : {}}\n          >\n            <ProductInfoModal\n              title={contaktiChat.translations.user_dashboard.shopping_cart.product_details}\n              btnText={contaktiChat.translations.user_dashboard.shopping_cart.close}\n              buttonColor={contaktiChat.color}\n              product={this.state.selectedProduct}\n              handleShow={this.handleProductModalShow}\n              handleClose={this.handleProductModalClose}\n              show={this.state.showProductModal}\n              origin={contaktiChat.origin}\n            />\n            <div className=\"cart-parent\" style={{ display: this.state.showCart ? \"block\" : \"none\" }}>\n              {(!this.state.cartEmpty) && contaktiChat.chat_settings.enable_cart ? (\n                <Cart ref={instance => { this.cart = instance; }}\n                    handleShow={this.handleProductModalShow}\n                    contaktiChat={contaktiChat}\n                    onCartEmpty={this.hideCartIcon}\n                    toggleCart={this.toggleCart}\n                    handleOrder={this.createCartTicket}/>\n              ) : \"\"}\n            </div>\n\n            <div className=\"chat-parent flex-column d-flex\">\n              <div id=\"contakti-msg-head\" onClick={this.showChatPlugin} className=\"msg_head\" style={this.state.style}>\n                <div>\n                  <div id=\"contakti-logo-container\">\n                    <img alt=\"logo\" src={`${contaktiChat.origin}/${contaktiChat.chat_settings.file.url}`} />\n                  </div>\n                </div>\n\n                <span id=\"contakti-user-name\" style={{ color: contaktiChat.text_color }}>{contaktiChat.chat_settings.chat_title}</span>\n\n                <span id=\"cart_show_button\" onClick={this.toggleCart} style={{ display: this.state.showCartIcon ? \"block\" : \"none\", margin: '5px 5px 0 0', color: contaktiChat.text_color }}>\n                  <i className=\"fa fa-shopping-cart mt-1\"></i>\n                </span>\n                <span>\n                  {this.state.showDropDown ? (<Dropdown styleObj={this.state.style} translations={contaktiChat.translations} showDropdown={this.state.showDropDown} quit={() => { this.chatBox.quitChat(); this.destroyChat() }} sendChatHistory={() => this.chatBox.showSendChatHistory()} downloadChatHistory={() => { this.chatBox.downloadChat(); }} startChat={() => this.showChatPlugin()} />) : \"\"}\n                </span>\n\n                <div id=\"contakti-msg-minimize\" >\n                  {this.state.showMinimize ? (\n                    <span className=\"fa-stack\" onClick={this.hideChatPlugin} style={{ color: contaktiChat.text_color }}><i className=\"fa fa-stack-2x fa-angle-down\" style={{ top: '3px', left: '0px' }}></i></span>\n                  ) : \"\"}\n                </div>\n              </div>\n              {this.state.chatInitialized ? (\n                <div  style={{ display: this.state.showPlugin ? \"block\" : \"none\" }}>\n                  {this.state.showNoAgentScreen ? (<CallBackBox contaktiChat={contaktiChat} showNoAgentOnlineScreen={this.showNoAgentOnlineScreen} ></CallBackBox>) : (\n                    <ChatBox ref={instance => { this.chatBox = instance; }}\n                      contaktiChat={contaktiChat}\n                      handleProductShow={this.handleProductModalShow}\n                      toggleDropDown={this.toggleDropDown}\n                      showNoAgentOnlineScreen={this.showNoAgentOnlineScreen}\n                      quit={() => { this.destroyChat() }}\n                      setChatStarted={this.setChatStarted}\n                      startChat={() => this.showChatPlugin()}\n                      addToCart={(product) => { this.addToCart(product) }}\n                      setPluginDisabledState={this.setPluginDisabledState}\n                    ></ChatBox>)}\n                </div>\n              ) : \"\"}\n            </div>\n          </div>\n        </ReactResizeDetector>\n      </div>\n    );\n  }\n}\n\nexport default ChatPlugin;\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.scss';\nimport './components/chat_plugin/ChatPlugin'\nimport ChatPlugin from './components/chat_plugin/ChatPlugin';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <ChatPlugin />\n    );\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './style.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}