{"version":3,"sources":["classes/Api.js","classes/ContaktiChat.js","components/chat_plugin/Dropdown.jsx","classes/MessageFactory.js","classes/ChatUtils.js","components/modules/utils/Text.jsx","components/chat_box/Message.jsx","components/others/SendChatHistory.jsx","components/chat_box/ChatBox.jsx","components/others/CallBackBox.jsx","components/shopping_cart/Product.jsx","components/shopping_cart/Cart.jsx","components/chat_plugin/ChatPlugin.jsx","App.js","reportWebVitals.js","index.js"],"names":["Api","document","location","origin","includes","this","serverUrl","baseUrl","prototype","get","a","route","fetch","res","json","data","post","method","cache","headers","body","JSON","stringify","response","postFile","file_data","ContaktiChat","locale","serviceChannel","chat_settings","url_obj","serverProtocol","api","channel","chatBotEnabled","enable_chatbot","chatWithHuman","initialMsg","initial_msg","ticketMessageTitle","color","text_color","translations","chat_available","Dropdown","props","toggle_dropdown","e","setState","expanded","state","mouseover","target","style","styleObj","backgroundColor","mouseout","end","quit","showEndChat","sendchatHistory","sendChatHistory","showSendEmail","showStart","startChat","downloadChat","downloadChatHistory","className","id","onClick","hidden","onMouseOver","onMouseOut","display","Component","ChatMessage","asJSON","ChatMessageFactory","options","from","username","type","initialise","newMessage","message","chatBot","msg","channel_id","chatbot","quitMessage","botToHumanSwitchMessage","fileMessage","file_url","file_path","ChatUtils","replaceURLs","replace","url","hyperlink","match","getUrlParams","params","split","forEach","pair","map","decodeURIComponent","length","Text","parse","text","Message","userName","fromTime","envelope","fromColor","bgClass","download","href","replaceAll","contaktiChat","user_dashboard","upload_chat","files","file","name","products","product","title","addToCart","data-product-id","action_buttons","btn_text","sendCustomActionMessage","moment","timestamp","local","format","SendChatHistory","handleChange","event","key","value","sendEmail","email","chat_history","quitChat","cancel","transcript","bgColor","send_chat_history_title","onChange","placeholder","messageemail_chat","messagemsg_chat","rows","margin","messagesend_chat","messagesend_cancel","position","ChatBox","onStartClientResponse","messageContainer","innerHTML","console","log","agentPresent","setSendDisabled","callback","onMessageReceived","connect","chatChannel","fayeServer","server","window","Danthes","sign","setTimeout","displayNoAgentOnlineScreen","timeOut","connectTimeout","scrollDown","showNoAgentOnline","successCallback","contakti_chat","indicators","getElementById","messageCame","localStorage","getItem","setItem","typing_text","removeItem","agentsCount","quit_chat","join_chat","welcome_message","agentName","clearTimeout","ask_human_to_help","innerText","changeFromBotToHumanChat","msgs","messages","push","chat_transcript","getChatTranscript","has_custom_action","custom_action_text","showCustomActionButtion","customActionButtionText","phone","encodeURIComponent","sendMessage","msg_text","messageFactory","_channelUrl","messagesListContainer","scrollIntoView","behavior","block","inline","sendQuitNotify","quitSent","_channelIndicatorUrl","onKeyIndicator","onKeyPress","keyCode","onSendClicked","preventDefault","showDetailInput","showFooter","toggleDropDown","setChatStarted","disableChatSendDisabled","updateUserDetail","uploadFile","fileInput","click","handleFileChange","formdata","FormData","append","showSendChatHistory","showSendChatHistoryFlag","fileDownload","createTicket","task_data","started","messagEnvelopes","disableMessageInput","Object","keys","chat","onbeforeunload","msgFactory","bottom","getElementsByClassName","classList","remove","onclick","_onSendClicked","bind","minimized","onSubmit","required","marginLeft","marginBottom","textAlign","ref","el","chat_not_available","showNoAgentOnlineScreen","chat_leave_a_message_link","index","disabled","type_message","charCode","visibility","marginRight","instance","CallBackBox","createCallBack","number","date","time","datetime","Date","thanks_chat","callBackSent","fontSize","paddingTop","sentmessage_chat","padding","callback_chat","width","float","boxSizing","cbnumber_chat","clear","time_chat","paddingRight","message_chat","Product","onProductRemove","p","increaseQuantity","quantity","replaceProduct","decreaseQuantity","readonly","currency","price","Cart","_","reject","onCartEmpty","countSum","addProduct","find","sum","each","findIndex","splice","right","maxHeight","overflow","height","ChatPlugin","flag","showDropDown","chatStarted","showNoAgentScreen","showChatPlugin","chatInitialized","cont_chat","setSettings","showPlugin","showMinimize","cartEmpty","showCartIcon","hideChatPlugin","stopPropagation","showCart","destroyChat","onResize","parent","postMessage","toggleCart","cart","hideCartIcon","loading","urlParams","serviceChannelId","setServiceChannel","setTranslations","checkIfChatIsAvailable","handleWidth","handleHeight","enable_cart","src","clientheading_chat","showDropdown","chatBox","top","left","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a8225bad.chunk.js","sourcesContent":["const Api = function (options= {}) {\n    \n    // this.serverUrl = process.env.HOST_NAME\n    // this.serverProtocol = process.env.PROTOCOL\n    // this.origin = options.host || 'http://localhost:3000'\n\n    if (document.location.origin.includes(\":300\"))\n    {\n        this.origin = 'http://localhost:3000'\n    }\n    else{\n        this.origin = document.location.origin\n    }\n    \n    this.serverUrl = this.origin + '/api/v1'\n    this.baseUrl = this.serverUrl;\n}\n\nApi.prototype.origin = \"ASdas\"\n\nApi.prototype.get = async function (route = '') {\n    const res = await fetch(`${this.baseUrl}/${route}`)\n    const data = await res.json()\n    if (!data) {\n        return null\n    }\n    else {\n        return data\n    }\n}\nApi.prototype.post = async function (route = '', data = {}) {\n    const response = await fetch(`${this.baseUrl}/${route}`, {\n        method: 'POST',\n        cache: 'no-cache',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data) \n    });\n    return await response.json();\n}\n\nApi.prototype.postFile = async function (route = '', file_data = {}) {\n    const response = await fetch(`${this.baseUrl}/${route}`, {\n        method: 'POST',\n        cache: 'no-cache',\n        body: file_data \n    });\n    return await response.json();\n}\nexport default Api\n\n\n","import Api from \"./Api\";\n\nclass ContaktiChat {\n    constructor(options = {}) {\n        // this.serverProtocol = process.env.PROTOCOL\n        if (document.location.origin.includes(\":300\"))\n        {\n            this.origin = 'http://localhost:3000'\n        }\n        else{\n            this.origin = document.location.origin\n        }\n\n        this.serverUrl = this.origin + '/api/v1'\n        this.locale = 'en';\n        this.serviceChannel = null;\n        this.chat_settings = {};\n        this.url_obj = {\n            serverUrl: this.serverUrl,\n            serverProtocol: this.serverProtocol\n        };\n        this.api = new Api(this.url_obj);\n    }\n    setServiceChannel(channel){\n        this.serviceChannel = channel;\n    }\n\n    async setSettings() {\n        this.chat_settings = await this.api.get(`chat/${this.serviceChannel}/get_chat_settings`);\n        this.chatBotEnabled = this.chat_settings.enable_chatbot;\n        this.chatWithHuman = !(this.chat_settings.enable_chatbot);\n        this.initialMsg = this.chat_settings.initial_msg;\n        this.ticketMessageTitle = \"\";\n        this.color = this.chat_settings.color;\n        this.text_color = this.chat_settings.text_color;\n\n    }\n    async setTranslations() {\n        this.translations = await this.api.get(`chat/get_translations`);\n    }\n    async checkIfChatIsAvailable() {\n        this.chat_available = await this.api.get(`chat/${this.serviceChannel}/is_chat_available`);\n    }\n}\n\nexport default ContaktiChat","import React, { Component } from 'react';\n\nclass Dropdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: false,\n      showSendEmail: true,\n      showStart: false,\n      showEndChat: true,\n    }\n  }\n\n\n  // document.onclick = (event){\n  // \tif(!event.target.classList.contains('dropdown-toggle') && !event.target.classList.contains('fa-cog')){\n  // \t\tif(document.querySelector('.dropdown')){\n  // \t\t\tdocument.querySelector('.dropdown').classList.remove(\"open\");\n  // \t\t}\n  // \t}\n  // }\n\n  toggle_dropdown = (e) => {\n    // ele.parentElement.classList.remove(\"close-force\");\n    // e.target.parentNode.classList.toggle(\"open\");\n    this.setState({ expanded: !this.state.expanded });\n  }\n   mouseover = (e) => {\n    e.target.style.color = this.props.styleObj.color;\n    e.target.style.backgroundColor = this.props.styleObj.backgroundColor;\n  }\n  mouseout = (e) => {\n    e.target.style.color = this.props.styleObj.backgroundColor;\n    e.target.style.backgroundColor = this.props.styleObj.color;\n  }\n\n  end = () => {\n    this.props.quit();\n    this.setState({showEndChat: false});\n  }\n\n  sendchatHistory = () =>{\n    this.toggle_dropdown();\n    this.props.sendChatHistory();\n    this.setState({showSendEmail: false, showStart: true});\n  }\n\n  startChat =  async() =>{\n    this.setState({showStart: false});\n    await this.props.quit();\n    await this.props.startChat();\n  }\n\n  downloadChat = () => {\n    this.props.downloadChatHistory();\n  }\n\n  \n  // mouseoverdownload(e) {\n  //   var x = document.getElementById(\"download_chat_history\");\n  //   x.style.color = document.getElementById('contakti-user-name').style.color;\n  //   x.style.backgroundColor = document.getElementById('contakti-msg-head').style.backgroundColor;\n  // }\n\n  // mouseoutdownload(e) {\n  //   var x = document.getElementById(\"download_chat_history\");\n  //   x.style.color = document.getElementById('contakti-msg-head').style.backgroundColor;\n  //   x.style.backgroundColor = document.getElementById('contakti-user-name').style.color;\n  // }\n\n  // mouseoversend(e) {\n  //   var y = document.getElementById(\"send_chat_history\");\n  //   y.style.color = document.getElementById('contakti-user-name').style.color;\n  //   y.style.backgroundColor = document.getElementById('contakti-msg-head').style.backgroundColor;\n  // }\n\n  // mouseoutsend(e) {\n  //   var y = document.getElementById(\"send_chat_history\");\n  //   y.style.color = document.getElementById('contakti-msg-head').style.backgroundColor;\n  //   y.style.backgroundColor = document.getElementById('contakti-user-name').style.color;\n  // }\n\n  // mouseovercancel(e) {\n  //   var z = document.getElementById(\"contakti-msg-close-chat\");\n  //   z.style.color = document.getElementById('contakti-user-name').style.color;\n  //   z.style.backgroundColor = document.getElementById('contakti-msg-head').style.backgroundColor;\n  // }\n\n  // mouseoutcancel(e) {\n  //   var z = document.getElementById(\"contakti-msg-close-chat\");\n  //   z.style.color = document.getElementById('contakti-msg-head').style.backgroundColor;\n  //   z.style.backgroundColor = document.getElementById('contakti-user-name').style.color;\n  // }\n\n  // mouseoverstart(e) {\n  //   var z = document.getElementById(\"contakti-msg-start-chat\");\n  //   z.style.color = document.getElementById('contakti-user-name').style.color;\n  //   z.style.backgroundColor = document.getElementById('contakti-msg-head').style.backgroundColor;\n  // }\n\n  // mouseoutstart(e) {\n  //   var z = document.getElementById(\"contakti-msg-start-chat\");\n  //   z.style.color = document.getElementById('contakti-msg-head').style.backgroundColor;\n  //   z.style.backgroundColor = document.getElementById('contakti-user-name').style.color;\n  // }\n \n\n\n\n\n  render() {\n    return (\n      <div className=\"dropdown chat-setting d--inline-block\" id=\"chat-setting-dropdown\" >\n        <button\n         style={{ color: this.props.styleObj.color }}\n          className=\"dropdown-toggle\"\n          onClick={this.toggle_dropdown}\n        >\n          <i className=\"fa fa-cog\"></i></button>\n\n        <ul className=\"chatsetting-dropdown-menu\" hidden={this.state.expanded ? false : true } id=\"chat-setting-dropdown-menu\">\n          <li>\n            <a id=\"download_chat_history\" style={{color: this.props.styleObj.backgroundColor, backgroundColor: this.props.styleObj.color }} onClick={this.downloadChat}  onMouseOver={this.mouseover} onMouseOut={this.mouseout}>\n              Download Text file\n            </a>\n          </li>\n          <li>\n            <a id=\"send_chat_history\" style={{ display:this.state.showSendEmail? \"block\": \"none\", color: this.props.styleObj.backgroundColor, backgroundColor: this.props.styleObj.color }} onClick={this.sendchatHistory} onMouseOver={this.mouseover} onMouseOut={this.mouseout}>\n              send to email\n            </a>\n          </li>\n          <li>\n            <a id=\"contakti-msg-close-chat\" onClick={this.end} style={{ display:this.state.showEndChat? \"block\": \"none\" , color: this.props.styleObj.backgroundColor, backgroundColor: this.props.styleObj.color }} onMouseOver={this.mouseover} onMouseOut={this.mouseout}>\n              End Chat\n            </a>\n            <a id=\"contakti-msg-start-chat\" style={{ display:this.state.showStart? \"block\": \"none\", color: this.props.styleObj.backgroundColor, backgroundColor: this.props.styleObj.color }} onClick={this.startChat} onMouseOver={this.mouseover} onMouseOut={this.mouseout}>\n              Start New Chat\n            </a>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Dropdown;","import ContaktiChat from \"./ContaktiChat\";\nconst ChatMessage = function() {\n    \n};\n\nChatMessage.prototype.asJSON = function() {\n    return JSON.stringify(this);\n};\nconst ChatMessageFactory = function(options) {\n    this.from = options.username;\n    this.channel = options.channel;\n    this.type = 'message';\n\n};\n\nChatMessageFactory.prototype.initialise = function() {              \n\n}\nChatMessageFactory.prototype.newMessage = function(message, type, chatBot = false) {\n    var msg = new ChatMessage();\n    msg.from = this.from;\n    msg.channel_id = this.channel;\n    msg.type = type || this.type;\n    msg.chatbot = chatBot;\n    msg.message = message;\n    return msg;\n};\n\nChatMessageFactory.prototype.quitMessage = function() {\n    var msg = new ChatMessage();\n    msg.from = this.from;\n    msg.channel_id = this.channel;\n    msg.type = 'quit';\n    msg.message = 'Quitting.';\n    return msg;\n};\n\nChatMessageFactory.prototype.botToHumanSwitchMessage = function() {\n    var msg = new ChatMessage();\n    msg.from = this.from;\n    msg.channel_id = this.channel;\n    msg.type = 'botToHuman';\n    msg.message = 'Requesting human..';\n    return msg;\n};\n\n\nChatMessageFactory.prototype.fileMessage = function(file_url, file_path) {\n    var msg = new ChatMessage();\n    msg.from = this.from;\n    msg.channel_id = this.channel;\n    msg.type = 'file';\n    msg.message = file_url;\n    msg.file_path = file_path;\n    return msg;\n};\n\n\nexport default ChatMessageFactory","class ChatUtils {\n  static replaceURLs = (message) => {\n    if (!message) return '';\n\n    var urlRegex = /(((https?:\\/\\/)|(www\\.))[^\\s]+)/g;\n    return message.replace(urlRegex, function (url) {\n      var hyperlink = url;\n      if (!hyperlink.match('^https?:\\/\\/')) {\n        hyperlink = 'http://' + hyperlink;\n      }\n      return '<a href=\"' + hyperlink + '\" target=\"_blank\" rel=\"noopener noreferrer\">' + url + '</a>'\n    });\n  }\n  static getUrlParams = (url) => {\n    var params = {};\n    (url + '?').split('?')[1].split('&').forEach(\n      function (pair) {\n        pair = (pair + '=').split('=').map(decodeURIComponent);\n        if (pair[0].length) {\n          params[pair[0]] = pair[1];\n        }\n      });\n\n    return params;\n  }\n};\n\nexport default ChatUtils","import parse from 'html-react-parser';\n\nconst Text = (props) => {\n    return parse(props.text)\n}\n \nexport default Text;","import React, { Component } from 'react';\nimport moment from 'moment';\nimport ChatUtils from '../../classes/ChatUtils';\nimport Text from '../modules/utils/Text';\nclass Message extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.userName,\n      fromTime: this.props.envelope.from == this.username ? 'time_b' : 'time_a',\n      fromColor: this.props.from == this.username ? 'from_b' : 'from_a',\n    }\n  }\n\n  componentDidMount() {\n  }\n\n\n\n  render() {\n    return (\n      <div className={this.props.bgClass} >\n        {this.props.envelope.type == 'file' ? (\n          <a download target=\"_blank\" href={this.props.envelope.message.replaceAll(\"\\n\", '<br/>')}>{`${this.props.envelope.from} ${this.props.contaktiChat.translations.user_dashboard.upload_chat}`}</a>\n\n        ) : (\n          <p>\n            <Text text={ChatUtils.replaceURLs(this.props.envelope.message).replaceAll(\"\\n\", '<br/>')} />\n          </p>\n        )}\n        {\n          this.props.envelope.files ? (this.props.envelope.files.map((file) => {\n            return (\n              <div>\n                <a download target=\"_blank\" href={file.url}>{file.name}</a>\n              </div>)\n\n          })) : \"\"\n        }\n        {this.props.envelope.products ? (\n          <div id=\"chat-answer-products-wrapper\">\n            {this.props.envelope.products.map(product => {\n              return (<div className=\"answer_product\">\n                <div className=\"child1\"><strong>{product.title}</strong> </div>\n                <div className=\"child2\">\n                  <a href=\"#\" onClick={() => this.props.addToCart(product)} className=\"add-to-cart-btn\" data-product-id={product.id} style={{ color: this.props.contaktiChat.text_color, backgroundColor: this.props.contaktiChat.color}}>\n                    <i className=\"fa fa-shopping-cart\"></i>\n                  </a>\n                </div>\n              </div>)\n            })\n            }\n          </div>\n        ) : \"\"}\n\n        {this.props.envelope.action_buttons ? (\n          <div>\n            {this.props.envelope.action_buttons.map(btn_text => {\n              return (\n                <div>\n                  <br />\n                  <button className=\"action-button\" style={{ backgroundColor: this.props.contaktiChat.color, color: this.props.contaktiChat.text_color }} onClick={this.props.sendCustomActionMessage}><Text text={btn_text} /> </button>\n                  <br />\n                </div>\n              )\n\n            })\n            }\n          </div>\n\n        ) : \"\"}\n        {\n          this.props.envelope.type !== 'quit' ? (\n            <div>\n              <br />\n              <div className={`msg_time${this.state.fromTime}`}> {moment(this.props.envelope.timestamp ? this.props.envelope.timestamp : \"\").local().format('D.M.YYYY HH.mm')}</div>\n              <div className={`msg_from${this.state.fromColor}`}>{this.props.envelope.from} </div>\n            </div>\n          ) : \"\"}\n      </div>);\n  }\n}\n\nexport default Message;\n","import React, { Component } from 'react';\nimport Text from '../modules/utils/Text';\nimport parse from 'html-react-parser'\nimport Api from '../../classes/Api';\nclass SendChatHistory extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            chat_history: \"\"\n        }\n    }\n    componentDidMount() {\n        this.setState({ chat_history: this.props.transcript });\n    }\n\n    handleChange = (event, key) => {\n        let state = this.state;\n        let inputName = event.target.name;\n        state[inputName] = event.target.value;\n        this.setState({ ...state });\n    }\n\n    sendEmail = () => {\n        let email = this.state.email;\n        let message = this.state.chat_history;\n        var url = 'chat/' + this.props.contaktiChat.serviceChannel + '/send_email_chat_history';\n        let data = { email: email, message: message };\n        let res = new Api().post(url, data);\n        this.props.quitChat();\n    }\n\n    cancel = async () => {\n       await this.props.quitChat();\n        this.props.startChat();\n    }\n\n    render() {\n        const translations = this.props.contaktiChat.translations.user_dashboard\n        const color = this.props.bgColor\n        return (\n            <div id=\"contakti-user-details\">\n                <label>{translations.send_chat_history_title}</label>\n                <input type=\"email\" name=\"email\" onChange={this.handleChange} value={this.state.email} placeholder={translations.messageemail_chat} className=\"form-control callback-control\" id=\"send-chat-history-email\" />\n                <br /><br />\n                <textarea placeholder={translations.messagemsg_chat} className=\"form-control sendchat--history\" rows=\"4\" id=\"send-chat-history-message\" name=\"chat_history\" onChange={this.handleChange} value={this.state.chat_history} ></textarea>\n                <br />\n                <input type=\"hidden\" id=\"chat-client-container\" name=\"chat-client-container\" />\n                <div className=\"send-button-container pull-left\">\n                    <button id=\"send-chat-history-send\" className=\"send\" style={{ backgroundColor: color, margin: \"5px\" }}    onClick={this.sendEmail}>{translations.messagesend_chat}  </button>\n                    <span></span>\n                    <button id=\"send-chat-history-cancel\" className=\"send\" style={{ backgroundColor: color, margin: \"5px\" }}  onClick={this.cancel} >{translations.messagesend_cancel}</button>\n                </div>\n                <div className=\"pull-right\">\n                    Powered by <a href=\"http://contakti.com\" target=\"_blank\" style={{ position: \"relative\" }}>contakti.com</a>\n                    <div className=\"send-button-container pull-left\">\n\n                    </div>\n                </div>\n            </div>);\n    }\n}\n\nexport default SendChatHistory;","import React, { Component } from 'react';\nimport ChatMessageFactory from '../../classes/MessageFactory';\nimport Message from './Message';\nimport Api from '../../classes/Api';\nimport Text from '../modules/utils/Text';\nimport moment from 'moment';\nimport SendChatHistory from '../others/SendChatHistory';\nclass ChatBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chatChannel: null,\n      fayeServer: null,\n      messageContainer: document.getElementById('chat_area'),\n      username: '',\n      email: '',\n      phone: '',\n      messageFactory: new ChatMessageFactory({ username: this.username, channel: this.chatChannel, email: this.email, phone: this.phone }),\n      quitSent: false,\n      messageCame: false,\n      agentPresent: false,\n      agentsCount: 0,\n      connectTimeout: 0,\n      started: false,\n      messages: [],\n      messagEnvelopes: [],\n      contaktiChat: {},\n      showDetailInput: true,\n      showFooter: false,\n      newMessage: \"\",\n      disableChatSendDisabled: false,\n      disableMessageInput: false,\n      showNoAgentOnline: false,\n      agentName: \"\",\n      showSendChatHistoryFlag: false,\n      chat_transcript: \"\",\n      showCustomActionButtion: false,\n      customActionButtionText: \"\"\n    }\n  }\n  componentDidMount() {\n    if (!this.props.contaktiChat || (this.props.contaktiChat && Object.keys(this.props.contaktiChat).length === 0)) {\n      return;\n    }\n    let chat = this.props.contaktiChat\n\n    this.setState({ messageContainer: document.getElementById('chat_area') });\n    this.setState({ contaktiChat: chat }, async () => {\n      if (this.state.contaktiChat.chat_settings.format === \"classic\") {\n        await this.startChat();\n      }\n      window.onbeforeunload = this.quitChat;\n    });\n    this.setSendDisabled();\n  }\n\n  onStartClientResponse = (response) => {\n    if (this.state.contaktiChat.initialMsg.length > 0) {\n      this.state.messageContainer.innerHTML += (\"<div class='msg_n'>\" + this.state.contaktiChat.initialMsg + \"</div>\");\n    }\n    console.log('onStartClientResponse.........');\n\n    if ((!this.state.agentPresent) && this.state.contaktiChat.chatWithHuman) {\n      this.setSendDisabled()\n    }\n\n    response.callback = this.onMessageReceived;\n    response.connect = true;\n\n    this.setState({ chatChannel: response.channel });\n    this.setState({ fayeServer: response.server });\n    window.Danthes.sign(response);\n    // Set client info in redis to use when client closes or reloads the chat.\n    setTimeout(() => {\n      const url = this.state.contaktiChat.serverUrl + `/chat/set_client_info?channel_id=${this.state.chatChannel}`\n      fetch(url, {\n        \"Content-Type\": \"application/json\"\n      });\n    }, 2000);\n\n  };\n\n\n\n  displayNoAgentOnlineScreen = (timeOut = 60000) => {\n    this.setState({\n      connectTimeout: setTimeout(() => {\n        this.scrollDown();\n        this.setState({ showNoAgentOnline: true });\n      }, timeOut)\n    });\n  };\n\n  successCallback = (data) => {\n    let contakti_chat = this.state.contaktiChat;\n    contakti_chat.chatWithHuman = true;\n    contakti_chat.chatBotEnabled = false;\n    this.setState({ contaktiChat: contakti_chat }, () => {\n      this.setSendDisabled();\n    });\n    this.displayNoAgentOnlineScreen();\n  }\n  onMessageReceived = (envelope) => {\n\n    if (envelope.type == 'indicator') {\n      return\n    }\n    //TODO indicators\n    var indicators = document.getElementById('contakti-msg-indicator');\n    this.setState({ messageCame: true });\n    if (envelope.type == 'agent_indicator') {\n      var indicators = document.getElementById('contakti-msg-indicator');\n      var has_cookies = localStorage.getItem('indicator_state')\n      if (!has_cookies) {\n        // setCookies\n        localStorage.setItem('indicator_state', 'true')\n        indicators.innerHTML = envelope.from + this.state.contaktiChat.translations.user_dashboard.typing_text + '<div id=\"wave\"> <span class=\"dot\"></span> <span class=\"dot\"></span> <span class=\"dot\"></span> </div>';\n        this.setState({\n          connectTimeout: setTimeout(function () {\n            var indicators = document.getElementById('contakti-msg-indicator');\n            indicators.innerHTML = '';\n            // remove cookie\n            localStorage.removeItem('indicator_state')\n          }, 5000)\n        });\n      }\n    }\n    else {\n      if (envelope.type == 'quit') {\n        this.setState({ agentsCount: this.state.agentsCount - 1 });\n        envelope.message = `${envelope.from} ${this.state.contaktiChat.translations.user_dashboard.quit_chat}`;\n        if (this.state.agentsCount < 1) {\n          // Disable send button. Do stuff!\n          this.setState({ agentPresent: false });\n          this.setSendDisabled();\n        }\n      }\n      else if (envelope.type == 'join') {\n        this.setState({ agentsCount: this.state.agentsCount + 1 });\n        if (this.state.agentPresent) {\n          envelope.message = `${envelope.from} ${this.state.contaktiChat.translations.user_dashboard.join_chat}`;\n        } else {\n          envelope.message = `${envelope.from} ${this.state.contaktiChat.chat_settings.welcome_message}`;\n        }\n        this.setState({ agentPresent: true, agentName: envelope.from });\n        clearTimeout(this.state.connectTimeout);\n        this.setSendDisabled();\n      }\n      else if (envelope.type == 'switch_to_human') {\n        envelope.message = `${this.state.contaktiChat.translations.user_dashboard.ask_human_to_help}`;\n        if (envelope.from != this.username) {\n          indicators.innerText = \"\";\n        }\n        this.changeFromBotToHumanChat(this.successCallback);\n      }\n      let msgs = this.state.messages\n      msgs.push(envelope);\n\n      this.setState({ messages: msgs }, () => {\n        this.setState({ chat_transcript: this.getChatTranscript() });\n      })\n      if (envelope.has_custom_action && envelope.custom_action_text) {\n        this.setState({ showCustomActionButtion: true, customActionButtionText: envelope.custom_action_text });\n      }\n      if (envelope.from != this.state.username) {\n        indicators.innerText = \"\";\n      }\n\n    }\n    this.scrollDown();\n  };\n\n\n\n\n  changeFromBotToHumanChat = async (successCallback) => {\n    var options = \"chatbot=\" + false + \"&name=\" + this.state.username + \"&email=\" + this.state.email + \"&phone=\" + this.state.phone + \"&channel_id=\" + encodeURIComponent(this.state.chatChannel);\n    let route = `/chat/${this.state.contaktiChat.serviceChannel}/bot_initiate_human_chat?${options}`;\n    let res = await new Api().get(route);\n    successCallback(res);\n  }\n\n\n  setUsername(name) {\n    if (!name) {\n      name = 'Anonymous';\n    }\n    this.setState({ username: name });\n    let msgFactory = this.state.messageFactory\n    msgFactory.from = name;\n    this.setState({ messageFactory: msgFactory });\n  };\n\n  sendCustomActionMessage = (e) => {\n    this.sendMessage(e.target.innerText);\n  }\n\n  sendMessage = (msg_text = \"\") => {\n    if (msg_text.length === 0) {\n      msg_text = this.state.newMessage;\n    }\n    if (msg_text.length > 0) {\n      var msg = this.state.messageFactory.newMessage(msg_text, null, this.state.contaktiChat.chatBotEnabled);\n      let route = this._channelUrl();\n      let res = new Api().post(route, msg);\n      this.setState({ newMessage: \"\" })\n    }\n  };\n\n\n\n  _channelUrl = () => {\n    return this.state.chatChannel + '/send_msg';\n  };\n\n  scrollDown = () => {\n    this.messagesListContainer.scrollIntoView({ behavior: \"smooth\", block: \"end\", inline: \"nearest\" });\n  };\n\n  sendQuitNotify = () => {\n    if (this.state.quitSent) return;\n    this.setState({ quitSent: true });\n    var msg = this.state.messageFactory.quitMessage();\n    let route = this._channelUrl();\n    let res = new Api().post(route, msg);\n    var ret = true ? null : ':D'; // Some browsers need fooling to evaluate onbeforeunload\n    return ret;\n  };\n\n  quitChat = async () => {\n    if (this.state.agentPresent) {\n      this.sendQuitNotify();\n    } else {\n      if (this.state.chatChannel) {\n        let route = `/chat/${this.state.contaktiChat.serviceChannel}/abort_chat?channel_id=${encodeURIComponent(this.state.chatChannel)}`;\n        let res = await new Api().get(route);\n      }\n    }\n  };\n  _channelIndicatorUrl = () => {\n\n    return this.state.chatChannel + \"/send_indicator\";\n  };\n\n  onKeyIndicator = () => {\n    var msg = this.state.messageFactory.newMessage(\"Customer typing\");\n    let route = this._channelIndicatorUrl();\n    let res = new Api().post(route, msg);\n  };\n\n  onKeyPress = (event) => {\n    var keyCode = event.keyCode;\n    if (keyCode != 13) {\n      this.onKeyIndicator();\n    }\n\n  };\n\n  onSendClicked = (event) => {\n    this.setSendDisabled();\n    this.sendMessage();\n  };\n\n  startChat = async (e) => {\n    e.preventDefault();\n    this.setState({\n      showDetailInput: false,\n      showFooter: true,\n      username: this.state.username.length > 0 ? this.state.username : 'Anonymous',\n      messageFactory: new ChatMessageFactory({\n        username: this.state.username.length > 0 ? this.state.username : 'Anonymous',\n        channel: this.state.chatChannel,\n        email: this.state.email,\n        phone: this.state.phone\n      })\n    });\n    this.props.toggleDropDown(true);\n    if (this.state.contaktiChat.chatWithHuman) {\n      this.displayNoAgentOnlineScreen();\n    }\n    var options = `chatbot=${this.state.contaktiChat.chatBotEnabled}&name=${this.state.username}&email=${this.state.email}&phone=${this.state.phone}`;\n    let route = `chat/${this.state.contaktiChat.serviceChannel}/initiate_chat?${options}`;\n    let res = await new Api().get(route);\n    this.props.setChatStarted();\n    this.onStartClientResponse(res);\n  };\n\n  setSendDisabled = (event) => {\n    if (!this.state.agentPresent && this.state.contaktiChat?.chatWithHuman) {\n      this.setState({ disableChatSendDisabled: true })\n      if (!this.state.agentPresent && this.state.contaktiChat?.chatWithHuman) {\n        this.setState({ disableChatSendDisabled: true })\n\n      }\n    } else {\n      this.setState({ disableChatSendDisabled: false })\n    }\n  };\n\n  maximize() {\n    document.getElementById('contakti-msg-box').style.bottom = '0px';\n    var chatSettingDrowpdown = document.getElementById('chat-setting-dropdown')\n    if (chatSettingDrowpdown && document.getElementsByClassName('show-dropdown').length > 0) {\n      document.getElementById('chat-setting-dropdown').style.display = \"block\";\n    }\n    document.getElementById('contakti-msg-minimize').classList.remove('hide');\n    var sendButton = document.getElementById('contakti-chat-send-btn');\n    sendButton.onclick = this._onSendClicked.bind(this);\n    this.setState({ messageContainer: document.getElementById('contakti-msg-body') });\n    this.setState({ minimized: false });\n  };\n\n  updateUserDetail = () => {\n  }\n\n  handleChange = (event, key) => {\n    let state = this.state;\n    let inputName = event.target.name;\n    state[inputName] = event.target.value;\n    this.setState({ ...state });\n  }\n  uploadFile = () => {\n    this.fileInput.click();\n  }\n  handleFileChange = async (e) => {\n    // const fileData = e.target.files[0];\n\n    let file = e.target.files[0];\n\n\n    var formdata = new FormData();\n    formdata.append(\"upload\", file, file.name);\n\n    let response = await new Api().postFile('chat/uploadfile', formdata);\n    var msg = this.state.messageFactory.fileMessage(response.file_url, response.file_path);\n    let route = this._channelUrl();\n    let res = new Api().post(route, msg);\n\n  }\n\n  showSendChatHistory = () => {\n    this.setState({ showSendChatHistoryFlag: true });\n  }\n  getChatTranscript = () => {\n    let transcript = \"\";\n    this.state.messages.forEach(message => {\n      transcript += message.message;\n      transcript += '\\n'\n      if (message.files) {\n        message.files.forEach(file => {\n          transcript += file.url;\n          transcript += '\\n'\n        })\n      }\n      if (message.action_buttons) {\n        message.action_buttons.forEach(btn_text => {\n          transcript += btn_text;\n          transcript += '\\n';\n        })\n      }\n      if (message.type !== 'quit') {\n        transcript += moment(message.timestamp ? message.timestamp : \"\").local().format('D.M.YYYY HH.mm')\n        transcript += '\\n';\n        transcript += message.from;\n        transcript += '\\n';\n      }\n      transcript += '\\n';\n    })\n    return transcript;\n  }\n\n  downloadChat = () => {\n    this.fileDownload.click();\n  }\n\n  createTicket = async () => {\n    const task_data = {};\n    task_data['channel_id'] = this.state.chatChannel\n    task_data['media_channel_id'] = this.state.contaktiChat.serviceChannel;\n    task_data['messages_attributes'] = [];\n    task_data['messages_attributes'][0] = {};\n    task_data['messages_attributes'][0]['title'] = \"\";\n    task_data['messages_attributes'][0][\"channel_type\"] = 'chat';\n    if (this.state.contaktiChat.ticketMessageTitle.length > 0) {\n      task_data['messages_attributes'][0]['title'] = this.state.customActionButtionText;\n    }\n    task_data['messages_attributes'][0]['to'] = 'Internal';\n    task_data['messages_attributes'][0]['from'] = this.state.username;\n    if (this.state.email.length > 0) task_data['messages_attributes'][0]['from'] = this.state.email;\n    task_data['messages_attributes'][0]['description'] = this.getChatTranscript();\n    task_data['type'] = 'chat';\n    const url = 'tasks/create_task_from_chat'\n    let res = await new Api().post(url, task_data);\n    this.setState({ showCustomActionButtion: false, customActionButtionText: \"\" });\n    this.quitChat();\n    this.props.quit();\n  }\n\n  render() {\n    if (!this.state.contaktiChat) {\n      return null;\n    }\n    const { contaktiChat, disableChatSendDisabled } = this.state;\n    const { messages } = this.state;\n\n    return (\n\n      <div id=\"contakti-msg-container\" className=\"msg_wrap\">\n        <div id=\"contakti-chat-agent-details\" className=\"msg_agent\" style={{ display: this.state.agentName === \"\" ? \"none\" : \"block\", color: this.props.contaktiChat.text_color, backgroundColor: this.props.contaktiChat.color }}>\n          <div className=\"msg_agent_name\" id=\"contakti-chat-agent-name\">{this.state.agentName}</div>\n        </div>\n        {this.state.showSendChatHistoryFlag ? (<SendChatHistory contaktiChat={contaktiChat} bgColor={contaktiChat.color} transcript={this.state.chat_transcript} quitChat={() => { this.props.quit(); this.quitChat(); }} startChat={() => this.props.startChat()} />) : (\n\n          <div>\n            <div id=\"contakti-msg-body\" className=\"msg_bodyclient\">\n              {contaktiChat?.chat_settings?.format === \"inquiry\" ? (\n                <div id=\"contakti-user-details\" style={{ display: this.state.showDetailInput ? 'block' : 'none' }} >\n                  <form onSubmit={async (event) => { await this.startChat(event); }}><label>Name</label>\n                    <input type=\"text\" required className=\"form-control-start\" value={this.state.username} name=\"username\" onChange={this.handleChange} id=\"contakti-input-name\" />\n\n                    <label> Email</label>\n                    <input type=\"text\" required className=\"form-control-start\" value={this.state.email} name=\"email\" onChange={this.handleChange} id=\"contakti-input-email\" />\n\n                    <label> Phone</label>\n                    <input type=\"text\" required className=\"form-control-start\" value={this.state.phone} name=\"phone\" onChange={this.handleChange} id=\"contakti-input-phone\" /><br />\n\n                    <div style={{ marginLeft: \"95px\", marginBottom: \"10px\" }}>\n                      <input type=\"submit\" id=\"contakti-input-details-submit\" className=\"btn btn-default btn-block\" value=\"Start Chat\" style={{ backgroundColor: this.props.contaktiChat.color, color: this.props.contaktiChat.text_color }} />\n                    </div>\n                  </form>\n                  <div style={{ textAlign: 'center' }}>\n                    Powered by <a href=\"http://contakti.com\" target=\"_blank\" >contakti.com</a>\n                  </div>\n                </div>\n              ) : \"\"}\n              <div id=\"chat_area\" ref={(el) => { this.messagesListContainer = el; }}>\n                {\n                  this.state.showNoAgentOnline ? (\n                    <div className=\"msg_n\">{contaktiChat.translations.user_dashboard.chat_not_available}<a href=\"#\" onClick={this.props.showNoAgentOnlineScreen} id=\"contakti_chat_not_available_link\"> {contaktiChat.translations.user_dashboard.chat_leave_a_message_link}</a></div>\n                  ) : (\n                    messages.map((message, index) => {\n                      return (\n                        <Message key={index}\n                          envelope={message}\n                          bgClass={message.from === this.state.username ? 'msg_b' : 'msg_a'}\n                          userName={this.state.username}\n                          contaktiChat={contaktiChat}\n                          sendCustomActionMessage={this.sendCustomActionMessage}\n                          addToCart={(product) => { this.props.addToCart(product) }}\n                          contaktiChat={contaktiChat}\n                        >\n                        </Message>\n                      );\n\n                    })\n                  )}\n              </div>\n            </div>\n            <div id=\"contakti-msg-indicator\" className=\"msg_indictor\"> </div>\n            <div id=\"contakti-msg-footer\" className=\"msg_footer\" style={{ display: this.state.showFooter ? 'block' : 'none' }}>\n              <div className=\"block-row\">\n                <div className=\"input-block\">\n                  <textarea\n                    id=\"contakti-chat-text-input\"\n                    value={this.state.newMessage}\n                    disabled={disableChatSendDisabled}\n                    name='newMessage'\n                    onChange={this.handleChange}\n                    className=\"msg_input form-control\"\n                    placeholder={contaktiChat?.translations?.user_dashboard.type_message}\n                    onKeyPress={(event) => {\n                      if (event.charCode === 13) {\n                        event.preventDefault();\n                        this.onSendClicked();\n                      }\n                      else {\n                        this.onKeyPress(event);\n                      }\n                    }}\n                    disabled={this.state.disableChatSendDisabled ? true : false}\n                    rows=\"3\" />\n                </div>\n                <div className=\"button-block\">\n                  <a\n                    id=\"contakti-chat-send-btn\"\n                    onClick={this.onSendClicked}\n                    disabled={disableChatSendDisabled}\n                    style={{ backgroundColor: this.props.contaktiChat.color, color: this.props.contaktiChat.text_color }}>\n                    <span className=\"fa fa-send\"></span>\n                  </a>\n                </div>\n              </div>\n              <div className=\"block-row mb-1\">\n                <div className=\"pull-left\">\n                  <button id=\"custom_action_button\" onClick={this.createTicket} style={{ visibility: this.state.showCustomActionButtion ? 'visible' : 'hidden' }}> {this.state.customActionButtionText}</button>\n                </div>\n              </div>\n              <div className=\"block-row mb-10\">\n                <div className=\"pull-left\">\n                  <a onClick={this.uploadFile} id=\"contakti-open-file\">Attach file</a>\n                </div>\n                <div className=\"pull-right\">\n                  Powered by <a href=\"http://contakti.com\" target=\"_blank\" style={{ marginRight: '10px' }}>contakti.com</a>\n                </div>\n              </div>\n              <form id=\"contakti-file-upload-form\" style={{ display: 'none' }}>\n                <input type=\"file\" id=\"contakti-file-upload-input\" ref={instance => { this.fileInput = instance; }} name=\"upload\" onChange={this.handleFileChange} />\n              </form>\n            </div>\n          </div>\n        )}\n        <a ref={instance => { this.fileDownload = instance; }} style={{ display: \"none\" }} href={`data:text/plain;charset=utf-8,${encodeURIComponent(this.state.chat_transcript)}`} download=\"chat_history.txt\"></a>\n      </div>\n    );\n  }\n}\n\nexport default ChatBox;\n","import React, { Component } from 'react';\nimport Api from '../../classes/Api';\nimport Text from '../modules/utils/Text';\nclass CallBackBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      phone: \"\",\n      date: \"\",\n      time: \"\",\n      email: \"\",\n      message: \"\",\n      callBackSent: false\n\n    }\n  }\n\n  createCallBack = () => {\n    let number = this.state.phone\n    let date = this.state.date\n    let time = this.state.time\n    let datetime = '';\n    if (date.length > 0) {\n      datetime = new Date(`${date}`);\n      if (time.length > 0) {\n        datetime = new Date(`${date}T${time}`);\n      }\n    }\n    let email = this.state.email\n    let message = this.state.message\n    let url = '/chat/' + this.props.contaktiChat.serviceChannel + '/create_callback'\n    let res = new Api().post(url, { number: number, datetime: datetime, email: email, message: message });\n    document.getElementById('contakti-user-name').innerHTML = this.props.contaktiChat.translations.user_dashboard.thanks_chat;\n    this.setState({callBackSent: true})\n  }\n\n\n  handleChange = (event, key) => {\n    let state = this.state;\n    let inputName = event.target.name;\n    state[inputName] = event.target.value;\n    this.setState({ ...state });\n  }\n  render() {\n    return (\n      <div>\n      { this.state.callBackSent? (<div style={{textAlign: \"center\", fontSize: \"110%\", paddingTop: \"3em\"}}> <Text text={this.props.contaktiChat.translations.user_dashboard.sentmessage_chat} /> </div>) : (\n      <div id=\"contakti-user-details\" style={{padding: \"10px\"}}>\n        <label>{this.props.contaktiChat.translations.user_dashboard.callback_chat}</label>\n\n        <div>\n          <div style={{width: \"100%\", float: \"left\", boxSizing: \"border-box\" }}>\n            <div className=\"small-label\">{this.props.contaktiChat.translations.user_dashboard.cbnumber_chat}</div>\n            <input type=\"text\" onChange={this.handleChange} placeholder={this.props.contaktiChat.translations.user_dashboard.cbnumber_chat} name=\"phone\" className=\"form-control callback-control\" value={this.state.phone} id=\"messagebox-callback-number\" />\n          </div>\n          <div style={{clear: \"both\"}}></div>\n        </div>\n\n        <div>\n          <div className=\"small-label\">{this.props.contaktiChat.translations.user_dashboard.time_chat}</div>\n          <div style={{clear: \"both\"}}></div>\n\n          <div style={{width: \"50%\", float: \"left\", boxSizing: \"border-box\",  paddingRight: \"20px\"}}>\n            <input type=\"date\" id=\"messagebox-date-field\" name=\"date\" value={this.state.date} onChange={this.handleChange} />\n          </div>\n\n          <div style={{width: \"50%\", float: \"left\", boxSizing: \"border-box\",  paddingRight: \"20px\"}}>\n            <input type=\"time\" id=\"messagebox-time-field\" name=\"time\" value={this.state.time} onChange={this.handleChange} />\n          </div>\n\n\n          <div style={{clear: \"both\"}}></div>\n        </div>\n\n        <label>{this.props.contaktiChat.translations.user_dashboard.message_chat}</label>\n        <input type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} placeholder={this.props.contaktiChat.translations.user_dashboard.messageemail_chat} className=\"form-control callback-control\" id=\"messagebox-email\" />\n        <br />\n        <textarea name=\"message\" value={this.state.message} onChange={this.handleChange} placeholder={this.props.contaktiChat.translations.user_dashboard.messagemsg_chat} className=\"form-control\" rows=\"4\" id=\"messagebox-message\"></textarea>\n        <br />\n        <div className=\"send-button-container pull-left\">\n          <button id=\"messagebox-send\" onClick={this.createCallBack} className=\"send\" style={{backgroundColor: this.props.contaktiChat.color }} ><span className=\"fa fa-send\"></span></button>\n        </div>\n        <div className=\"pull-right\">\n          Powered by <a href=\"http://contakti.com\" target=\"_blank\" style={{position: \"relative\"}}>contakti.com</a>\n          <div className=\"send-button-container pull-left\">\n\n          </div>\n        </div>\n      </div>\n      )}\n      </div>\n      \n    );\n  }\n}\n\nexport default CallBackBox;","import React, { Component } from 'react';\nclass Product extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n\n\n  onProductRemove = (p) => {\n    this.props.onProductRemove(p);\n  }\n\n  increaseQuantity = (product) => {\n    if (product.quantity < 5) {\n      product.quantity += 1;\n      this.props.replaceProduct(product)\n    }\n  }\n\n  decreaseQuantity = (product) => {\n    if (product.quantity > 1) {\n      product.quantity -= 1;\n      this.props.replaceProduct(product)\n    }\n  }\n\n\n  render() {\n    let { products } = this.props;\n\n    return (\n      <table className=\"table table-condensed table-striped \">\n        <thead>\n          <tr>\n            <th>Title</th>\n            <th className=\"text-center\">Quantity</th>\n            <th className=\"text-center\">Price</th>\n            <th className=\"text-center\" style={{ width: \"100px\" }}>Actions</th>\n          </tr>\n        </thead>\n\n        <tbody id=\"cart_body\">\n          {\n            products.map((product, index) => {\n              return <tr key={index}>\n                <td  className=\" border-0 center\"><a href=\"#\">{product?.title}</a></td>\n                <td>\n                  <div className=\"center\" style={{ position: \"relative\" }}>\n                    <span onClick={() => this.increaseQuantity(product)}> <i className=\"fa fa-plus\"></i> </span>\n                    <input type=\"text\" className=\"form-control\" style={{ width: \"50px\", margin: \"0px auto\" }} value={product?.quantity} readonly />\n                    <span onClick={() => this.decreaseQuantity(product)} > <i className=\"fa fa-minus\" ></i></span>\n                  </div>\n                </td>\n                <td className=\"text-center\">{product?.currency} {product?.price}</td>\n                <td className=\"center\">\n                  <button\n                    onClick={() => this.onProductRemove(product)}\n                    className=\"btn btn-danger \" ><i className=\"fa fa-times\" disabled ></i></button>\n                </td>\n              </tr>\n\n            })\n          }\n        </tbody>\n      </table>\n\n    );\n  }\n}\nexport default Product;","import React, { Component } from 'react';\nimport Product from './Product';\nimport _ from 'lodash';\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      sum: 0,\n      currency: \"USD\"\n    }\n  }\n  componentDidMount() {\n    this.countSum();\n  }\n\n  onProductRemove = (product) => {\n    let { products } = this.state;\n    products = _.reject(products, (p) => {\n      return p.id == product.id;\n    });\n    this.setState({ products }, () => {\n      if (this.state.products.length === 0) {\n        this.props.onCartEmpty();\n      }\n      this.countSum();\n    });\n\n  }\n\n  addProduct = (p) => {\n    let { products } = this.state;\n    var product = _.find(products, { id: p.id });\n    if (product) {\n      product.quantity += 1;\n      this.replaceProduct(product);\n    }\n    else {\n      p.quantity = 1;\n      let currency = p.currency;\n      products.push(p)\n      this.setState({ products, currency }, () => this.countSum());\n\n    }\n  }\n\n\n  countSum = () => {\n    let sum = 0;\n    let { products } = this.state;\n    _.each(products, (product) => {\n      sum += (product.price * product.quantity);\n    });\n    this.setState({ sum });\n  }\n\n  replaceProduct = (product) => {\n    let { products } = this.state;\n    var index = _.findIndex(products, { id: product.id });\n    products.splice(index, 1, product);\n    this.setState({ products });\n    this.countSum();\n  }\n\n  render() {\n    let { products } = this.state;\n    let color = this.props.contaktiChat.color;\n    let text_color = this.props.contaktiChat.text_color;\n    return (\n      <div id=\"contakti_cart_box\" className=\"cart_box\">\n        <div className=\"msg_head\" style={{ backgroundColor: color }}>\n\n          <span id=\"contakti-user-name\" style={{ color: text_color }}> Shopping Cart</span>\n        </div>\n        <div>\n        </div>\n        <div className=\"msg_wrap\">\n          <div className=\"cart_body\" style={{ right: \"15px\" }}>\n            <div style={{maxHeight: \"270px\", overflow: \"auto\"}}>\n            <Product products={products} onProductRemove={this.onProductRemove} replaceProduct={this.replaceProduct} />\n            </div>\n            <div className=\"\">\n              <span id=\"total_amount\"> Sum: <strong> {this.state.currency} {this.state.sum}</strong> </span>\n            </div>\n            <br />\n\n            <div style={{bottom: \"10px\", position:\"fixed\",marginLeft: \"90px\" }}>\n\n              <div>\n\n                <label > PAYMENT METHOD:</label>\n\n                <div className=\"center\" id=\"payment_method_select\">\n                  <select style={{ height: \"25px\", fontSize: \"15px\", width: \"50%\" }}>\n                    <option> Card</option>\n                    <option> PayPal</option>\n                  </select>\n                </div>\n                <br />\n\n                <label > SHIPPING METHOD:</label>\n\n                <div className=\"center\" id=\"payment_method_select\">\n                  <select style={{ height: \"25px\", fontSize: \"15px\", width: \"50%\" }}>\n                    <option> ABC</option>\n                    <option> DEF</option>\n                  </select>\n                </div>\n\n              </div>\n\n              <br />\n              <div className=\"center\">\n                <button className=\"btn\" style={{ color: text_color, backgroundColor: color }}> CHECKOUT</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Cart;","import React, { Component } from 'react';\nimport ContaktiChat from '../../classes/ContaktiChat';\nimport Dropdown from './Dropdown';\nimport ChatBox from '../chat_box/ChatBox';\nimport CallBackBox from '../others/CallBackBox';\nimport ChatUtils from '../../classes/ChatUtils';\nimport ReactResizeDetector from 'react-resize-detector';\nimport Cart from '../shopping_cart/Cart';\nimport { tsImportEqualsDeclaration } from '@babel/types';\n\n\nclass ChatPlugin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      style: {},\n      contaktiChat: {},\n      translations: {},\n      loading: true,\n      showDropDown: false,\n      showNoAgentScreen: false,\n      showPlugin: false,\n      showMinimize: false,\n      chatStarted: false,\n      chatInitialized: false,\n      showCartIcon: false,\n      showCart: false,\n      cartEmpty: true,\n    }\n  }\n\n  async componentDidMount() {\n    let contakti_chat = new ContaktiChat();\n    let chatUtils = ChatUtils\n    let urlParams = chatUtils.getUrlParams(window.location.href)\n    let serviceChannelId = urlParams.id;\n    contakti_chat.setServiceChannel(serviceChannelId);\n    await contakti_chat.setSettings();\n    await contakti_chat.setTranslations();\n    await contakti_chat.checkIfChatIsAvailable();\n    this.setState({\n      contaktiChat: contakti_chat,\n      loading: false,\n      style: {\n        color: contakti_chat.text_color,\n        backgroundColor: contakti_chat.color\n      }\n    });\n  }\n\n  toggleDropDown = (flag) => {\n    this.setState({ showDropDown: flag });\n  }\n  setChatStarted = () => {\n    if (!this.state.chatStarted) {\n      this.setState({ chatStarted: true });\n    }\n  }\n  showNoAgentOnlineScreen = (e) => {\n    this.setState({ showNoAgentScreen: true });\n    e.preventDefault()\n  }\n  showChatPlugin = async () => {\n    if (!this.state.chatInitialized) {\n      this.setState({ chatInitialized: true });\n    }\n    let cont_chat = this.state.contaktiChat\n    await cont_chat.setSettings();\n    this.setState({ contaktiChat: cont_chat });\n    if (!this.state.showPlugin) {\n      this.setState({ showPlugin: true, showMinimize: true })\n\n      if (this.state.chatStarted) {\n        this.setState({ showDropDown: true });\n      }\n      if(!this.state.cartEmpty){\n        this.setState({ showCartIcon: true });\n      }\n\n    }\n\n  }\n  hideChatPlugin = (e) => {\n    e.stopPropagation();\n    if (this.state.showPlugin) {\n      this.setState({ showPlugin: false, showMinimize: false, showDropDown: false, showCart: false, showCartIcon: false });\n    }\n  }\n  destroyChat = () => {\n    this.setState({ chatInitialized: false, showPlugin: false, showMinimize: false, showDropDown: false, showCartIcon: false , cartEmpty: true   });\n  }\n  onResize = (width, height) => {\n    window.parent.postMessage({ type: 'set_dimensions', width, height }, \"*\");\n  }\n  toggleCart = () => {\n    this.setState({ showCart: !this.state.showCart });\n  }\n  addToCart = (product) => {\n    this.setState({ showCartIcon: true, cartEmpty: false }, () => this.cart.addProduct(product) );\n  }\n  hideCartIcon = () => {\n    this.setState({ showCartIcon: false, showCart: false, cartEmpty: true });\n  }\n\n\n  render() {\n    const { contaktiChat, loading } = this.state;\n    const { translations } = contaktiChat;\n    if (loading) {\n      return null;\n    }\n    return (\n      <div id=\"contakti-chat-main\">\n        <ReactResizeDetector handleWidth handleHeight onResize={this.onResize} >\n          <div id=\"contakti-msg-box\" className=\"chat-plugin-parent\" style={{ right: '0px', bottom: '0px' }}>\n            <div className=\"cart-parent\" style={{ display: this.state.showCart ? \"block\" : \"none\" }}>\n              { (!this.state.cartEmpty)&&contaktiChat.chat_settings.enable_cart ? (\n              <Cart ref={instance => { this.cart = instance; }} contaktiChat={contaktiChat} onCartEmpty={this.hideCartIcon} />\n              ): \"\"}\n            </div>\n\n            <div className=\"chat-parent\">\n              <div id=\"contakti-msg-head\" onClick={this.showChatPlugin} className=\"msg_head\" style={this.state.style}>\n                <div>\n                  <div id=\"contakti-logo-container\">\n                    <img src={`${contaktiChat.origin}/${contaktiChat.chat_settings.file.url}`} />\n                  </div>\n                </div>\n\n                <span id=\"contakti-user-name\" style={{ color: contaktiChat.text_color }}>{translations.user_dashboard?.clientheading_chat}</span>\n\n                <span id=\"cart_show_button\" onClick={this.toggleCart} style={{ display: this.state.showCartIcon ? \"block\" : \"none\", margin: '5px', color: contaktiChat.text_color }}><i className=\"fa fa-shopping-cart mt-1\"></i></span>\n                <span>\n                  {this.state.showDropDown ? (<Dropdown styleObj={this.state.style} showDropdown={this.state.showDropDown} quit={() => { this.chatBox.quitChat(); this.destroyChat() }} sendChatHistory={() => this.chatBox.showSendChatHistory()} downloadChatHistory={() => { this.chatBox.downloadChat(); }} startChat={() => this.showChatPlugin()} />) : \"\"}\n                </span>\n\n                <div id=\"contakti-msg-minimize\" >\n                  {this.state.showMinimize ? (\n                    <span className=\"fa-stack\" onClick={this.hideChatPlugin} style={{ color: contaktiChat.text_color }}><i className=\"fa fa-stack-2x fa-angle-down\" style={{ top: '3px', left: '0px' }}></i></span>\n                  ) : \"\"}\n                </div>\n              </div>\n              <div>\n              </div>\n              <div>\n                {this.state.chatInitialized ? (\n                  <div style={{ display: this.state.showPlugin ? \"block\" : \"none\" }}>\n                    {this.state.showNoAgentScreen ? (<CallBackBox contaktiChat={contaktiChat} showNoAgentOnlineScreen={this.showNoAgentOnlineScreen} ></CallBackBox>) : (\n                      <ChatBox ref={instance => { this.chatBox = instance; }}\n                        contaktiChat={contaktiChat}\n                        toggleDropDown={this.toggleDropDown}\n                        showNoAgentOnlineScreen={this.showNoAgentOnlineScreen}\n                        quit={() => { this.destroyChat() }}\n                        setChatStarted={this.setChatStarted}\n                        startChat={() => this.showChatPlugin()}\n                        addToCart={(product) => { this.addToCart(product) }}\n                      ></ChatBox>)}\n                  </div>\n                ) : \"\"}\n              </div>\n            </div>\n          </div>\n        </ReactResizeDetector>\n      </div>\n    );\n  }\n}\n\nexport default ChatPlugin;\n","import React, { Component } from 'react';\nimport './App.scss';\nimport './components/chat_plugin/ChatPlugin'\nimport ChatPlugin from './components/chat_plugin/ChatPlugin';\nimport ContaktiChat from './classes/ContaktiChat';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <ChatPlugin />\n    );\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './style.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}