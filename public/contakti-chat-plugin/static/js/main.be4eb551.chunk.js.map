{"version":3,"sources":["classes/Api.js","classes/ContaktiChat.js","components/chat_plugin/Dropdown.jsx","classes/MessageFactory.js","classes/ChatUtils.js","components/modules/utils/Text.jsx","components/modules/utils/CarouselWrapper.jsx","components/chat_box/MessageImagesModal.jsx","components/chat_box/Message.jsx","components/others/SendChatHistory.jsx","components/chat_box/ChatBox.jsx","components/others/CallBackBox.jsx","components/shopping_cart/Product.jsx","components/shopping_cart/Cart.jsx","components/shopping_cart/ProductInfoModal.jsx","components/chat_plugin/ChatPlugin.jsx","App.js","reportWebVitals.js","index.js"],"names":["Api","document","location","origin","includes","this","serverUrl","baseUrl","prototype","get","a","route","fetch","res","json","data","post","method","cache","headers","body","JSON","stringify","response","postFile","file_data","ContaktiChat","locale","serviceChannel","chat_settings","url_obj","serverProtocol","api","channel","settings","chat_inquiry_fields","chat_initial_buttons","chatBotEnabled","enable_chatbot","chatWithHuman","initialMsg","initial_msg","color","text_color","agents_online","translations","Dropdown","props","toggle_dropdown","e","setState","expanded","state","mouseover","target","style","styleObj","backgroundColor","mouseout","end","quit","showEndChat","sendchatHistory","sendChatHistory","showSendEmail","showStart","startChat","downloadChat","downloadChatHistory","className","id","onClick","hidden","onMouseOver","onMouseOut","user_dashboard","download_txt_file","display","send_to_email","end_chat","start_new_chat","Component","ChatMessage","asJSON","ChatMessageFactory","options","from","username","type","initialise","newMessage","message","chatBot","msg","channel_id","chatbot","quitMessage","botToHumanSwitchMessage","fileMessage","file_url","file_path","ChatUtils","replaceURLs","replace","url","hyperlink","match","replaceAllNewLines","getUrlParams","params","split","forEach","pair","map","decodeURIComponent","length","Text","parse","text","CarouselWrapper","handleSelect","selectedIndex","index","activeIndex","Carousel","onSelect","images","image","Item","src","file","alt","file_name","MessageImagesModal","handleClose","Modal","show","showModal","onHide","Body","Message","handleMessageImageShow","imageIndex","modalImages","handleMessageImageClose","userName","fromTime","envelope","fromColor","contaktiChat","bgClass","download","rel","href","upload_chat","gridTemplateColumns","borderColor","files","name","products","product","title","addToCart","handleProductShow","action_buttons","btn_text","i","sendCustomActionMessage","moment","timestamp","local","format","userInfo","info","SendChatHistory","handleChange","event","key","value","sendEmail","email","chat_history","quitChat","cancel","transcript","bgColor","send_chat_history_title","onChange","placeholder","messageemail_chat","messagemsg_chat","rows","margin","messagesend_chat","messagesend_cancel","position","ChatBox","onStartClientResponse","agentPresent","setSendDisabled","callback","onMessageReceived","connect","chatChannel","fayeServer","server","window","Danthes","sign","setTimeout","displayNoAgentOnlineScreen","timeOut","contakti_chat","showNoAgentOnlineScreen","connectTimeout","scrollDown","showNoAgentOnline","successCallback","agent_online","indicators","getElementById","messageCame","localStorage","getItem","setItem","innerHTML","typing_text","removeItem","agentsCount","quit_chat","join_chat","welcome_message","agentName","clearTimeout","ask_human_to_help","innerText","changeFromBotToHumanChat","messages","chat_transcript","push","getChatTranscript","has_custom_action","custom_action_text","showCustomActionButtion","customActionButtionText","client_data","field","label","_","camelCase","phone","chat_display_fields","sendMessage","msg_text","messageFactory","_channelUrl","messagesListContainer","scrollIntoView","behavior","block","inline","sendQuitNotify","quitSent","encodeURIComponent","_channelIndicatorUrl","onKeyIndicator","onKeyPress","keyCode","onSendClicked","preventDefault","showDetailInput","showChat","toggleDropDown","bot_alias","enable_initial_buttons","btn","moment1","msgs","setChatStarted","disableChatSendDisabled","updateUserDetail","uploadFile","fileInput","click","handleFileChange","formdata","FormData","append","uploadedFileUrls","showSendChatHistory","showSendChatHistoryFlag","fileDownload","createTicket","task_data","messageContainer","started","messagEnvelopes","disableMessageInput","Object","keys","chat","msgFactory","bottom","getElementsByClassName","classList","remove","onclick","_onSendClicked","bind","minimized","inquiryData","onSubmit","maxHeight","overflow","marginTop","input_type","required","textAlign","marginBottom","start_chat","ref","el","chat_not_available","chat_leave_a_message_link","disabled","type_message","charCode","visibility","attachment_chat","marginRight","instance","CallBackBox","createCallBack","number","date","time","datetime","Date","thanks_chat","callBackSent","fontSize","paddingTop","sentmessage_chat","callback_chat","cbnumber_chat","clear","time_chat","width","float","boxSizing","paddingRight","message_chat","Product","onProductRemove","p","increaseQuantity","decreaseQuantity","quantity","replaceProduct","product_title","price","action","handleShow","readonly","currency","colSpan","total","Cart","reject","onCartEmpty","countSum","addProduct","find","sum","each","findIndex","splice","selectedProduct","shopping_cart","cart_title","toggleCart","payment_method","shipment_method","checkout","ProductInfoModal","Header","closeButton","Title","description","attachments","f","Footer","Button","variant","background","buttonColor","size","btnText","ChatPlugin","handleProductModalClose","showProductModal","handleProductModalShow","flag","showDropDown","chatStarted","showNoAgentScreen","showChatPlugin","chatInitialized","showPlugin","cont_chat","setSettings","showMinimize","cartEmpty","showCartIcon","hideChatPlugin","stopPropagation","showCart","destroyChat","onResize","height","parent","postMessage","cart","hideCartIcon","loading","urlParams","serviceChannelId","setServiceChannel","setTranslations","parent_width_class","outerWidth","handleWidth","handleHeight","product_details","close","enable_cart","chat_title","showDropdown","chatBox","top","left","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.be4eb551.chunk.js","sourcesContent":["const Api = function (options= {}) {\n    \n    // this.serverUrl = process.env.HOST_NAME\n    // this.serverProtocol = process.env.PROTOCOL\n    // this.origin = options.host || 'http://localhost:3000'\n\n    if (document.location.origin.includes(\":300\"))\n    {\n        this.origin = 'http://localhost:3000'\n    }\n    else{\n        this.origin = document.location.origin\n    }\n    \n    this.serverUrl = this.origin + '/api/v1'\n    this.baseUrl = this.serverUrl;\n}\n\nApi.prototype.origin = \"ASdas\"\n\nApi.prototype.get = async function (route = '') {\n    const res = await fetch(`${this.baseUrl}/${route}`)\n    const data = await res.json()\n    if (!data) {\n        return null\n    }\n    else {\n        return data\n    }\n}\nApi.prototype.post = async function (route = '', data = {}) {\n    const response = await fetch(`${this.baseUrl}/${route}`, {\n        method: 'POST',\n        cache: 'no-cache',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data) \n    });\n    return await response.json();\n}\n\nApi.prototype.postFile = async function (route = '', file_data = {}) {\n    const response = await fetch(`${this.baseUrl}/${route}`, {\n        method: 'POST',\n        cache: 'no-cache',\n        body: file_data \n    });\n    return await response.json();\n}\nexport default Api\n\n\n","import Api from \"./Api\";\n\nclass ContaktiChat {\n    constructor(options = {}) {\n        // this.serverProtocol = process.env.PROTOCOL\n        if (document.location.origin.includes(\":300\"))\n        {\n            this.origin = 'http://localhost:3000'\n        }\n        else{\n            this.origin = document.location.origin\n        }\n\n        this.serverUrl = this.origin + '/api/v1'\n        this.locale = 'en';\n        this.serviceChannel = null;\n        this.chat_settings = {};\n        this.url_obj = {\n            serverUrl: this.serverUrl,\n            serverProtocol: this.serverProtocol\n        };\n        this.api = new Api(this.url_obj);\n    }\n    setServiceChannel(channel){\n        this.serviceChannel = channel;\n    }\n\n    async setSettings() {\n        let res = await this.api.get(`chat/${this.serviceChannel}/get_chat_settings`);\n        this.chat_settings = res.settings;\n        this.chat_settings.chat_inquiry_fields = res.chat_inquiry_fields;\n        this.chat_settings.chat_initial_buttons = res.chat_initial_buttons;\n        this.chatBotEnabled = this.chat_settings.enable_chatbot;\n        this.chatWithHuman = !(this.chat_settings.enable_chatbot);\n        this.initialMsg = this.chat_settings.initial_msg;\n        this.color = this.chat_settings.color;\n        this.text_color = this.chat_settings.text_color;\n        this.agents_online = res.agents_online;\n    }\n    async setTranslations() {\n        this.translations = await this.api.get(`chat/get_translations`);\n    }\n}\n\nexport default ContaktiChat\n","import React, { Component } from 'react';\n\nclass Dropdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: false,\n      showSendEmail: true,\n      showStart: false,\n      showEndChat: true,\n    }\n  }\n\n\n  // document.onclick = (event){\n  // \tif(!event.target.classList.contains('dropdown-toggle') && !event.target.classList.contains('fa-cog')){\n  // \t\tif(document.querySelector('.dropdown')){\n  // \t\t\tdocument.querySelector('.dropdown').classList.remove(\"open\");\n  // \t\t}\n  // \t}\n  // }\n\n  toggle_dropdown = (e) => {\n    // ele.parentElement.classList.remove(\"close-force\");\n    // e.target.parentNode.classList.toggle(\"open\");\n    this.setState({ expanded: !this.state.expanded });\n  }\n   mouseover = (e) => {\n    e.target.style.color = this.props.styleObj.color;\n    e.target.style.backgroundColor = this.props.styleObj.backgroundColor;\n  }\n  mouseout = (e) => {\n    e.target.style.color = this.props.styleObj.backgroundColor;\n    e.target.style.backgroundColor = this.props.styleObj.color;\n  }\n\n  end = () => {\n    this.props.quit();\n    this.setState({showEndChat: false});\n  }\n\n  sendchatHistory = () =>{\n    this.toggle_dropdown();\n    this.props.sendChatHistory();\n    this.setState({showSendEmail: false, showStart: true});\n  }\n\n  startChat =  async() =>{\n    this.setState({showStart: false});\n    await this.props.quit();\n    await this.props.startChat();\n  }\n\n  downloadChat = () => {\n    this.props.downloadChatHistory();\n  }\n\n\n  // mouseoverdownload(e) {\n  //   var x = document.getElementById(\"download_chat_history\");\n  //   x.style.color = document.getElementById('contakti-user-name').style.color;\n  //   x.style.backgroundColor = document.getElementById('contakti-msg-head').style.backgroundColor;\n  // }\n\n  // mouseoutdownload(e) {\n  //   var x = document.getElementById(\"download_chat_history\");\n  //   x.style.color = document.getElementById('contakti-msg-head').style.backgroundColor;\n  //   x.style.backgroundColor = document.getElementById('contakti-user-name').style.color;\n  // }\n\n  // mouseoversend(e) {\n  //   var y = document.getElementById(\"send_chat_history\");\n  //   y.style.color = document.getElementById('contakti-user-name').style.color;\n  //   y.style.backgroundColor = document.getElementById('contakti-msg-head').style.backgroundColor;\n  // }\n\n  // mouseoutsend(e) {\n  //   var y = document.getElementById(\"send_chat_history\");\n  //   y.style.color = document.getElementById('contakti-msg-head').style.backgroundColor;\n  //   y.style.backgroundColor = document.getElementById('contakti-user-name').style.color;\n  // }\n\n  // mouseovercancel(e) {\n  //   var z = document.getElementById(\"contakti-msg-close-chat\");\n  //   z.style.color = document.getElementById('contakti-user-name').style.color;\n  //   z.style.backgroundColor = document.getElementById('contakti-msg-head').style.backgroundColor;\n  // }\n\n  // mouseoutcancel(e) {\n  //   var z = document.getElementById(\"contakti-msg-close-chat\");\n  //   z.style.color = document.getElementById('contakti-msg-head').style.backgroundColor;\n  //   z.style.backgroundColor = document.getElementById('contakti-user-name').style.color;\n  // }\n\n  // mouseoverstart(e) {\n  //   var z = document.getElementById(\"contakti-msg-start-chat\");\n  //   z.style.color = document.getElementById('contakti-user-name').style.color;\n  //   z.style.backgroundColor = document.getElementById('contakti-msg-head').style.backgroundColor;\n  // }\n\n  // mouseoutstart(e) {\n  //   var z = document.getElementById(\"contakti-msg-start-chat\");\n  //   z.style.color = document.getElementById('contakti-msg-head').style.backgroundColor;\n  //   z.style.backgroundColor = document.getElementById('contakti-user-name').style.color;\n  // }\n\n\n\n\n\n  render() {\n    const {translations} = this.props\n    return (\n      <div className=\"dropdown chat-setting d--inline-block\" id=\"chat-setting-dropdown\" >\n        <button\n         style={{ color: this.props.styleObj.color }}\n          className=\"dropdown-toggle\"\n          onClick={this.toggle_dropdown}\n        >\n          <i className=\"fa fa-cog\"></i></button>\n\n        <ul className=\"chatsetting-dropdown-menu\" hidden={this.state.expanded ? false : true } id=\"chat-setting-dropdown-menu\">\n          <li>\n            <a id=\"download_chat_history\" style={{color: this.props.styleObj.backgroundColor, backgroundColor: this.props.styleObj.color }} onClick={this.downloadChat}  onMouseOver={this.mouseover} onMouseOut={this.mouseout}>\n             {translations.user_dashboard.download_txt_file}\n            </a>\n          </li>\n          <li>\n            <a id=\"send_chat_history\" style={{ display:this.state.showSendEmail? \"block\": \"none\", color: this.props.styleObj.backgroundColor, backgroundColor: this.props.styleObj.color }} onClick={this.sendchatHistory} onMouseOver={this.mouseover} onMouseOut={this.mouseout}>\n            {translations.user_dashboard.send_to_email}\n            </a>\n          </li>\n          <li>\n            <a id=\"contakti-msg-close-chat\" onClick={this.end} style={{ display:this.state.showEndChat? \"block\": \"none\" , color: this.props.styleObj.backgroundColor, backgroundColor: this.props.styleObj.color }} onMouseOver={this.mouseover} onMouseOut={this.mouseout}>\n            {translations.user_dashboard.end_chat}\n            </a>\n            <a id=\"contakti-msg-start-chat\" style={{ display:this.state.showStart? \"block\": \"none\", color: this.props.styleObj.backgroundColor, backgroundColor: this.props.styleObj.color }} onClick={this.startChat} onMouseOver={this.mouseover} onMouseOut={this.mouseout}>\n            {translations.user_dashboard.start_new_chat}\n            </a>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Dropdown;","const ChatMessage = function() {\n\n};\n\nChatMessage.prototype.asJSON = function() {\n    return JSON.stringify(this);\n};\nconst ChatMessageFactory = function(options) {\n    this.from = options.username;\n    this.channel = options.channel;\n    this.type = 'message';\n\n};\n\nChatMessageFactory.prototype.initialise = function() {\n\n}\nChatMessageFactory.prototype.newMessage = function(message, type, chatBot = false, from) {\n    var msg = new ChatMessage();\n    msg.from = from || this.from;\n    msg.channel_id = this.channel;\n    msg.type = type || this.type;\n    msg.chatbot = chatBot;\n    msg.message = message;\n    return msg;\n};\n\nChatMessageFactory.prototype.quitMessage = function() {\n    var msg = new ChatMessage();\n    msg.from = this.from;\n    msg.channel_id = this.channel;\n    msg.type = 'quit';\n    msg.message = 'Quitting.';\n    return msg;\n};\n\nChatMessageFactory.prototype.botToHumanSwitchMessage = function() {\n    var msg = new ChatMessage();\n    msg.from = this.from;\n    msg.channel_id = this.channel;\n    msg.type = 'botToHuman';\n    msg.message = 'Requesting human..';\n    return msg;\n};\n\n\nChatMessageFactory.prototype.fileMessage = function(file_url, file_path) {\n    var msg = new ChatMessage();\n    msg.from = this.from;\n    msg.channel_id = this.channel;\n    msg.type = 'file';\n    msg.message = file_url;\n    msg.file_path = file_path;\n    return msg;\n};\n\n\nexport default ChatMessageFactory","class ChatUtils {\n  static replaceURLs = (message) => {\n    if (!message) return '';\n    var urlRegex = /(((https?:\\/\\/)|(www\\.))[^\\s]+)/g;\n    let new_message = message.replace(urlRegex, function (url) {\n      var hyperlink = url;\n      if (!hyperlink.match('^https?:\\/\\/')) {\n        hyperlink = 'http://' + hyperlink;\n      }\n      return '<a href=\"' + hyperlink + '\" target=\"_blank\" rel=\"noopener noreferrer\">' + url + '</a>'\n    });\n\n    return new_message;\n  }\n\n  static replaceAllNewLines = (message) => {\n    if (!message) return '';\n    return message.replace(/\\n/g, '<br/>');\n  }\n\n  static getUrlParams = (url) => {\n    var params = {};\n    (url + '?').split('?')[1].split('&').forEach(\n      function (pair) {\n        pair = (pair + '=').split('=').map(decodeURIComponent);\n        if (pair[0].length) {\n          params[pair[0]] = pair[1];\n        }\n      });\n\n    return params;\n  }\n};\n\nexport default ChatUtils","import parse from 'html-react-parser';\n\nconst Text = (props) => {\n    return parse(props.text)\n}\n \nexport default Text;","import React, { Component } from 'react';\nimport { Carousel } from 'react-bootstrap';\nclass CarouselWrapper extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { index: 0}\n    }\n    componentDidMount(){\n        let activeIndex = this.props.activeIndex ;\n        this.setState({ index: activeIndex});\n    }\n    handleSelect= (selectedIndex, e) => {\n        this.setState({ index: selectedIndex  });\n    }\n    render() { \n        \n        return ( <> \n        <Carousel activeIndex={this.state.index} onSelect={this.handleSelect}>\n            {this.props.images.map((image, index) => {\n                return (\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src={`${this.props.origin}${image.file.url}`}\n                            alt={image.file_name}\n                        />\n                    </Carousel.Item>\n                )\n            })}\n\n        </Carousel></> );\n    }\n}\n \nexport default CarouselWrapper;","import React, { Component } from 'react';\nimport { Button, Modal, } from 'react-bootstrap'\nimport CarouselWrapper from '../modules/utils/CarouselWrapper';\nclass MessageImagesModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    handleClose = () => {\n        this.props.handleClose()\n    }\n    render() {\n        return (\n            <>\n                <Modal show={this.props.showModal} onHide={this.handleClose}>\n                    <Modal.Body>\n                        <CarouselWrapper\n                            images={this.props.images}\n                            origin={this.props.origin}\n                            activeIndex={this.props.activeIndex}\n                        />\n                    </Modal.Body>\n                </Modal>\n            </>\n        );\n    }\n}\n\nexport default MessageImagesModal;","import React, { Component } from 'react';\nimport moment from 'moment';\nimport ChatUtils from '../../classes/ChatUtils';\nimport Text from '../modules/utils/Text';\nimport MessageImagesModal from './MessageImagesModal';\nclass Message extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.userName,\n      fromTime: this.props.envelope.from === this.username ? 'time_b' : 'time_a',\n      fromColor: this.props.from === this.username ? 'from_b' : 'from_a',\n      imageIndex: null,\n      showModal: false,\n      modalImages: []\n    }\n  }\n  handleMessageImageShow = (index, images) => {\n    this.setState({ imageIndex: index, showModal: true, modalImages: images});\n  }\n  handleMessageImageClose = () => {\n    this.setState({ showModal: false  });\n  }\n\n  render() {\n    var { contaktiChat } = this.props;\n\n    return (\n      <div className={this.props.bgClass} >\n        <MessageImagesModal\n         showModal={this.state.showModal}\n         activeIndex={this.state.imageIndex}\n         images={this.state.modalImages}\n         handleClose={this.handleMessageImageClose}\n         origin={contaktiChat.origin}/>\n        {this.props.envelope.type === 'file' ? (\n          <a download target=\"_blank\" rel=\"noreferrer\" href={ChatUtils.replaceAllNewLines(this.props.envelope.message)}>{`${this.props.envelope.from} ${contaktiChat.translations.user_dashboard.upload_chat}`}</a>\n\n        ) : (\n          <Text text={ChatUtils.replaceAllNewLines(ChatUtils.replaceURLs(this.props.envelope.message))} />\n        )}\n        { this.props.envelope.images ? (<div style={{gridTemplateColumns: \"auto auto auto auto\"}} className=\"d-grid mt-1\">\n          { this.props.envelope.images.map((image, index) => {\n            return(<div className=\"me-1 mb-1\">\n              <img src={`${contaktiChat.origin}${image.file.url}`} onClick={() => { this.handleMessageImageShow(index, this.props.envelope.images)}} style={{borderColor: contaktiChat.color}} className=\"img-thumbnail\"></img>\n            </div>)\n          })}\n\n        </div>) : \"\"\n        }\n        {\n          this.props.envelope.files ? (this.props.envelope.files.map((file) => {\n            return (\n              <div>\n                <a download target=\"_blank\" rel=\"noreferrer\" href={file.url}>{file.name}</a>\n              </div>)\n\n          })) : \"\"\n        }\n        {this.props.envelope.products ? (\n          <div id=\"chat-answer-products-wrapper\" className=\"mt-1\">\n            {this.props.envelope.products.map(product => {\n              return (<div className=\"answer_product\" key={`product-item-${product.id}`}>\n                <div className=\"child1\"><strong>{product.title}</strong> </div>\n                <div className=\"child2\">\n                  <a href=\"#\" onClick={() => this.props.addToCart(product)} className=\"add-to-cart-btn\" data-product-id={product.id} style={{ color: contaktiChat.text_color, backgroundColor: contaktiChat.color }}>\n                    <i className=\"fa fa-shopping-cart\"></i>\n                  </a>\n                </div>\n                <span onClick={() => {this.props.handleProductShow(product)}}> <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i> </span>\n              </div>)\n            })\n            }\n          </div>\n        ) : \"\"}\n\n        {this.props.envelope.action_buttons ? (\n          <div>\n            {this.props.envelope.action_buttons.map((btn_text, i) => {\n              return (\n                <div key={`action-buttons-${i}`}>\n                  <br />\n                  <button className=\"action-button\" style={{ backgroundColor: contaktiChat.color, color: contaktiChat.text_color }} onClick={this.props.sendCustomActionMessage}><Text text={btn_text} /> </button>\n                  <br />\n                </div>\n              )\n\n            })\n            }\n          </div>\n\n        ) : \"\"}\n        {\n          this.props.envelope.type !== 'quit' && this.props.envelope.type !== 'initial' ? (\n            <div>\n              <br />\n              <div className={`msg_time${this.state.fromTime}`}> {moment(this.props.envelope.timestamp ? this.props.envelope.timestamp : \"\").local().format('D.M.YYYY HH.mm')}</div>\n              <div className={`msg_from${this.state.fromColor}`}>{this.props.envelope.from} </div>\n              {this.props.envelope.from === this.props.userName ? (\n                <div>\n                  {this.props.userInfo.map((info, i) => {\n                    return (<div key={`user-info-${i}`} className={`msg_from${this.state.fromColor}`}>{info} </div>)\n                  })}\n                </div>\n              ) : \"\"}\n            </div>\n          ) : \"\"}\n      </div>);\n  }\n}\n\nexport default Message;\n","import React, { Component } from 'react';\nimport Api from '../../classes/Api';\nclass SendChatHistory extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            chat_history: \"\"\n        }\n    }\n    componentDidMount() {\n        this.setState({ chat_history: this.props.transcript });\n    }\n\n    handleChange = (event, key) => {\n        let state = this.state;\n        let inputName = event.target.name;\n        state[inputName] = event.target.value;\n        this.setState({ ...state });\n    }\n\n    sendEmail = () => {\n        let email = this.state.email;\n        let message = this.state.chat_history;\n        var url = 'chat/' + this.props.contaktiChat.serviceChannel + '/send_email_chat_history';\n        let data = { email: email, message: message };\n        new Api().post(url, data);\n        this.props.quitChat();\n    }\n\n    cancel = async () => {\n       await this.props.quitChat();\n        this.props.startChat();\n    }\n\n    render() {\n        const translations = this.props.contaktiChat.translations.user_dashboard\n        const color = this.props.bgColor\n        return (\n            <div id=\"contakti-user-details\" className=\"flex-column justify-content-between d-flex pt-2 px-1\">\n                <div>\n                  <label>{translations.send_chat_history_title}</label>\n                  <input type=\"email\" name=\"email\" onChange={this.handleChange} value={this.state.email} placeholder={translations.messageemail_chat} className=\"form-control callback-control\" id=\"send-chat-history-email\" />\n                  <br /><br />\n                  <textarea placeholder={translations.messagemsg_chat} className=\"form-control sendchat--history\" rows=\"4\" id=\"send-chat-history-message\" name=\"chat_history\" onChange={this.handleChange} value={this.state.chat_history} ></textarea>\n                  <br />\n                  <input type=\"hidden\" id=\"chat-client-container\" name=\"chat-client-container\" />\n                </div>\n                <div className=\"pb-2\">\n                  <div className=\"send-button-container pull-left\">\n                      <button id=\"send-chat-history-send\" className=\"send\" style={{ backgroundColor: color, margin: \"5px\" }}    onClick={this.sendEmail}>{translations.messagesend_chat}  </button>\n                      <span></span>\n                      <button id=\"send-chat-history-cancel\" className=\"send\" style={{ backgroundColor: color, margin: \"5px\" }}  onClick={this.cancel} >{translations.messagesend_cancel}</button>\n                  </div>\n                  <div className=\"pull-right\">\n                      Powered by <a href=\"http://contakti.com\" target=\"_blank\" rel=\"noreferrer\" style={{ position: \"relative\" }}>contakti.com</a>\n                      <div className=\"send-button-container pull-left\">\n\n                      </div>\n                  </div>\n                </div>\n            </div>);\n    }\n}\n\nexport default SendChatHistory;","import React, { Component } from 'react';\nimport ChatMessageFactory from '../../classes/MessageFactory';\nimport Message from './Message';\nimport Api from '../../classes/Api';\nimport moment from 'moment';\nimport SendChatHistory from '../others/SendChatHistory';\nimport _ from 'lodash';\nclass ChatBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chatChannel: null,\n      fayeServer: null,\n      messageContainer: document.getElementById('chat_area'),\n      username: '',\n      email: '',\n      phone: '',\n      messageFactory: new ChatMessageFactory({ username: this.username, channel: this.chatChannel, email: this.email, phone: this.phone }),\n      quitSent: false,\n      messageCame: false,\n      agentPresent: false,\n      agentsCount: 0,\n      connectTimeout: 0,\n      started: false,\n      messages: [],\n      messagEnvelopes: [],\n      contaktiChat: {},\n      showDetailInput: true,\n      showChat: false,\n      newMessage: \"\",\n      disableChatSendDisabled: false,\n      disableMessageInput: false,\n      showNoAgentOnline: false,\n      agentName: \"\",\n      showSendChatHistoryFlag: false,\n      chat_transcript: \"\",\n      showCustomActionButtion: false,\n      customActionButtionText: \"\",\n      uploadedFileUrls: [],\n    }\n  }\n  componentDidMount() {\n    if (!this.props.contaktiChat || (this.props.contaktiChat && Object.keys(this.props.contaktiChat).length === 0)) {\n      return;\n    }\n    let chat = this.props.contaktiChat\n\n    this.setState({ messageContainer: document.getElementById('chat_area') });\n    this.setState({ contaktiChat: chat }, async () => {\n      if (this.state.contaktiChat.chat_settings.format !== \"inquiry\" || this.state.contaktiChat.chat_settings.chat_inquiry_fields.length === 0) {\n        await this.startChat();\n      }\n      // window.onbeforeunload = this.quitChat;\n    });\n    this.setSendDisabled();\n  }\n\n  onStartClientResponse = (response) => {\n    if ((!this.state.agentPresent) && this.state.contaktiChat.chatWithHuman) {\n      this.setSendDisabled()\n    }\n\n    response.callback = this.onMessageReceived;\n    response.connect = true;\n\n    this.setState({ chatChannel: response.channel });\n    this.setState({ fayeServer: response.server });\n    window.Danthes.sign(response);\n    // Set client info in redis to use when client closes or reloads the chat.\n    setTimeout(() => {\n      const url = this.state.contaktiChat.serverUrl + `/chat/set_client_info?channel_id=${this.state.chatChannel}`\n      fetch(url, {\n        \"Content-Type\": \"application/json\"\n      });\n    }, 2000);\n\n  };\n\n\n\n  displayNoAgentOnlineScreen = (timeOut = 60000) => {\n    let contakti_chat = this.state.contaktiChat;\n    if (contakti_chat.agents_online == false && contakti_chat.chatWithHuman == true)\n    {\n      this.props.showNoAgentOnlineScreen();\n    }\n    else{\n      this.setState({\n        connectTimeout: setTimeout(() => {\n          this.scrollDown();\n          this.setState({ showNoAgentOnline: true });\n        }, timeOut)\n      });\n    }\n\n  };\n\n  successCallback = (data) => {\n    let contakti_chat = this.state.contaktiChat;\n    if (data.agent_online == false)\n    {\n      this.displayNoAgentOnlineScreen(0);\n    }\n    else\n    {\n      contakti_chat.chatWithHuman = true;\n      contakti_chat.chatBotEnabled = false;\n      this.setState({ contaktiChat: contakti_chat }, () => {\n        this.setSendDisabled();\n        this.displayNoAgentOnlineScreen();\n      });\n    }\n  }\n  onMessageReceived = (envelope) => {\n    if (envelope.type === 'indicator') {\n      return\n    }\n    //TODO indicators\n    var indicators = document.getElementById('contakti-msg-indicator');\n    this.setState({ messageCame: true });\n    if (envelope.type === 'agent_indicator') {\n      indicators = document.getElementById('contakti-msg-indicator');\n      var has_cookies = localStorage.getItem('indicator_state')\n      if (!has_cookies) {\n        // setCookies\n        localStorage.setItem('indicator_state', 'true')\n        indicators.innerHTML = envelope.from + this.state.contaktiChat.translations.user_dashboard.typing_text + '<div id=\"wave\"> <span class=\"dot\"></span> <span class=\"dot\"></span> <span class=\"dot\"></span> </div>';\n        this.setState({\n          connectTimeout: setTimeout(function () {\n            var indicators = document.getElementById('contakti-msg-indicator');\n            indicators.innerHTML = '';\n            // remove cookie\n            localStorage.removeItem('indicator_state')\n          }, 5000)\n        });\n      }\n    }\n    else {\n      if (envelope.type === 'quit') {\n        this.setState({ agentsCount: this.state.agentsCount - 1 });\n        envelope.message = `${envelope.from} ${this.state.contaktiChat.translations.user_dashboard.quit_chat}`;\n        if (this.state.agentsCount < 1) {\n          // Disable send button. Do stuff!\n          this.setState({ agentPresent: false });\n          this.setSendDisabled();\n        }\n      }\n      else if (envelope.type === 'join') {\n        this.setState({ agentsCount: this.state.agentsCount + 1 });\n        if (this.state.agentPresent) {\n          envelope.message = `${envelope.from} ${this.state.contaktiChat.translations.user_dashboard.join_chat}`;\n        } else {\n          envelope.message = `${envelope.from} ${this.state.contaktiChat.chat_settings.welcome_message}`;\n        }\n        this.setState({ agentPresent: true, agentName: envelope.from });\n        clearTimeout(this.state.connectTimeout);\n        this.setSendDisabled();\n      }\n      else if (envelope.type === 'switch_to_human') {\n        envelope.message = `${this.state.contaktiChat.translations.user_dashboard.ask_human_to_help}`;\n        if (envelope.from !== this.username) {\n          indicators.innerText = \"\";\n        }\n        this.changeFromBotToHumanChat(this.successCallback);\n      }\n      let { messages, chat_transcript } = this.state;\n      messages.push(envelope);\n      chat_transcript = this.getChatTranscript()\n      this.setState({ messages, chat_transcript })\n      if (envelope.has_custom_action && envelope.custom_action_text) {\n        this.setState({ showCustomActionButtion: true, customActionButtionText: envelope.custom_action_text });\n      }\n      if (envelope.from !== this.state.username) {\n        indicators.innerText = \"\";\n      }\n\n    }\n    this.scrollDown();\n  };\n\n\n\n\n  changeFromBotToHumanChat = async (successCallback) => {\n\n    let client_data = [];\n    if (this.state.contaktiChat.chat_settings.format === 'inquiry') {\n      client_data = this.state.contaktiChat.chat_settings.chat_inquiry_fields.map(field => {\n        return { label: field.title, value: this.state[_.camelCase(field.title)] }\n      })\n    }\n    else {\n      client_data = [\n        { label: \"Name\", value: this.state.username }\n      ]\n    }\n    let params = {\n      chatbot: false,\n      channel_id: this.state.chatChannel,\n      name: this.state.username,\n      email: this.state.email,\n      phone: this.state.phone,\n      chat_display_fields: client_data\n    }\n    // var options = \"chatbot=\" + false + \"&name=\" + this.state.username + \"&email=\" + this.state.email + \"&phone=\" + this.state.phone + \"&channel_id=\" + encodeURIComponent(this.state.chatChannel);\n    let route = `/chat/${this.state.contaktiChat.serviceChannel}/bot_initiate_human_chat`;\n    let res = await new Api().post(route, params);\n    successCallback(res);\n  }\n\n\n  setUsername(name) {\n    if (!name) {\n      name = 'Anonymous';\n    }\n    this.setState({ username: name });\n    let msgFactory = this.state.messageFactory\n    msgFactory.from = name;\n    this.setState({ messageFactory: msgFactory });\n  };\n\n  sendCustomActionMessage = (e) => {\n    this.sendMessage(e.target.innerText);\n  }\n\n  sendMessage = (msg_text = \"\") => {\n    if (msg_text.length === 0) {\n      msg_text = this.state.newMessage;\n    }\n    if (msg_text.length > 0) {\n      var msg = this.state.messageFactory.newMessage(msg_text, null, this.state.contaktiChat.chatBotEnabled);\n      let route = this._channelUrl();\n      new Api().post(route, msg);\n      this.setState({ newMessage: \"\" })\n    }\n  };\n\n\n\n  _channelUrl = () => {\n    return this.state.chatChannel + '/send_msg';\n  };\n\n  scrollDown = () => {\n    if (this.messagesListContainer) {\n      this.messagesListContainer.scrollIntoView({ behavior: \"smooth\", block: \"end\", inline: \"nearest\" });\n    }\n  };\n\n  sendQuitNotify = () => {\n    if (this.state.quitSent) return;\n    this.setState({ quitSent: true });\n    var msg = this.state.messageFactory.quitMessage();\n    let route = this._channelUrl();\n    new Api().post(route, msg);\n    var ret = true ? null : ':D'; // Some browsers need fooling to evaluate onbeforeunload\n    return ret;\n  };\n\n  quitChat = async () => {\n    if (this.state.agentPresent) {\n      this.sendQuitNotify();\n    } else {\n      if (this.state.chatChannel) {\n        let route = `/chat/${this.state.contaktiChat.serviceChannel}/abort_chat?channel_id=${encodeURIComponent(this.state.chatChannel)}`;\n        await new Api().get(route);\n      }\n    }\n  };\n  _channelIndicatorUrl = () => {\n\n    return this.state.chatChannel + \"/send_indicator\";\n  };\n\n  onKeyIndicator = () => {\n    var msg = this.state.messageFactory.newMessage(\"Customer typing\");\n    let route = this._channelIndicatorUrl();\n    new Api().post(route, msg);\n  };\n\n  onKeyPress = (event) => {\n    var keyCode = event.keyCode;\n    if (keyCode !== 13) {\n      this.onKeyIndicator();\n    }\n\n  };\n\n  onSendClicked = (event) => {\n    this.setSendDisabled();\n    this.sendMessage();\n  };\n\n  startChat = async (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    let name = \"Anonymous\";\n    if (this.state.contaktiChat.chat_settings.format === 'inquiry') {\n      name = this.state[_.camelCase(this.state.contaktiChat.chat_settings.chat_inquiry_fields[0]?.title)]\n    }\n    this.setState({\n      showDetailInput: false,\n      showChat: true,\n      username: this.state.username.length > 0 ? this.state.username : name,\n      messageFactory: new ChatMessageFactory({\n        username: this.state.username.length > 0 ? this.state.username : name,\n        channel: this.state.chatChannel,\n        email: this.state.email,\n        phone: this.state.phone\n      })\n    });\n    this.props.toggleDropDown(true);\n    if (this.state.contaktiChat.chatWithHuman) {\n      this.displayNoAgentOnlineScreen();\n    }\n    let client_data = [];\n    if (this.state.contaktiChat.chat_settings.format === 'inquiry') {\n      client_data = this.state.contaktiChat.chat_settings.chat_inquiry_fields.map(field => {\n        return { label: field.title, value: this.state[_.camelCase(field.title)] }\n      })\n    }\n    else {\n      client_data = [\n        { label: \"Name\", value: name }\n      ]\n    }\n    let params = {\n      chatbot: this.state.contaktiChat.chatBotEnabled,\n      name: name,\n      email: this.state.email,\n      phone: this.state.phone,\n      chat_display_fields: client_data\n    }\n\n    let route = `chat/${this.state.contaktiChat.serviceChannel}/initiate_chat`;\n    let res = await new Api().post(route, params);\n\n    if (this.state.contaktiChat.initialMsg.length > 0) {\n      var msg = this.state.messageFactory.newMessage(this.state.contaktiChat.initialMsg, \"initial\", this.state.contaktiChat.chatBotEnabled, this.state.contaktiChat.chat_settings.bot_alias);\n      if (this.state.contaktiChat.chatBotEnabled && this.state.contaktiChat.chat_settings.enable_initial_buttons) {\n        msg.action_buttons = this.state.contaktiChat.chat_settings.chat_initial_buttons.map(btn => btn.title);\n      }\n      let moment1 = moment;\n      msg.timestamp = moment1().local().format();\n      let msgs = this.state.messages\n      msgs.push(msg);\n      this.setState({ messages: msgs });\n    }\n    this.props.setChatStarted();\n    this.onStartClientResponse(res);\n  };\n\n  setSendDisabled = (event) => {\n    if (!this.state.agentPresent && this.state.contaktiChat?.chatWithHuman) {\n      this.setState({ disableChatSendDisabled: true })\n      if (!this.state.agentPresent && this.state.contaktiChat?.chatWithHuman) {\n        this.setState({ disableChatSendDisabled: true })\n\n      }\n    } else {\n      this.setState({ disableChatSendDisabled: false })\n    }\n  };\n\n  maximize() {\n    document.getElementById('contakti-msg-box').style.bottom = '0px';\n    var chatSettingDrowpdown = document.getElementById('chat-setting-dropdown')\n    if (chatSettingDrowpdown && document.getElementsByClassName('show-dropdown').length > 0) {\n      document.getElementById('chat-setting-dropdown').style.display = \"block\";\n    }\n    document.getElementById('contakti-msg-minimize').classList.remove('hide');\n    var sendButton = document.getElementById('contakti-chat-send-btn');\n    sendButton.onclick = this._onSendClicked.bind(this);\n    this.setState({ messageContainer: document.getElementById('contakti-msg-body') });\n    this.setState({ minimized: false });\n  };\n\n  updateUserDetail = () => {\n  }\n\n  handleChange = (event, key) => {\n    let state = this.state;\n    let inputName = event.target.name;\n    state[inputName] = event.target.value;\n    this.setState({ ...state });\n  }\n  uploadFile = () => {\n    this.fileInput.click();\n  }\n  handleFileChange = async (e) => {\n    // const fileData = e.target.files[0];\n\n    let file = e.target.files[0];\n\n\n    var formdata = new FormData();\n    formdata.append(\"upload\", file, file.name);\n\n    let response = await new Api().postFile('chat/uploadfile', formdata);\n    this.state.uploadedFileUrls.push(response.file_url)\n    var msg = this.state.messageFactory.fileMessage(response.file_url, response.file_path);\n    let route = this._channelUrl();\n    new Api().post(route, msg);\n\n  }\n\n  showSendChatHistory = () => {\n    this.setState({ showSendChatHistoryFlag: true });\n  }\n  getChatTranscript = () => {\n    let transcript = \"\";\n    this.state.messages.forEach(message => {\n      transcript += message.message;\n      transcript += '\\n'\n      if (message.files) {\n        message.files.forEach(file => {\n          transcript += file.url;\n          transcript += '\\n'\n        })\n      }\n      if (message.action_buttons) {\n        message.action_buttons.forEach(btn_text => {\n          transcript += btn_text;\n          transcript += '\\n';\n        })\n      }\n      if (message.type !== 'quit') {\n        transcript += moment(message.timestamp ? message.timestamp : \"\").local().format('D.M.YYYY HH.mm')\n        transcript += '\\n';\n        transcript += message.from;\n        transcript += '\\n';\n      }\n      transcript += '\\n';\n    })\n    return transcript;\n  }\n\n  downloadChat = () => {\n    this.fileDownload.click();\n  }\n\n  createTicket = async () => {\n    const task_data = {};\n    task_data['channel_id'] = this.state.chatChannel\n    task_data['media_channel_id'] = this.state.contaktiChat.serviceChannel;\n    task_data['messages_attributes'] = [];\n    task_data['messages_attributes'][0] = {};\n    task_data['messages_attributes'][0]['title'] = \"\";\n    task_data['messages_attributes'][0][\"channel_type\"] = 'chat';\n    if (this.state.customActionButtionText.length > 0) {\n      task_data['messages_attributes'][0]['title'] = this.state.customActionButtionText;\n    }\n    task_data['messages_attributes'][0]['to'] = 'Internal';\n    task_data['messages_attributes'][0]['from'] = this.state.username;\n    task_data['user_uploaded_file_urls'] = this.state.uploadedFileUrls;\n    if (this.state.email.length > 0) task_data['messages_attributes'][0]['from'] = this.state.email;\n    let transcript = \"\";\n    if (this.state.contaktiChat.chat_settings.format === 'inquiry') {\n      this.state.contaktiChat.chat_settings.chat_inquiry_fields.forEach(field => {\n        transcript += `${field.title} : ${this.state[_.camelCase(field.title)]}\\n`;\n      })\n    }\n    else {\n      transcript += `Name : ${this.state.username}\\n`;\n    }\n    transcript += `\\n`;\n    transcript += this.getChatTranscript();\n    task_data['messages_attributes'][0]['description'] = transcript;\n    task_data['type'] = 'chat';\n    const url = 'tasks/create_task_from_chat'\n    await new Api().post(url, task_data);\n    this.setState({ showCustomActionButtion: false, customActionButtionText: \"\" });\n    this.quitChat();\n    this.props.quit();\n  }\n\n  render() {\n    if (!this.state.contaktiChat) {\n      return null;\n    }\n    const { contaktiChat, disableChatSendDisabled } = this.state;\n    const { messages } = this.state;\n\n    let inquiryData = [];\n    if (contaktiChat.chat_settings?.format === 'inquiry') {\n      contaktiChat.chat_settings.chat_inquiry_fields.forEach((field, index) => {\n        if (index > 0) {\n          inquiryData.push(this.state[_.camelCase(field.title)]);\n        }\n      })\n    }\n\n\n\n    return (\n\n      <div id=\"contakti-msg-container\" className=\"msg_wrap h-100\">\n        <div id=\"contakti-chat-agent-details\" className=\"msg_agent\" style={{ display: this.state.agentName === \"\" ? \"none\" : \"block\", color: this.props.contaktiChat.text_color, backgroundColor: this.props.contaktiChat.color }}>\n          <div className=\"msg_agent_name\" id=\"contakti-chat-agent-name\">{this.state.agentName}</div>\n        </div>\n        {\n          contaktiChat?.chat_settings?.format === \"inquiry\" && contaktiChat?.chat_settings.chat_inquiry_fields.length > 0 ?\n            <div id=\"contakti-user-details\" className=\"h-100 px-1\" style={{ display: this.state.showDetailInput ? 'block' : 'none' }} >\n              <form className=\"flex-column justify-content-between d-flex h-100\" onSubmit={async (event) => { await this.startChat(event); }}>\n                <div style={{ maxHeight: \"330px\", overflow: \"auto\", marginTop: \"115px\" }} >\n                  {contaktiChat?.chat_settings.chat_inquiry_fields.map((field, index) => {\n                    return (<div key={`inquiry-fields-${index}`}><label>{field.title}</label>\n                      <input type={field.input_type} required className=\"form-control-start\" value={this.state[_.camelCase(field.title)] || \"\"} name={_.camelCase(field.title)} onChange={this.handleChange} id=\"contakti-input-name\" />\n                    </div>\n                    )\n                  })}\n                </div>\n                <div style={{ textAlign: 'center', marginBottom: \"20px\" }} >\n                  <div>\n                    <input type=\"submit\" id=\"contakti-input-details-submit\" className=\"btn btn-default btn-block\" value={contaktiChat.translations.user_dashboard.start_chat} style={{ backgroundColor: this.props.contaktiChat.color, color: this.props.contaktiChat.text_color }} />\n                  </div>\n                  <div >\n                    Powered by <a href=\"http://contakti.com\" target=\"_blank\" rel=\"noreferrer\">contakti.com</a>\n                  </div>\n                </div>\n              </form>\n            </div>\n            : null\n        }\n        {this.state.showSendChatHistoryFlag ? (<SendChatHistory contaktiChat={contaktiChat} bgColor={contaktiChat.color} transcript={this.state.chat_transcript} quitChat={() => { this.props.quit(); this.quitChat(); }} startChat={() => this.props.startChat()} />) : (\n          <div className={this.state.showDetailInput === false ? '' : 'd-none'}>\n\n            <div id=\"contakti-msg-body\" className=\"msg_bodyclient\">\n              {contaktiChat?.chat_settings?.format === \"inquiry\" && contaktiChat?.chat_settings.chat_inquiry_fields.length > 0 ? (\n                null\n              ) : \"\"}\n              <div style={{ display: this.state.showChat ? 'block' : 'none' }} id=\"chat_area\" ref={(el) => { this.messagesListContainer = el; }}>\n                {\n                  this.state.showNoAgentOnline ? (\n                    <div className=\"msg_n\">{contaktiChat.translations.user_dashboard.chat_not_available}<a href=\"#\" onClick={this.props.showNoAgentOnlineScreen} id=\"contakti_chat_not_available_link\"> {contaktiChat.translations.user_dashboard.chat_leave_a_message_link}</a></div>\n                  ) : (\n\n                    <div>\n                      {\n                        messages.map((message, index) => {\n                          return (\n                            <Message key={index}\n                              envelope={message}\n                              handleProductShow={this.props.handleProductShow}\n                              bgClass={message.from === this.state.username ? 'msg_b' : 'msg_a'}\n                              userName={this.state.username}\n                              sendCustomActionMessage={this.sendCustomActionMessage}\n                              addToCart={(product) => { this.props.addToCart(product) }}\n                              contaktiChat={contaktiChat}\n                              userInfo={inquiryData}\n                            />\n                          );\n\n                        })\n                      }\n                    </div>\n\n                  )}\n              </div>\n            </div>\n            <div id=\"contakti-msg-indicator\" className=\"msg_indictor\"> </div>\n            <div id=\"contakti-msg-footer\" className=\"msg_footer\" style={{ display: this.state.showChat ? 'block' : 'none' }}>\n              <div className=\"block-row\">\n                <div className=\"input-block\">\n                  <textarea\n                    id=\"contakti-chat-text-input\"\n                    value={this.state.newMessage}\n                    disabled={disableChatSendDisabled}\n                    name='newMessage'\n                    onChange={this.handleChange}\n                    className=\"msg_input form-control\"\n                    placeholder={contaktiChat?.translations?.user_dashboard.type_message}\n                    onKeyPress={(event) => {\n                      if (event.charCode === 13) {\n                        event.preventDefault();\n                        this.onSendClicked();\n                      }\n                      else {\n                        this.onKeyPress(event);\n                      }\n                    }}\n                    disabled={this.state.disableChatSendDisabled ? true : false}\n                    rows=\"3\" />\n                </div>\n                <div className=\"button-block\">\n                  <a\n                    className={`contakti-chat-send-btn ${this.state.newMessage.length > 0 ? \"\" : \"disabled\"}`}\n                    onClick={this.onSendClicked}\n                    style={{ backgroundColor: this.props.contaktiChat.color, color: this.props.contaktiChat.text_color }}>\n                    <span className=\"fa fa-send\"></span>\n                  </a>\n                </div>\n              </div>\n              <div className=\"block-row mb-1\">\n                <div className=\"pull-left\">\n                  <button id=\"custom_action_button\" onClick={this.createTicket} style={{ visibility: this.state.showCustomActionButtion ? 'visible' : 'hidden' }}> {this.state.customActionButtionText}</button>\n                </div>\n              </div>\n              <div className=\"block-row mb-10\">\n                <div className=\"pull-left\">\n                  <a onClick={this.uploadFile} id=\"contakti-open-file\">{contaktiChat.translations?.user_dashboard.attachment_chat}</a>\n                </div>\n                <div className=\"pull-right\">\n                  Powered by <a href=\"http://contakti.com\" target=\"_blank\" rel=\"noreferrer\" style={{ marginRight: '10px' }}>contakti.com</a>\n                </div>\n              </div>\n              <form id=\"contakti-file-upload-form\" style={{ display: 'none' }}>\n                <input type=\"file\" id=\"contakti-file-upload-input\" ref={instance => { this.fileInput = instance; }} name=\"upload\" onChange={this.handleFileChange} />\n              </form>\n            </div>\n          </div>\n        )}\n        <a ref={instance => { this.fileDownload = instance; }} style={{ display: \"none\" }} href={`data:text/plain;charset=utf-8,${encodeURIComponent(this.state.chat_transcript)}`} download=\"chat_history.txt\"></a>\n      </div>\n    );\n  }\n}\n\nexport default ChatBox;\n","import React, { Component } from 'react';\nimport Api from '../../classes/Api';\nimport Text from '../modules/utils/Text';\nclass CallBackBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      phone: \"\",\n      date: \"\",\n      time: \"\",\n      email: \"\",\n      message: \"\",\n      callBackSent: false\n\n    }\n  }\n\n  createCallBack = () => {\n    let number = this.state.phone\n    let date = this.state.date\n    let time = this.state.time\n    let datetime = '';\n    if (date.length > 0) {\n      datetime = new Date(`${date}`);\n      if (time.length > 0) {\n        datetime = new Date(`${date}T${time}`);\n      }\n    }\n    let email = this.state.email\n    let message = this.state.message\n    let url = '/chat/' + this.props.contaktiChat.serviceChannel + '/create_callback'\n    new Api().post(url, { number: number, datetime: datetime, email: email, message: message });\n    document.getElementById('contakti-user-name').innerHTML = this.props.contaktiChat.translations.user_dashboard.thanks_chat;\n    this.setState({callBackSent: true})\n  }\n\n\n  handleChange = (event, key) => {\n    let state = this.state;\n    let inputName = event.target.name;\n    state[inputName] = event.target.value;\n    this.setState({ ...state });\n  }\n  render() {\n    return (\n      <div className=\"call_back_box h-100\">\n      { this.state.callBackSent? (<div style={{textAlign: \"center\", fontSize: \"110%\", paddingTop: \"3em\"}}> <Text text={this.props.contaktiChat.translations.user_dashboard.sentmessage_chat} /> </div>) : (\n      <form id=\"contakti-user-details\" onSubmit={this.createCallBack} className=\"h-100 flex-column justify-content-between d-flex\">\n        <div className=\"row\">\n          <div className=\"col-12 pb-2\">\n            <label>{this.props.contaktiChat.translations.user_dashboard.callback_chat}</label>\n          </div>\n\n          <div className=\"col-12 pb-2\">\n            <div>\n              <div className=\"small-label pb-2\">{this.props.contaktiChat.translations.user_dashboard.cbnumber_chat}</div>\n              <input type=\"text\" onChange={this.handleChange} placeholder={this.props.contaktiChat.translations.user_dashboard.cbnumber_chat} name=\"phone\" className=\"form-control callback-control\" value={this.state.phone} id=\"messagebox-callback-number\" required />\n            </div>\n            <div style={{clear: \"both\"}}></div>\n          </div>\n\n          <div className=\"col-12\">\n            <div className=\"small-label pb-2\">{this.props.contaktiChat.translations.user_dashboard.time_chat}</div>\n            <div style={{clear: \"both\"}}></div>\n\n            <div style={{width: \"50%\", float: \"left\", boxSizing: \"border-box\",  paddingRight: \"20px\"}}>\n              <input type=\"date\" id=\"messagebox-date-field\" name=\"date\" value={this.state.date} onChange={this.handleChange} />\n            </div>\n\n            <div style={{width: \"50%\", float: \"left\", boxSizing: \"border-box\",  paddingRight: \"20px\"}}>\n              <input type=\"time\" id=\"messagebox-time-field\" name=\"time\" value={this.state.time} onChange={this.handleChange} />\n            </div>\n\n\n            <div style={{clear: \"both\"}}></div>\n          </div>\n          <div className=\"col-12 pb-2\">\n            <label>{this.props.contaktiChat.translations.user_dashboard.message_chat}</label>\n            <input type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} placeholder={this.props.contaktiChat.translations.user_dashboard.messageemail_chat} className=\"form-control callback-control\" id=\"messagebox-email\" required />\n            <br />\n            <textarea name=\"message\" value={this.state.message} onChange={this.handleChange} placeholder={this.props.contaktiChat.translations.user_dashboard.messagemsg_chat} className=\"form-control\" rows=\"8\" id=\"messagebox-message\"></textarea>\n\n          </div>\n        </div>\n          <div className=\"footer-sec\">\n            <div className=\"send-button-container pull-left\">\n              <button  type=\"submit\" id=\"messagebox-send\" className={`send ${this.state.phone.length > 0 && this.state.email.length > 0  ? \"\" : \"disabled\"}`} style={{backgroundColor: this.props.contaktiChat.color }} ><span className=\"fa fa-send\"></span></button>\n            </div>\n            <div className=\"pull-right\">\n              Powered by <a href=\"http://contakti.com\" target=\"_blank\" rel=\"noreferrer\" style={{position: \"relative\"}}>contakti.com</a>\n              <div className=\"send-button-container pull-left\">\n\n              </div>\n            </div>\n          </div>\n      </form>\n      )}\n      </div>\n\n    );\n  }\n}\n\nexport default CallBackBox;","import React, { Component } from 'react';\nclass Product extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n\n\n  onProductRemove = (p) => {\n    this.props.onProductRemove(p);\n  }\n\n  increaseQuantity = (product) => {\n    this.props.increaseQuantity(product)\n  }\n\n  decreaseQuantity = (product) => {\n    if (product.quantity > 1) {\n      product.quantity -= 1;\n      this.props.replaceProduct(product)\n    }\n  }\n\n\n  render() {\n    let { products } = this.props;\n    const {translations} = this.props\n\n    return (\n      <table className=\"table table-condensed table-striped \">\n        <thead>\n          <tr>\n            <th className=\"border-0\">{translations.product_title}</th>\n            <th className=\"border-0 text-center\">{translations.quantity}</th>\n            <th className=\"border-0 text-center\">{translations.price}</th>\n            <th className=\"border-0 text-center\">{translations.action}</th>\n          </tr>\n        </thead>\n\n        <tbody id=\"cart_body\">\n          {\n            products.map((product, index) => {\n              return <tr key={index}>\n                <td className=\"px-1 border-0\"><a href=\"#\" onClick={()=> { this.props.handleShow(product) }}>{product?.title}</a></td>\n                <td className=\"px-1 border-0\">\n                  <div className=\"center\" style={{ position: \"relative\" }}>\n                    <span onClick={() => this.increaseQuantity(product)}> <i className=\"fa fa-plus\"></i> </span>\n                    <input type=\"text\" className=\"form-control\" style={{ width: \"50px\", margin: \"0px 5px\" }} value={product?.quantity} readonly />\n                    <span onClick={() => this.decreaseQuantity(product)} > <i className=\"fa fa-minus\" ></i></span>\n                  </div>\n                </td>\n                <td className=\"px-1 border-0 text-center\">{product?.currency} {product?.price}</td>\n                <td className=\"px-1 border-0 center\">\n                  <button\n                    onClick={() => this.onProductRemove(product)}\n                    className=\"btn btn-danger \" ><i className=\"fa fa-times\" disabled ></i></button>\n                </td>\n              </tr>\n\n            })\n          }\n          <tr className=\"table-active\">\n            <td className=\"px-1 border-0 text-end\" colSpan=\"3\">\n              <strong>{translations.total}: {this.props.total}</strong>\n             </td>\n             <td className=\"px-1 border-0 \"/>\n          </tr>\n        </tbody>\n\n      </table>\n\n    );\n  }\n}\nexport default Product;","import React, { Component } from 'react';\nimport Product from './Product';\nimport _ from 'lodash';\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      sum: 0,\n      currency: \"USD\",\n      showModal: false,\n      selectedProduct: {}\n    }\n  }\n  componentDidMount() {\n    this.countSum();\n  }\n\n  onProductRemove = (product) => {\n    let { products } = this.state;\n    products = _.reject(products, (p) => {\n      return p.id === product.id;\n    });\n    this.setState({ products }, () => {\n      if (this.state.products.length === 0) {\n        this.props.onCartEmpty();\n      }\n      this.countSum();\n    });\n\n  }\n\n  addProduct = (p) => {\n    let { products } = this.state;\n    var product = _.find(products, { id: p.id });\n    if (product) {\n      product.quantity += 1;\n      this.replaceProduct(product);\n    }\n    else {\n      p.quantity = 1;\n      let currency = p.currency;\n      products.push(p)\n      this.setState({ products, currency }, () => this.countSum());\n\n    }\n  }\n\n\n  countSum = () => {\n    let sum = 0;\n    let { products } = this.state;\n    _.each(products, (product) => {\n      sum += (product.price * product.quantity);\n    });\n    this.setState({ sum });\n  }\n\n  replaceProduct = (product) => {\n    let { products } = this.state;\n    var index = _.findIndex(products, { id: product.id });\n    products.splice(index, 1, product);\n    this.setState({ products });\n    this.countSum();\n  }\n\n  render() {\n    let { products } = this.state;\n    let color = this.props.contaktiChat.color;\n    let text_color = this.props.contaktiChat.text_color;\n    const {translations} = this.props.contaktiChat\n    return (\n      <div id=\"contakti_cart_box\" className=\"cart_box\">\n        <div className=\"msg_head\" style={{ backgroundColor: color }}>\n          <span id=\"contakti-user-name\" style={{ color: text_color }}> {translations.user_dashboard.shopping_cart.cart_title}</span>\n          <span id=\"close-cart-icon\" className=\"float-end p-1 mr-2 d-none d-sm-block d-md-none\" onClick={this.props.toggleCart}><i className=\"fa fa-times\"></i></span>\n        </div>\n\n        <div className=\"cart_body d-flex flex-column justify-content-between\">\n          <div style={{maxHeight: \"270px\", overflow: \"auto\"}}>\n            <Product\n              products={products}\n              onProductRemove={this.onProductRemove}\n              increaseQuantity={this.addProduct}\n              replaceProduct={this.replaceProduct}\n              total={ `${this.state.currency} ${this.state.sum}` }\n              translations={translations.user_dashboard.shopping_cart}\n              handleShow={this.props.handleShow}\n            />\n          </div>\n\n          <div className=\"text-center\">\n            <div className=\"row\">\n            <div className=\"col-6\">\n              <label> {translations.user_dashboard.shopping_cart.payment_method}</label>\n\n              <div className=\"centera\" id=\"paymenst_method_select\">\n                <select className=\"form-control w-100 m-auto\">\n                  <option> Card</option>\n                  <option> PayPal</option>\n                </select>\n              </div>\n              <br />\n            </div>\n            <div className=\"col-6\">\n              <label > {translations.user_dashboard.shopping_cart.shipment_method}</label>\n              <div className=\"centera\" id=\"payments_method_select\">\n                <select className=\"form-control w-100 m-auto\">\n                  <option> ABC</option>\n                  <option> DEF</option>\n                </select>\n              </div>\n            </div>\n\n            </div>\n\n\n            <div>\n              <button className=\"btn w-50\" style={{ color: text_color, backgroundColor: color }}> {translations.user_dashboard.shopping_cart.checkout}</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Cart;\n","import React, { Component } from 'react';\nimport { Button, Modal, } from 'react-bootstrap'\nimport CarouselWrapper from '../modules/utils/CarouselWrapper';\n\nclass ProductInfoModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: false,\n\n        }\n    }\n    handleClose = () => {\n        this.props.handleClose();\n    }\n    render() {\n        let { product } = this.props\n        return (\n            <>\n                <Modal show={this.props.show} onHide={this.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>{this.props.title}</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"d-flex justify-content-between px-2\">\n                            <span className=\"float-start\">{product.title}</span>\n                            <span className=\"float-end\">{product.currency} {product.price}</span>\n                        </div>\n                        <hr />\n                        {product.images && product.images.length > 0 &&\n                            <div>\n                                <CarouselWrapper \n                                images={product.images}\n                                origin={this.props.origin}\n                                 />    \n                                <hr />\n                            </div>\n                        }\n\n                        <div  className=\"overflow-auto mt-1 px-2\" >\n                            <div>{product.description}</div>\n                            {product.attachments && product.attachments.length > 0 && <div>\n                                {product.attachments.map((f, index) => {\n                                    return (\n                                        <span className=\"mx-1\">\n                                            <a className=\"text-decoration-none\" href={`${this.props.origin}${f.file.url}`} download >{f.file_name}</a>\n                                        </span>\n                                    )\n                                })}\n                            </div>\n                            }\n\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" style={{ background: this.props.buttonColor }}  size=\"sm\" onClick={this.handleClose}>\n                            {this.props.btnText}\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default ProductInfoModal;\n","import React, { Component } from 'react';\nimport ContaktiChat from '../../classes/ContaktiChat';\nimport Dropdown from './Dropdown';\nimport ChatBox from '../chat_box/ChatBox';\nimport CallBackBox from '../others/CallBackBox';\nimport ChatUtils from '../../classes/ChatUtils';\nimport ReactResizeDetector from 'react-resize-detector';\nimport Cart from '../shopping_cart/Cart';\nimport ProductInfoModal from '../shopping_cart/ProductInfoModal';\n\nclass ChatPlugin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      style: {},\n      contaktiChat: {},\n      translations: {},\n      loading: true,\n      showDropDown: false,\n      showNoAgentScreen: false,\n      showPlugin: false,\n      showMinimize: false,\n      chatStarted: false,\n      chatInitialized: false,\n      showCartIcon: false,\n      showCart: false,\n      cartEmpty: true,\n      showProductModal: false,\n      selectedProduct: {}\n    }\n  }\n  handleProductModalClose = () => {\n    this.setState({ showProductModal: false })\n  };\n  handleProductModalShow = (p) => {\n    this.setState({ showProductModal: true, selectedProduct: p });\n  }\n\n  async componentDidMount() {\n    let contakti_chat = new ContaktiChat();\n    let chatUtils = ChatUtils\n    let urlParams = chatUtils.getUrlParams(window.location.href)\n    let serviceChannelId = urlParams.id;\n    contakti_chat.setServiceChannel(serviceChannelId);\n    await contakti_chat.setSettings();\n    await contakti_chat.setTranslations();\n    this.setState({\n      contaktiChat: contakti_chat,\n      loading: false,\n      style: {\n        color: contakti_chat.text_color,\n        backgroundColor: contakti_chat.color\n      }\n    });\n  }\n\n  toggleDropDown = (flag) => {\n    this.setState({ showDropDown: flag });\n  }\n  setChatStarted = () => {\n    if (!this.state.chatStarted) {\n      this.setState({ chatStarted: true });\n    }\n  }\n  showNoAgentOnlineScreen = (e) => {\n    this.setState({ showNoAgentScreen: true });\n    if (e) e.preventDefault();\n  }\n  showChatPlugin = async () => {\n    if (!this.state.chatInitialized) {\n      this.setState({ chatInitialized: true });\n    }\n    if (!this.state.showPlugin) {\n      let cont_chat = this.state.contaktiChat\n      await cont_chat.setSettings();\n      this.setState({ showPlugin: true, showMinimize: true, contaktiChat: cont_chat });\n\n      if (this.state.chatStarted) {\n        this.setState({ showDropDown: true });\n      }\n      if (!this.state.cartEmpty) {\n        this.setState({ showCartIcon: true });\n      }\n\n    }\n\n  }\n  hideChatPlugin = (e) => {\n    e.stopPropagation();\n    if (this.state.showPlugin) {\n      this.setState({ showPlugin: false, showMinimize: false, showDropDown: false, showCart: false, showCartIcon: false });\n    }\n  }\n  destroyChat = () => {\n    this.setState({ chatInitialized: false, showPlugin: false, showMinimize: false, showDropDown: false, showCartIcon: false, cartEmpty: true });\n  }\n  onResize = (width, height) => {\n    if (width < 350){\n      width = 350;\n    }\n    if ( height < 535)\n    {\n      height = 535;\n    }\n    window.parent.postMessage({ type: 'set_dimensions', width, height }, \"*\");\n  }\n  toggleCart = () => {\n    this.setState({ showCart: !this.state.showCart });\n  }\n  addToCart = (product) => {\n    this.setState({ showCartIcon: true, cartEmpty: false }, () => this.cart.addProduct(product));\n  }\n  hideCartIcon = () => {\n    this.setState({ showCartIcon: false, showCart: false, cartEmpty: true });\n  }\n\n\n  render() {\n    const { contaktiChat, loading } = this.state;\n    let parent_width_class = '';\n\n    if (window.parent) {\n      if (window.outerWidth <= 600) {\n        parent_width_class += ' max-600-width '\n      }\n    }\n\n    if (loading) {\n      return null;\n    }\n    return (\n      <div id=\"contakti-chat-main\" className={parent_width_class}>\n        <ReactResizeDetector handleWidth handleHeight onResize={this.onResize} >\n          <div id=\"contakti-msg-box\"\n            className={`\n                 chat-plugin-parent\n                 ${this.state.showMinimize === true ? \"open\" : \"\"}\n              `}\n          >\n            <ProductInfoModal\n              title={contaktiChat.translations.user_dashboard.shopping_cart.product_details}\n              btnText={contaktiChat.translations.user_dashboard.shopping_cart.close}\n              buttonColor={contaktiChat.color}\n              product={this.state.selectedProduct}\n              handleShow={this.handleProductModalShow}\n              handleClose={this.handleProductModalClose}\n              show={this.state.showProductModal}\n              origin={contaktiChat.origin}\n            />\n            <div className=\"cart-parent\" style={{ display: this.state.showCart ? \"block\" : \"none\" }}>\n              {(!this.state.cartEmpty) && contaktiChat.chat_settings.enable_cart ? (\n                <Cart ref={instance => { this.cart = instance; }}    handleShow={this.handleProductModalShow} contaktiChat={contaktiChat} onCartEmpty={this.hideCartIcon} toggleCart={this.toggleCart} />\n              ) : \"\"}\n            </div>\n\n            <div className=\"chat-parent flex-column d-flex\">\n              <div id=\"contakti-msg-head\" onClick={this.showChatPlugin} className=\"msg_head\" style={this.state.style}>\n                <div>\n                  <div id=\"contakti-logo-container\">\n                    <img alt=\"logo\" src={`${contaktiChat.origin}/${contaktiChat.chat_settings.file.url}`} />\n                  </div>\n                </div>\n\n                <span id=\"contakti-user-name\" style={{ color: contaktiChat.text_color }}>{contaktiChat.chat_settings.chat_title}</span>\n\n                <span id=\"cart_show_button\" onClick={this.toggleCart} style={{ display: this.state.showCartIcon ? \"block\" : \"none\", margin: '5px 5px 0 0', color: contaktiChat.text_color }}>\n                  <i className=\"fa fa-shopping-cart mt-1\"></i>\n                </span>\n                <span>\n                  {this.state.showDropDown ? (<Dropdown styleObj={this.state.style} translations={contaktiChat.translations} showDropdown={this.state.showDropDown} quit={() => { this.chatBox.quitChat(); this.destroyChat() }} sendChatHistory={() => this.chatBox.showSendChatHistory()} downloadChatHistory={() => { this.chatBox.downloadChat(); }} startChat={() => this.showChatPlugin()} />) : \"\"}\n                </span>\n\n                <div id=\"contakti-msg-minimize\" >\n                  {this.state.showMinimize ? (\n                    <span className=\"fa-stack\" onClick={this.hideChatPlugin} style={{ color: contaktiChat.text_color }}><i className=\"fa fa-stack-2x fa-angle-down\" style={{ top: '3px', left: '0px' }}></i></span>\n                  ) : \"\"}\n                </div>\n              </div>\n              {this.state.chatInitialized ? (\n                <div  style={{ display: this.state.showPlugin ? \"block\" : \"none\" }}>\n                  {this.state.showNoAgentScreen ? (<CallBackBox contaktiChat={contaktiChat} showNoAgentOnlineScreen={this.showNoAgentOnlineScreen} ></CallBackBox>) : (\n                    <ChatBox ref={instance => { this.chatBox = instance; }}\n                      contaktiChat={contaktiChat}\n                      handleProductShow={this.handleProductModalShow}\n                      toggleDropDown={this.toggleDropDown}\n                      showNoAgentOnlineScreen={this.showNoAgentOnlineScreen}\n                      quit={() => { this.destroyChat() }}\n                      setChatStarted={this.setChatStarted}\n                      startChat={() => this.showChatPlugin()}\n                      addToCart={(product) => { this.addToCart(product) }}\n                    ></ChatBox>)}\n                </div>\n              ) : \"\"}\n            </div>\n          </div>\n        </ReactResizeDetector>\n      </div>\n    );\n  }\n}\n\nexport default ChatPlugin;\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.scss';\nimport './components/chat_plugin/ChatPlugin'\nimport ChatPlugin from './components/chat_plugin/ChatPlugin';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <ChatPlugin />\n    );\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './style.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}