{"version":3,"sources":["classes/Api.js","classes/ContaktiChat.js","components/chat_plugin/Dropdown.jsx","classes/MessageFactory.js","classes/ChatUtils.js","components/modules/utils/Text.jsx","components/modules/utils/CarouselWrapper.jsx","components/chat_box/MessageImagesModal.jsx","components/chat_box/Message.jsx","components/others/SendChatHistory.jsx","components/chat_box/ChatBox.jsx","components/others/CallBackBox.jsx","components/shopping_cart/Product.jsx","components/shopping_cart/Cart.jsx","components/shopping_cart/ProductInfoModal.jsx","components/chat_plugin/ChatPlugin.jsx","App.js","reportWebVitals.js","index.js"],"names":["Api","document","location","origin","includes","this","serverUrl","baseUrl","prototype","get","a","route","fetch","res","json","data","post","method","cache","headers","body","JSON","stringify","response","postFile","file_data","ContaktiChat","locale","serviceChannel","chat_settings","url_obj","serverProtocol","api","channel","settings","chat_inquiry_fields","chat_initial_buttons","chatBotEnabled","enable_chatbot","chatWithHuman","initialMsg","initial_msg","color","text_color","agents_online","translations","Dropdown","props","toggle_dropdown","e","setState","expanded","state","mouseover","target","style","styleObj","backgroundColor","mouseout","end","quit","showEndChat","sendchatHistory","sendChatHistory","showSendEmail","showStart","startChat","downloadChat","downloadChatHistory","className","id","onClick","hidden","onMouseOver","onMouseOut","user_dashboard","download_txt_file","display","send_to_email","end_chat","start_new_chat","Component","ChatMessage","asJSON","ChatMessageFactory","options","from","username","type","initialise","newMessage","message","chatBot","msg","channel_id","chatbot","quitMessage","botToHumanSwitchMessage","fileMessage","file_url","file_path","ChatUtils","replaceURLs","replace","url","hyperlink","match","getUrlParams","params","split","forEach","pair","map","decodeURIComponent","length","Text","parse","text","CarouselWrapper","handleSelect","selectedIndex","index","activeIndex","Carousel","onSelect","images","image","Item","src","file","alt","file_name","MessageImagesModal","handleClose","Modal","show","showModal","onHide","Body","Message","handleMessageImageShow","imageIndex","modalImages","handleMessageImageClose","userName","fromTime","envelope","fromColor","contaktiChat","bgClass","download","rel","href","replaceAll","upload_chat","gridTemplateColumns","borderColor","files","name","products","product","title","addToCart","handleProductShow","class","action_buttons","btn_text","i","sendCustomActionMessage","moment","timestamp","local","format","userInfo","info","SendChatHistory","handleChange","event","key","value","sendEmail","email","chat_history","quitChat","cancel","transcript","bgColor","send_chat_history_title","onChange","placeholder","messageemail_chat","messagemsg_chat","rows","margin","messagesend_chat","messagesend_cancel","position","ChatBox","onStartClientResponse","agentPresent","setSendDisabled","callback","onMessageReceived","connect","chatChannel","fayeServer","server","window","Danthes","sign","setTimeout","displayNoAgentOnlineScreen","timeOut","contakti_chat","showNoAgentOnlineScreen","connectTimeout","scrollDown","showNoAgentOnline","successCallback","agent_online","indicators","getElementById","messageCame","localStorage","getItem","setItem","innerHTML","typing_text","removeItem","agentsCount","quit_chat","join_chat","welcome_message","agentName","clearTimeout","ask_human_to_help","innerText","changeFromBotToHumanChat","messages","chat_transcript","push","has_custom_action","custom_action_text","showCustomActionButtion","customActionButtionText","client_data","field","label","_","camelCase","phone","chat_display_fields","sendMessage","msg_text","messageFactory","_channelUrl","messagesListContainer","scrollIntoView","behavior","block","inline","sendQuitNotify","quitSent","encodeURIComponent","_channelIndicatorUrl","onKeyIndicator","onKeyPress","keyCode","onSendClicked","preventDefault","showDetailInput","showChat","toggleDropDown","bot_alias","enable_initial_buttons","btn","moment1","msgs","setChatStarted","disableChatSendDisabled","updateUserDetail","uploadFile","fileInput","click","handleFileChange","formdata","FormData","append","uploadedFileUrls","showSendChatHistory","showSendChatHistoryFlag","getChatTranscript","fileDownload","createTicket","task_data","messageContainer","started","messagEnvelopes","disableMessageInput","Object","keys","chat","msgFactory","bottom","getElementsByClassName","classList","remove","onclick","_onSendClicked","bind","minimized","inquiryData","onSubmit","maxHeight","overflow","marginTop","input_type","required","textAlign","marginBottom","start_chat","ref","el","chat_not_available","chat_leave_a_message_link","disabled","type_message","charCode","visibility","attachment_chat","marginRight","instance","CallBackBox","createCallBack","number","date","time","datetime","Date","thanks_chat","callBackSent","fontSize","paddingTop","sentmessage_chat","callback_chat","cbnumber_chat","clear","time_chat","width","float","boxSizing","paddingRight","message_chat","Product","onProductRemove","p","increaseQuantity","decreaseQuantity","quantity","replaceProduct","product_title","price","action","handleShow","readonly","currency","colSpan","total","Cart","reject","onCartEmpty","countSum","addProduct","find","sum","each","findIndex","splice","selectedProduct","shopping_cart","cart_title","toggleCart","payment_method","shipment_method","checkout","ProductInfoModal","Header","closeButton","Title","description","attachments","f","Footer","Button","variant","background","buttonColor","size","btnText","ChatPlugin","handleProductModalClose","showProductModal","handleProductModalShow","flag","showDropDown","chatStarted","showNoAgentScreen","showChatPlugin","chatInitialized","showPlugin","cont_chat","setSettings","showMinimize","cartEmpty","showCartIcon","hideChatPlugin","stopPropagation","showCart","destroyChat","onResize","height","parent","postMessage","cart","hideCartIcon","loading","urlParams","serviceChannelId","setServiceChannel","setTranslations","parent_width_class","outerWidth","handleWidth","handleHeight","product_details","close","enable_cart","chat_title","showDropdown","chatBox","top","left","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.baf6a0d6.chunk.js","sourcesContent":["const Api = function (options= {}) {\n    \n    // this.serverUrl = process.env.HOST_NAME\n    // this.serverProtocol = process.env.PROTOCOL\n    // this.origin = options.host || 'http://localhost:3000'\n\n    if (document.location.origin.includes(\":300\"))\n    {\n        this.origin = 'http://localhost:3000'\n    }\n    else{\n        this.origin = document.location.origin\n    }\n    \n    this.serverUrl = this.origin + '/api/v1'\n    this.baseUrl = this.serverUrl;\n}\n\nApi.prototype.origin = \"ASdas\"\n\nApi.prototype.get = async function (route = '') {\n    const res = await fetch(`${this.baseUrl}/${route}`)\n    const data = await res.json()\n    if (!data) {\n        return null\n    }\n    else {\n        return data\n    }\n}\nApi.prototype.post = async function (route = '', data = {}) {\n    const response = await fetch(`${this.baseUrl}/${route}`, {\n        method: 'POST',\n        cache: 'no-cache',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data) \n    });\n    return await response.json();\n}\n\nApi.prototype.postFile = async function (route = '', file_data = {}) {\n    const response = await fetch(`${this.baseUrl}/${route}`, {\n        method: 'POST',\n        cache: 'no-cache',\n        body: file_data \n    });\n    return await response.json();\n}\nexport default Api\n\n\n","import Api from \"./Api\";\n\nclass ContaktiChat {\n    constructor(options = {}) {\n        // this.serverProtocol = process.env.PROTOCOL\n        if (document.location.origin.includes(\":300\"))\n        {\n            this.origin = 'http://localhost:3000'\n        }\n        else{\n            this.origin = document.location.origin\n        }\n\n        this.serverUrl = this.origin + '/api/v1'\n        this.locale = 'en';\n        this.serviceChannel = null;\n        this.chat_settings = {};\n        this.url_obj = {\n            serverUrl: this.serverUrl,\n            serverProtocol: this.serverProtocol\n        };\n        this.api = new Api(this.url_obj);\n    }\n    setServiceChannel(channel){\n        this.serviceChannel = channel;\n    }\n\n    async setSettings() {\n        let res = await this.api.get(`chat/${this.serviceChannel}/get_chat_settings`);\n        this.chat_settings = res.settings;\n        this.chat_settings.chat_inquiry_fields = res.chat_inquiry_fields;\n        this.chat_settings.chat_initial_buttons = res.chat_initial_buttons;\n        this.chatBotEnabled = this.chat_settings.enable_chatbot;\n        this.chatWithHuman = !(this.chat_settings.enable_chatbot);\n        this.initialMsg = this.chat_settings.initial_msg;\n        this.color = this.chat_settings.color;\n        this.text_color = this.chat_settings.text_color;\n        this.agents_online = res.agents_online;\n    }\n    async setTranslations() {\n        this.translations = await this.api.get(`chat/get_translations`);\n    }\n}\n\nexport default ContaktiChat\n","import React, { Component } from 'react';\n\nclass Dropdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: false,\n      showSendEmail: true,\n      showStart: false,\n      showEndChat: true,\n    }\n  }\n\n\n  // document.onclick = (event){\n  // \tif(!event.target.classList.contains('dropdown-toggle') && !event.target.classList.contains('fa-cog')){\n  // \t\tif(document.querySelector('.dropdown')){\n  // \t\t\tdocument.querySelector('.dropdown').classList.remove(\"open\");\n  // \t\t}\n  // \t}\n  // }\n\n  toggle_dropdown = (e) => {\n    // ele.parentElement.classList.remove(\"close-force\");\n    // e.target.parentNode.classList.toggle(\"open\");\n    this.setState({ expanded: !this.state.expanded });\n  }\n   mouseover = (e) => {\n    e.target.style.color = this.props.styleObj.color;\n    e.target.style.backgroundColor = this.props.styleObj.backgroundColor;\n  }\n  mouseout = (e) => {\n    e.target.style.color = this.props.styleObj.backgroundColor;\n    e.target.style.backgroundColor = this.props.styleObj.color;\n  }\n\n  end = () => {\n    this.props.quit();\n    this.setState({showEndChat: false});\n  }\n\n  sendchatHistory = () =>{\n    this.toggle_dropdown();\n    this.props.sendChatHistory();\n    this.setState({showSendEmail: false, showStart: true});\n  }\n\n  startChat =  async() =>{\n    this.setState({showStart: false});\n    await this.props.quit();\n    await this.props.startChat();\n  }\n\n  downloadChat = () => {\n    this.props.downloadChatHistory();\n  }\n\n\n  // mouseoverdownload(e) {\n  //   var x = document.getElementById(\"download_chat_history\");\n  //   x.style.color = document.getElementById('contakti-user-name').style.color;\n  //   x.style.backgroundColor = document.getElementById('contakti-msg-head').style.backgroundColor;\n  // }\n\n  // mouseoutdownload(e) {\n  //   var x = document.getElementById(\"download_chat_history\");\n  //   x.style.color = document.getElementById('contakti-msg-head').style.backgroundColor;\n  //   x.style.backgroundColor = document.getElementById('contakti-user-name').style.color;\n  // }\n\n  // mouseoversend(e) {\n  //   var y = document.getElementById(\"send_chat_history\");\n  //   y.style.color = document.getElementById('contakti-user-name').style.color;\n  //   y.style.backgroundColor = document.getElementById('contakti-msg-head').style.backgroundColor;\n  // }\n\n  // mouseoutsend(e) {\n  //   var y = document.getElementById(\"send_chat_history\");\n  //   y.style.color = document.getElementById('contakti-msg-head').style.backgroundColor;\n  //   y.style.backgroundColor = document.getElementById('contakti-user-name').style.color;\n  // }\n\n  // mouseovercancel(e) {\n  //   var z = document.getElementById(\"contakti-msg-close-chat\");\n  //   z.style.color = document.getElementById('contakti-user-name').style.color;\n  //   z.style.backgroundColor = document.getElementById('contakti-msg-head').style.backgroundColor;\n  // }\n\n  // mouseoutcancel(e) {\n  //   var z = document.getElementById(\"contakti-msg-close-chat\");\n  //   z.style.color = document.getElementById('contakti-msg-head').style.backgroundColor;\n  //   z.style.backgroundColor = document.getElementById('contakti-user-name').style.color;\n  // }\n\n  // mouseoverstart(e) {\n  //   var z = document.getElementById(\"contakti-msg-start-chat\");\n  //   z.style.color = document.getElementById('contakti-user-name').style.color;\n  //   z.style.backgroundColor = document.getElementById('contakti-msg-head').style.backgroundColor;\n  // }\n\n  // mouseoutstart(e) {\n  //   var z = document.getElementById(\"contakti-msg-start-chat\");\n  //   z.style.color = document.getElementById('contakti-msg-head').style.backgroundColor;\n  //   z.style.backgroundColor = document.getElementById('contakti-user-name').style.color;\n  // }\n\n\n\n\n\n  render() {\n    const {translations} = this.props\n    return (\n      <div className=\"dropdown chat-setting d--inline-block\" id=\"chat-setting-dropdown\" >\n        <button\n         style={{ color: this.props.styleObj.color }}\n          className=\"dropdown-toggle\"\n          onClick={this.toggle_dropdown}\n        >\n          <i className=\"fa fa-cog\"></i></button>\n\n        <ul className=\"chatsetting-dropdown-menu\" hidden={this.state.expanded ? false : true } id=\"chat-setting-dropdown-menu\">\n          <li>\n            <a id=\"download_chat_history\" style={{color: this.props.styleObj.backgroundColor, backgroundColor: this.props.styleObj.color }} onClick={this.downloadChat}  onMouseOver={this.mouseover} onMouseOut={this.mouseout}>\n             {translations.user_dashboard.download_txt_file}\n            </a>\n          </li>\n          <li>\n            <a id=\"send_chat_history\" style={{ display:this.state.showSendEmail? \"block\": \"none\", color: this.props.styleObj.backgroundColor, backgroundColor: this.props.styleObj.color }} onClick={this.sendchatHistory} onMouseOver={this.mouseover} onMouseOut={this.mouseout}>\n            {translations.user_dashboard.send_to_email}\n            </a>\n          </li>\n          <li>\n            <a id=\"contakti-msg-close-chat\" onClick={this.end} style={{ display:this.state.showEndChat? \"block\": \"none\" , color: this.props.styleObj.backgroundColor, backgroundColor: this.props.styleObj.color }} onMouseOver={this.mouseover} onMouseOut={this.mouseout}>\n            {translations.user_dashboard.end_chat}\n            </a>\n            <a id=\"contakti-msg-start-chat\" style={{ display:this.state.showStart? \"block\": \"none\", color: this.props.styleObj.backgroundColor, backgroundColor: this.props.styleObj.color }} onClick={this.startChat} onMouseOver={this.mouseover} onMouseOut={this.mouseout}>\n            {translations.user_dashboard.start_new_chat}\n            </a>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Dropdown;","const ChatMessage = function() {\n\n};\n\nChatMessage.prototype.asJSON = function() {\n    return JSON.stringify(this);\n};\nconst ChatMessageFactory = function(options) {\n    this.from = options.username;\n    this.channel = options.channel;\n    this.type = 'message';\n\n};\n\nChatMessageFactory.prototype.initialise = function() {\n\n}\nChatMessageFactory.prototype.newMessage = function(message, type, chatBot = false, from) {\n    var msg = new ChatMessage();\n    msg.from = from || this.from;\n    msg.channel_id = this.channel;\n    msg.type = type || this.type;\n    msg.chatbot = chatBot;\n    msg.message = message;\n    return msg;\n};\n\nChatMessageFactory.prototype.quitMessage = function() {\n    var msg = new ChatMessage();\n    msg.from = this.from;\n    msg.channel_id = this.channel;\n    msg.type = 'quit';\n    msg.message = 'Quitting.';\n    return msg;\n};\n\nChatMessageFactory.prototype.botToHumanSwitchMessage = function() {\n    var msg = new ChatMessage();\n    msg.from = this.from;\n    msg.channel_id = this.channel;\n    msg.type = 'botToHuman';\n    msg.message = 'Requesting human..';\n    return msg;\n};\n\n\nChatMessageFactory.prototype.fileMessage = function(file_url, file_path) {\n    var msg = new ChatMessage();\n    msg.from = this.from;\n    msg.channel_id = this.channel;\n    msg.type = 'file';\n    msg.message = file_url;\n    msg.file_path = file_path;\n    return msg;\n};\n\n\nexport default ChatMessageFactory","class ChatUtils {\n  static replaceURLs = (message) => {\n    if (!message) return '';\n\n    var urlRegex = /(((https?:\\/\\/)|(www\\.))[^\\s]+)/g;\n    return message.replace(urlRegex, function (url) {\n      var hyperlink = url;\n      if (!hyperlink.match('^https?:\\/\\/')) {\n        hyperlink = 'http://' + hyperlink;\n      }\n      return '<a href=\"' + hyperlink + '\" target=\"_blank\" rel=\"noopener noreferrer\">' + url + '</a>'\n    });\n  }\n  static getUrlParams = (url) => {\n    var params = {};\n    (url + '?').split('?')[1].split('&').forEach(\n      function (pair) {\n        pair = (pair + '=').split('=').map(decodeURIComponent);\n        if (pair[0].length) {\n          params[pair[0]] = pair[1];\n        }\n      });\n\n    return params;\n  }\n};\n\nexport default ChatUtils","import parse from 'html-react-parser';\n\nconst Text = (props) => {\n    return parse(props.text)\n}\n \nexport default Text;","import React, { Component } from 'react';\nimport { Carousel } from 'react-bootstrap';\nclass CarouselWrapper extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { index: 0}\n    }\n    componentDidMount(){\n        let activeIndex = this.props.activeIndex ;\n        this.setState({ index: activeIndex});\n    }\n    handleSelect= (selectedIndex, e) => {\n        this.setState({ index: selectedIndex  });\n    }\n    render() { \n        \n        return ( <> \n        <Carousel activeIndex={this.state.index} onSelect={this.handleSelect}>\n            {this.props.images.map((image, index) => {\n                return (\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src={`${this.props.origin}${image.file.url}`}\n                            alt={image.file_name}\n                        />\n                    </Carousel.Item>\n                )\n            })}\n\n        </Carousel></> );\n    }\n}\n \nexport default CarouselWrapper;","import React, { Component } from 'react';\nimport { Button, Modal, } from 'react-bootstrap'\nimport CarouselWrapper from '../modules/utils/CarouselWrapper';\nclass MessageImagesModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    handleClose = () => {\n        this.props.handleClose()\n    }\n    render() {\n        return (\n            <>\n                <Modal show={this.props.showModal} onHide={this.handleClose}>\n                    <Modal.Body>\n                        <CarouselWrapper\n                            images={this.props.images}\n                            origin={this.props.origin}\n                            activeIndex={this.props.activeIndex}\n                        />\n                    </Modal.Body>\n                </Modal>\n            </>\n        );\n    }\n}\n\nexport default MessageImagesModal;","import React, { Component } from 'react';\nimport moment from 'moment';\nimport ChatUtils from '../../classes/ChatUtils';\nimport Text from '../modules/utils/Text';\nimport MessageImagesModal from './MessageImagesModal';\nclass Message extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.userName,\n      fromTime: this.props.envelope.from === this.username ? 'time_b' : 'time_a',\n      fromColor: this.props.from === this.username ? 'from_b' : 'from_a',\n      imageIndex: null,\n      showModal: false,\n      modalImages: []    \n    }\n  }\n  handleMessageImageShow = (index, images) => {\n    this.setState({ imageIndex: index, showModal: true, modalImages: images});\n  }\n  handleMessageImageClose = () => {\n    this.setState({ showModal: false  });\n  }\n\n  render() {\n    var { contaktiChat } = this.props;\n    \n    return (\n      <div className={this.props.bgClass} >\n        <MessageImagesModal\n         showModal={this.state.showModal} \n         activeIndex={this.state.imageIndex} \n         images={this.state.modalImages}\n         handleClose={this.handleMessageImageClose}\n         origin={contaktiChat.origin}/>\n        {this.props.envelope.type === 'file' ? (\n          <a download target=\"_blank\" rel=\"noreferrer\" href={this.props.envelope.message.replaceAll(\"\\n\", '<br/>')}>{`${this.props.envelope.from} ${contaktiChat.translations.user_dashboard.upload_chat}`}</a>\n\n        ) : (\n          <Text text={ChatUtils.replaceURLs(this.props.envelope.message).replaceAll(\"\\n\", '<br/>')} />\n        )}\n        { this.props.envelope.images ? (<div style={{gridTemplateColumns: \"auto auto auto auto\"}} className=\"d-grid mt-1\">\n          { this.props.envelope.images.map((image, index) => {\n            return(<div className=\"me-1 mb-1\">\n              <img src={`${contaktiChat.origin}${image.file.url}`} onClick={() => { this.handleMessageImageShow(index, this.props.envelope.images)}} style={{borderColor: contaktiChat.color}} className=\"img-thumbnail\"></img>\n            </div>)\n          })}\n\n        </div>) : \"\"\n        }\n        {\n          this.props.envelope.files ? (this.props.envelope.files.map((file) => {\n            return (\n              <div>\n                <a download target=\"_blank\" rel=\"noreferrer\" href={file.url}>{file.name}</a>\n              </div>)\n\n          })) : \"\"\n        }\n        {this.props.envelope.products ? (\n          <div id=\"chat-answer-products-wrapper\" className=\"mt-1\">\n            {this.props.envelope.products.map(product => {\n              return (<div className=\"answer_product\" key={`product-item-${product.id}`}>\n                <div className=\"child1\"><strong>{product.title}</strong> </div>\n                <div className=\"child2\">\n                  <a href=\"#\" onClick={() => this.props.addToCart(product)} className=\"add-to-cart-btn\" data-product-id={product.id} style={{ color: contaktiChat.text_color, backgroundColor: contaktiChat.color }}>\n                    <i className=\"fa fa-shopping-cart\"></i>\n                  </a>\n                </div>\n                <span onClick={() => {this.props.handleProductShow(product)}}> <i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i> </span>\n              </div>)\n            })\n            }\n          </div>\n        ) : \"\"}\n\n        {this.props.envelope.action_buttons ? (\n          <div>\n            {this.props.envelope.action_buttons.map((btn_text, i) => {\n              return (\n                <div key={`action-buttons-${i}`}>\n                  <br />\n                  <button className=\"action-button\" style={{ backgroundColor: contaktiChat.color, color: contaktiChat.text_color }} onClick={this.props.sendCustomActionMessage}><Text text={btn_text} /> </button>\n                  <br />\n                </div>\n              )\n\n            })\n            }\n          </div>\n\n        ) : \"\"}\n        {\n          this.props.envelope.type !== 'quit' && this.props.envelope.type !== 'initial' ? (\n            <div>\n              <br />\n              <div className={`msg_time${this.state.fromTime}`}> {moment(this.props.envelope.timestamp ? this.props.envelope.timestamp : \"\").local().format('D.M.YYYY HH.mm')}</div>\n              <div className={`msg_from${this.state.fromColor}`}>{this.props.envelope.from} </div>\n              {this.props.envelope.from === this.props.userName ? (\n                <div>\n                  {this.props.userInfo.map((info, i) => {\n                    return (<div key={`user-info-${i}`} className={`msg_from${this.state.fromColor}`}>{info} </div>)\n                  })}\n                </div>\n              ) : \"\"}\n            </div>\n          ) : \"\"}\n      </div>);\n  }\n}\n\nexport default Message;\n","import React, { Component } from 'react';\nimport Api from '../../classes/Api';\nclass SendChatHistory extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            chat_history: \"\"\n        }\n    }\n    componentDidMount() {\n        this.setState({ chat_history: this.props.transcript });\n    }\n\n    handleChange = (event, key) => {\n        let state = this.state;\n        let inputName = event.target.name;\n        state[inputName] = event.target.value;\n        this.setState({ ...state });\n    }\n\n    sendEmail = () => {\n        let email = this.state.email;\n        let message = this.state.chat_history;\n        var url = 'chat/' + this.props.contaktiChat.serviceChannel + '/send_email_chat_history';\n        let data = { email: email, message: message };\n        new Api().post(url, data);\n        this.props.quitChat();\n    }\n\n    cancel = async () => {\n       await this.props.quitChat();\n        this.props.startChat();\n    }\n\n    render() {\n        const translations = this.props.contaktiChat.translations.user_dashboard\n        const color = this.props.bgColor\n        return (\n            <div id=\"contakti-user-details\" className=\"flex-column justify-content-between d-flex h-100 pt-3 px-1\">\n                <div>\n                  <label>{translations.send_chat_history_title}</label>\n                  <input type=\"email\" name=\"email\" onChange={this.handleChange} value={this.state.email} placeholder={translations.messageemail_chat} className=\"form-control callback-control\" id=\"send-chat-history-email\" />\n                  <br /><br />\n                  <textarea placeholder={translations.messagemsg_chat} className=\"form-control sendchat--history\" rows=\"4\" id=\"send-chat-history-message\" name=\"chat_history\" onChange={this.handleChange} value={this.state.chat_history} ></textarea>\n                  <br />\n                  <input type=\"hidden\" id=\"chat-client-container\" name=\"chat-client-container\" />\n                </div>\n                <div className=\"pb-2\">\n                  <div className=\"send-button-container pull-left\">\n                      <button id=\"send-chat-history-send\" className=\"send\" style={{ backgroundColor: color, margin: \"5px\" }}    onClick={this.sendEmail}>{translations.messagesend_chat}  </button>\n                      <span></span>\n                      <button id=\"send-chat-history-cancel\" className=\"send\" style={{ backgroundColor: color, margin: \"5px\" }}  onClick={this.cancel} >{translations.messagesend_cancel}</button>\n                  </div>\n                  <div className=\"pull-right\">\n                      Powered by <a href=\"http://contakti.com\" target=\"_blank\" rel=\"noreferrer\" style={{ position: \"relative\" }}>contakti.com</a>\n                      <div className=\"send-button-container pull-left\">\n\n                      </div>\n                  </div>\n                </div>\n            </div>);\n    }\n}\n\nexport default SendChatHistory;","import React, { Component } from 'react';\nimport ChatMessageFactory from '../../classes/MessageFactory';\nimport Message from './Message';\nimport Api from '../../classes/Api';\nimport moment from 'moment';\nimport SendChatHistory from '../others/SendChatHistory';\nimport _ from 'lodash';\nclass ChatBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chatChannel: null,\n      fayeServer: null,\n      messageContainer: document.getElementById('chat_area'),\n      username: '',\n      email: '',\n      phone: '',\n      messageFactory: new ChatMessageFactory({ username: this.username, channel: this.chatChannel, email: this.email, phone: this.phone }),\n      quitSent: false,\n      messageCame: false,\n      agentPresent: false,\n      agentsCount: 0,\n      connectTimeout: 0,\n      started: false,\n      messages: [],\n      messagEnvelopes: [],\n      contaktiChat: {},\n      showDetailInput: true,\n      showChat: false,\n      newMessage: \"\",\n      disableChatSendDisabled: false,\n      disableMessageInput: false,\n      showNoAgentOnline: false,\n      agentName: \"\",\n      showSendChatHistoryFlag: false,\n      chat_transcript: \"\",\n      showCustomActionButtion: false,\n      customActionButtionText: \"\",\n      uploadedFileUrls: [],\n    }\n  }\n  componentDidMount() {\n    if (!this.props.contaktiChat || (this.props.contaktiChat && Object.keys(this.props.contaktiChat).length === 0)) {\n      return;\n    }\n    let chat = this.props.contaktiChat\n\n    this.setState({ messageContainer: document.getElementById('chat_area') });\n    this.setState({ contaktiChat: chat }, async () => {\n      if (this.state.contaktiChat.chat_settings.format !== \"inquiry\" || this.state.contaktiChat.chat_settings.chat_inquiry_fields.length === 0) {\n        await this.startChat();\n      }\n      // window.onbeforeunload = this.quitChat;\n    });\n    this.setSendDisabled();\n  }\n\n  onStartClientResponse = (response) => {\n    if ((!this.state.agentPresent) && this.state.contaktiChat.chatWithHuman) {\n      this.setSendDisabled()\n    }\n\n    response.callback = this.onMessageReceived;\n    response.connect = true;\n\n    this.setState({ chatChannel: response.channel });\n    this.setState({ fayeServer: response.server });\n    window.Danthes.sign(response);\n    // Set client info in redis to use when client closes or reloads the chat.\n    setTimeout(() => {\n      const url = this.state.contaktiChat.serverUrl + `/chat/set_client_info?channel_id=${this.state.chatChannel}`\n      fetch(url, {\n        \"Content-Type\": \"application/json\"\n      });\n    }, 2000);\n\n  };\n\n\n\n  displayNoAgentOnlineScreen = (timeOut = 60000) => {\n    let contakti_chat = this.state.contaktiChat;\n    if (contakti_chat.agents_online == false && contakti_chat.chatWithHuman == true)\n    {\n      this.props.showNoAgentOnlineScreen();\n    }\n    else{\n      this.setState({\n        connectTimeout: setTimeout(() => {\n          this.scrollDown();\n          this.setState({ showNoAgentOnline: true });\n        }, timeOut)\n      });\n    }\n\n  };\n\n  successCallback = (data) => {\n    let contakti_chat = this.state.contaktiChat;\n    if (data.agent_online == false)\n    {\n      this.displayNoAgentOnlineScreen(0);\n    }\n    else\n    {\n      contakti_chat.chatWithHuman = true;\n      contakti_chat.chatBotEnabled = false;\n      this.setState({ contaktiChat: contakti_chat }, () => {\n        this.setSendDisabled();\n        this.displayNoAgentOnlineScreen();\n      });\n    }\n  }\n  onMessageReceived = (envelope) => {\n    if (envelope.type === 'indicator') {\n      return\n    }\n    //TODO indicators\n    var indicators = document.getElementById('contakti-msg-indicator');\n    this.setState({ messageCame: true });\n    if (envelope.type === 'agent_indicator') {\n      indicators = document.getElementById('contakti-msg-indicator');\n      var has_cookies = localStorage.getItem('indicator_state')\n      if (!has_cookies) {\n        // setCookies\n        localStorage.setItem('indicator_state', 'true')\n        indicators.innerHTML = envelope.from + this.state.contaktiChat.translations.user_dashboard.typing_text + '<div id=\"wave\"> <span class=\"dot\"></span> <span class=\"dot\"></span> <span class=\"dot\"></span> </div>';\n        this.setState({\n          connectTimeout: setTimeout(function () {\n            var indicators = document.getElementById('contakti-msg-indicator');\n            indicators.innerHTML = '';\n            // remove cookie\n            localStorage.removeItem('indicator_state')\n          }, 5000)\n        });\n      }\n    }\n    else {\n      if (envelope.type === 'quit') {\n        this.setState({ agentsCount: this.state.agentsCount - 1 });\n        envelope.message = `${envelope.from} ${this.state.contaktiChat.translations.user_dashboard.quit_chat}`;\n        if (this.state.agentsCount < 1) {\n          // Disable send button. Do stuff!\n          this.setState({ agentPresent: false });\n          this.setSendDisabled();\n        }\n      }\n      else if (envelope.type === 'join') {\n        this.setState({ agentsCount: this.state.agentsCount + 1 });\n        if (this.state.agentPresent) {\n          envelope.message = `${envelope.from} ${this.state.contaktiChat.translations.user_dashboard.join_chat}`;\n        } else {\n          envelope.message = `${envelope.from} ${this.state.contaktiChat.chat_settings.welcome_message}`;\n        }\n        this.setState({ agentPresent: true, agentName: envelope.from });\n        clearTimeout(this.state.connectTimeout);\n        this.setSendDisabled();\n      }\n      else if (envelope.type === 'switch_to_human') {\n        envelope.message = `${this.state.contaktiChat.translations.user_dashboard.ask_human_to_help}`;\n        if (envelope.from !== this.username) {\n          indicators.innerText = \"\";\n        }\n        this.changeFromBotToHumanChat(this.successCallback);\n      }\n      let { messages, chat_transcript } = this.state;\n\n      messages.push(envelope);\n\n      this.setState({ messages, chat_transcript })\n      if (envelope.has_custom_action && envelope.custom_action_text) {\n        this.setState({ showCustomActionButtion: true, customActionButtionText: envelope.custom_action_text });\n      }\n      if (envelope.from !== this.state.username) {\n        indicators.innerText = \"\";\n      }\n\n    }\n    this.scrollDown();\n  };\n\n\n\n\n  changeFromBotToHumanChat = async (successCallback) => {\n\n    let client_data = [];\n    if (this.state.contaktiChat.chat_settings.format === 'inquiry') {\n      client_data = this.state.contaktiChat.chat_settings.chat_inquiry_fields.map(field => {\n        return { label: field.title, value: this.state[_.camelCase(field.title)] }\n      })\n    }\n    else {\n      client_data = [\n        { label: \"Name\", value: this.state.username }\n      ]\n    }\n    let params = {\n      chatbot: false,\n      channel_id: this.state.chatChannel,\n      name: this.state.username,\n      email: this.state.email,\n      phone: this.state.phone,\n      chat_display_fields: client_data\n    }\n    // var options = \"chatbot=\" + false + \"&name=\" + this.state.username + \"&email=\" + this.state.email + \"&phone=\" + this.state.phone + \"&channel_id=\" + encodeURIComponent(this.state.chatChannel);\n    let route = `/chat/${this.state.contaktiChat.serviceChannel}/bot_initiate_human_chat`;\n    let res = await new Api().post(route, params);\n    successCallback(res);\n  }\n\n\n  setUsername(name) {\n    if (!name) {\n      name = 'Anonymous';\n    }\n    this.setState({ username: name });\n    let msgFactory = this.state.messageFactory\n    msgFactory.from = name;\n    this.setState({ messageFactory: msgFactory });\n  };\n\n  sendCustomActionMessage = (e) => {\n    this.sendMessage(e.target.innerText);\n  }\n\n  sendMessage = (msg_text = \"\") => {\n    if (msg_text.length === 0) {\n      msg_text = this.state.newMessage;\n    }\n    if (msg_text.length > 0) {\n      var msg = this.state.messageFactory.newMessage(msg_text, null, this.state.contaktiChat.chatBotEnabled);\n      let route = this._channelUrl();\n      new Api().post(route, msg);\n      this.setState({ newMessage: \"\" })\n    }\n  };\n\n\n\n  _channelUrl = () => {\n    return this.state.chatChannel + '/send_msg';\n  };\n\n  scrollDown = () => {\n    if (this.messagesListContainer) {\n      this.messagesListContainer.scrollIntoView({ behavior: \"smooth\", block: \"end\", inline: \"nearest\" });\n    }\n  };\n\n  sendQuitNotify = () => {\n    if (this.state.quitSent) return;\n    this.setState({ quitSent: true });\n    var msg = this.state.messageFactory.quitMessage();\n    let route = this._channelUrl();\n    new Api().post(route, msg);\n    var ret = true ? null : ':D'; // Some browsers need fooling to evaluate onbeforeunload\n    return ret;\n  };\n\n  quitChat = async () => {\n    if (this.state.agentPresent) {\n      this.sendQuitNotify();\n    } else {\n      if (this.state.chatChannel) {\n        let route = `/chat/${this.state.contaktiChat.serviceChannel}/abort_chat?channel_id=${encodeURIComponent(this.state.chatChannel)}`;\n        await new Api().get(route);\n      }\n    }\n  };\n  _channelIndicatorUrl = () => {\n\n    return this.state.chatChannel + \"/send_indicator\";\n  };\n\n  onKeyIndicator = () => {\n    var msg = this.state.messageFactory.newMessage(\"Customer typing\");\n    let route = this._channelIndicatorUrl();\n    new Api().post(route, msg);\n  };\n\n  onKeyPress = (event) => {\n    var keyCode = event.keyCode;\n    if (keyCode !== 13) {\n      this.onKeyIndicator();\n    }\n\n  };\n\n  onSendClicked = (event) => {\n    this.setSendDisabled();\n    this.sendMessage();\n  };\n\n  startChat = async (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    let name = \"Anonymous\";\n    if (this.state.contaktiChat.chat_settings.format === 'inquiry') {\n      name = this.state[_.camelCase(this.state.contaktiChat.chat_settings.chat_inquiry_fields[0]?.title)]\n    }\n    this.setState({\n      showDetailInput: false,\n      showChat: true,\n      username: this.state.username.length > 0 ? this.state.username : name,\n      messageFactory: new ChatMessageFactory({\n        username: this.state.username.length > 0 ? this.state.username : name,\n        channel: this.state.chatChannel,\n        email: this.state.email,\n        phone: this.state.phone\n      })\n    });\n    this.props.toggleDropDown(true);\n    if (this.state.contaktiChat.chatWithHuman) {\n      this.displayNoAgentOnlineScreen();\n    }\n    let client_data = [];\n    if (this.state.contaktiChat.chat_settings.format === 'inquiry') {\n      client_data = this.state.contaktiChat.chat_settings.chat_inquiry_fields.map(field => {\n        return { label: field.title, value: this.state[_.camelCase(field.title)] }\n      })\n    }\n    else {\n      client_data = [\n        { label: \"Name\", value: name }\n      ]\n    }\n    let params = {\n      chatbot: this.state.contaktiChat.chatBotEnabled,\n      name: name,\n      email: this.state.email,\n      phone: this.state.phone,\n      chat_display_fields: client_data\n    }\n\n    let route = `chat/${this.state.contaktiChat.serviceChannel}/initiate_chat`;\n    let res = await new Api().post(route, params);\n\n    if (this.state.contaktiChat.initialMsg.length > 0) {\n      var msg = this.state.messageFactory.newMessage(this.state.contaktiChat.initialMsg, \"initial\", this.state.contaktiChat.chatBotEnabled, this.state.contaktiChat.chat_settings.bot_alias);\n      if (this.state.contaktiChat.chatBotEnabled && this.state.contaktiChat.chat_settings.enable_initial_buttons) {\n        msg.action_buttons = this.state.contaktiChat.chat_settings.chat_initial_buttons.map(btn => btn.title);\n      }\n      let moment1 = moment;\n      msg.timestamp = moment1().local().format();\n      let msgs = this.state.messages\n      msgs.push(msg);\n      this.setState({ messages: msgs });\n    }\n    this.props.setChatStarted();\n    this.onStartClientResponse(res);\n  };\n\n  setSendDisabled = (event) => {\n    if (!this.state.agentPresent && this.state.contaktiChat?.chatWithHuman) {\n      this.setState({ disableChatSendDisabled: true })\n      if (!this.state.agentPresent && this.state.contaktiChat?.chatWithHuman) {\n        this.setState({ disableChatSendDisabled: true })\n\n      }\n    } else {\n      this.setState({ disableChatSendDisabled: false })\n    }\n  };\n\n  maximize() {\n    document.getElementById('contakti-msg-box').style.bottom = '0px';\n    var chatSettingDrowpdown = document.getElementById('chat-setting-dropdown')\n    if (chatSettingDrowpdown && document.getElementsByClassName('show-dropdown').length > 0) {\n      document.getElementById('chat-setting-dropdown').style.display = \"block\";\n    }\n    document.getElementById('contakti-msg-minimize').classList.remove('hide');\n    var sendButton = document.getElementById('contakti-chat-send-btn');\n    sendButton.onclick = this._onSendClicked.bind(this);\n    this.setState({ messageContainer: document.getElementById('contakti-msg-body') });\n    this.setState({ minimized: false });\n  };\n\n  updateUserDetail = () => {\n  }\n\n  handleChange = (event, key) => {\n    let state = this.state;\n    let inputName = event.target.name;\n    state[inputName] = event.target.value;\n    this.setState({ ...state });\n  }\n  uploadFile = () => {\n    this.fileInput.click();\n  }\n  handleFileChange = async (e) => {\n    // const fileData = e.target.files[0];\n\n    let file = e.target.files[0];\n\n\n    var formdata = new FormData();\n    formdata.append(\"upload\", file, file.name);\n\n    let response = await new Api().postFile('chat/uploadfile', formdata);\n    this.state.uploadedFileUrls.push(response.file_url)\n    var msg = this.state.messageFactory.fileMessage(response.file_url, response.file_path);\n    let route = this._channelUrl();\n    new Api().post(route, msg);\n\n  }\n\n  showSendChatHistory = () => {\n    this.setState({ showSendChatHistoryFlag: true });\n  }\n  getChatTranscript = () => {\n    let transcript = \"\";\n    this.state.messages.forEach(message => {\n      transcript += message.message;\n      transcript += '\\n'\n      if (message.files) {\n        message.files.forEach(file => {\n          transcript += file.url;\n          transcript += '\\n'\n        })\n      }\n      if (message.action_buttons) {\n        message.action_buttons.forEach(btn_text => {\n          transcript += btn_text;\n          transcript += '\\n';\n        })\n      }\n      if (message.type !== 'quit') {\n        transcript += moment(message.timestamp ? message.timestamp : \"\").local().format('D.M.YYYY HH.mm')\n        transcript += '\\n';\n        transcript += message.from;\n        transcript += '\\n';\n      }\n      transcript += '\\n';\n    })\n    return transcript;\n  }\n\n  downloadChat = () => {\n    this.fileDownload.click();\n  }\n\n  createTicket = async () => {\n    const task_data = {};\n    task_data['channel_id'] = this.state.chatChannel\n    task_data['media_channel_id'] = this.state.contaktiChat.serviceChannel;\n    task_data['messages_attributes'] = [];\n    task_data['messages_attributes'][0] = {};\n    task_data['messages_attributes'][0]['title'] = \"\";\n    task_data['messages_attributes'][0][\"channel_type\"] = 'chat';\n    if (this.state.customActionButtionText.length > 0) {\n      task_data['messages_attributes'][0]['title'] = this.state.customActionButtionText;\n    }\n    task_data['messages_attributes'][0]['to'] = 'Internal';\n    task_data['messages_attributes'][0]['from'] = this.state.username;\n    task_data['user_uploaded_file_urls'] = this.state.uploadedFileUrls;\n    if (this.state.email.length > 0) task_data['messages_attributes'][0]['from'] = this.state.email;\n    let transcript = \"\";\n    if (this.state.contaktiChat.chat_settings.format === 'inquiry') {\n      this.state.contaktiChat.chat_settings.chat_inquiry_fields.forEach(field => {\n        transcript += `${field.title} : ${this.state[_.camelCase(field.title)]}\\n`;\n      })\n    }\n    else {\n      transcript += `Name : ${this.state.username}\\n`;\n    }\n    transcript += `\\n`;\n    transcript += this.getChatTranscript();\n    task_data['messages_attributes'][0]['description'] = transcript;\n    task_data['type'] = 'chat';\n    const url = 'tasks/create_task_from_chat'\n    await new Api().post(url, task_data);\n    this.setState({ showCustomActionButtion: false, customActionButtionText: \"\" });\n    this.quitChat();\n    this.props.quit();\n  }\n\n  render() {\n    if (!this.state.contaktiChat) {\n      return null;\n    }\n    const { contaktiChat, disableChatSendDisabled } = this.state;\n    const { messages } = this.state;\n\n    let inquiryData = [];\n    if (contaktiChat.chat_settings?.format === 'inquiry') {\n      contaktiChat.chat_settings.chat_inquiry_fields.forEach((field, index) => {\n        if (index > 0) {\n          inquiryData.push(this.state[_.camelCase(field.title)]);\n        }\n      })\n    }\n\n\n\n    return (\n\n      <div id=\"contakti-msg-container\" className=\"msg_wrap h-100\">\n        <div id=\"contakti-chat-agent-details\" className=\"msg_agent\" style={{ display: this.state.agentName === \"\" ? \"none\" : \"block\", color: this.props.contaktiChat.text_color, backgroundColor: this.props.contaktiChat.color }}>\n          <div className=\"msg_agent_name\" id=\"contakti-chat-agent-name\">{this.state.agentName}</div>\n        </div>\n        {\n          contaktiChat?.chat_settings?.format === \"inquiry\" && contaktiChat?.chat_settings.chat_inquiry_fields.length > 0 ?\n            <div id=\"contakti-user-details\" className=\"h-100 px-1\" style={{ display: this.state.showDetailInput ? 'block' : 'none' }} >\n              <form className=\"flex-column justify-content-between d-flex h-100\" onSubmit={async (event) => { await this.startChat(event); }}>\n                <div style={{ maxHeight: \"330px\", overflow: \"auto\", marginTop: \"115px\" }} >\n                  {contaktiChat?.chat_settings.chat_inquiry_fields.map((field, index) => {\n                    return (<div key={`inquiry-fields-${index}`}><label>{field.title}</label>\n                      <input type={field.input_type} required className=\"form-control-start\" value={this.state[_.camelCase(field.title)] || \"\"} name={_.camelCase(field.title)} onChange={this.handleChange} id=\"contakti-input-name\" />\n                    </div>\n                    )\n                  })}\n                </div>\n                <div style={{ textAlign: 'center', marginBottom: \"20px\" }} >\n                  <div>\n                    <input type=\"submit\" id=\"contakti-input-details-submit\" className=\"btn btn-default btn-block\" value={contaktiChat.translations.user_dashboard.start_chat} style={{ backgroundColor: this.props.contaktiChat.color, color: this.props.contaktiChat.text_color }} />\n                  </div>\n                  <div >\n                    Powered by <a href=\"http://contakti.com\" target=\"_blank\" rel=\"noreferrer\">contakti.com</a>\n                  </div>\n                </div>\n              </form>\n            </div>\n            : null\n        }\n        {this.state.showSendChatHistoryFlag ? (<SendChatHistory contaktiChat={contaktiChat} bgColor={contaktiChat.color} transcript={this.state.chat_transcript} quitChat={() => { this.props.quit(); this.quitChat(); }} startChat={() => this.props.startChat()} />) : (\n          <div className={this.state.showDetailInput === false ? '' : 'd-none'}>\n\n            <div id=\"contakti-msg-body\" className=\"msg_bodyclient\">\n              {contaktiChat?.chat_settings?.format === \"inquiry\" && contaktiChat?.chat_settings.chat_inquiry_fields.length > 0 ? (\n                null\n              ) : \"\"}\n              <div style={{ display: this.state.showChat ? 'block' : 'none' }} id=\"chat_area\" ref={(el) => { this.messagesListContainer = el; }}>\n                {\n                  this.state.showNoAgentOnline ? (\n                    <div className=\"msg_n\">{contaktiChat.translations.user_dashboard.chat_not_available}<a href=\"#\" onClick={this.props.showNoAgentOnlineScreen} id=\"contakti_chat_not_available_link\"> {contaktiChat.translations.user_dashboard.chat_leave_a_message_link}</a></div>\n                  ) : (\n\n                    <div>\n                      {\n                        messages.map((message, index) => {\n                          return (\n                            <Message key={index}\n                              envelope={message}\n                              handleProductShow={this.props.handleProductShow}\n                              bgClass={message.from === this.state.username ? 'msg_b' : 'msg_a'}\n                              userName={this.state.username}\n                              sendCustomActionMessage={this.sendCustomActionMessage}\n                              addToCart={(product) => { this.props.addToCart(product) }}\n                              contaktiChat={contaktiChat}\n                              userInfo={inquiryData}\n                            />\n                          );\n\n                        })\n                      }\n                    </div>\n\n                  )}\n              </div>\n            </div>\n            <div id=\"contakti-msg-indicator\" className=\"msg_indictor\"> </div>\n            <div id=\"contakti-msg-footer\" className=\"msg_footer\" style={{ display: this.state.showChat ? 'block' : 'none' }}>\n              <div className=\"block-row\">\n                <div className=\"input-block\">\n                  <textarea\n                    id=\"contakti-chat-text-input\"\n                    value={this.state.newMessage}\n                    disabled={disableChatSendDisabled}\n                    name='newMessage'\n                    onChange={this.handleChange}\n                    className=\"msg_input form-control\"\n                    placeholder={contaktiChat?.translations?.user_dashboard.type_message}\n                    onKeyPress={(event) => {\n                      if (event.charCode === 13) {\n                        event.preventDefault();\n                        this.onSendClicked();\n                      }\n                      else {\n                        this.onKeyPress(event);\n                      }\n                    }}\n                    disabled={this.state.disableChatSendDisabled ? true : false}\n                    rows=\"3\" />\n                </div>\n                <div className=\"button-block\">\n                  <a\n                    className={`contakti-chat-send-btn ${this.state.newMessage.length > 0 ? \"\" : \"disabled\"}`}\n                    onClick={this.onSendClicked}\n                    style={{ backgroundColor: this.props.contaktiChat.color, color: this.props.contaktiChat.text_color }}>\n                    <span className=\"fa fa-send\"></span>\n                  </a>\n                </div>\n              </div>\n              <div className=\"block-row mb-1\">\n                <div className=\"pull-left\">\n                  <button id=\"custom_action_button\" onClick={this.createTicket} style={{ visibility: this.state.showCustomActionButtion ? 'visible' : 'hidden' }}> {this.state.customActionButtionText}</button>\n                </div>\n              </div>\n              <div className=\"block-row mb-10\">\n                <div className=\"pull-left\">\n                  <a onClick={this.uploadFile} id=\"contakti-open-file\">{contaktiChat.translations?.user_dashboard.attachment_chat}</a>\n                </div>\n                <div className=\"pull-right\">\n                  Powered by <a href=\"http://contakti.com\" target=\"_blank\" rel=\"noreferrer\" style={{ marginRight: '10px' }}>contakti.com</a>\n                </div>\n              </div>\n              <form id=\"contakti-file-upload-form\" style={{ display: 'none' }}>\n                <input type=\"file\" id=\"contakti-file-upload-input\" ref={instance => { this.fileInput = instance; }} name=\"upload\" onChange={this.handleFileChange} />\n              </form>\n            </div>\n          </div>\n        )}\n        <a ref={instance => { this.fileDownload = instance; }} style={{ display: \"none\" }} href={`data:text/plain;charset=utf-8,${encodeURIComponent(this.state.chat_transcript)}`} download=\"chat_history.txt\"></a>\n      </div>\n    );\n  }\n}\n\nexport default ChatBox;\n","import React, { Component } from 'react';\nimport Api from '../../classes/Api';\nimport Text from '../modules/utils/Text';\nclass CallBackBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      phone: \"\",\n      date: \"\",\n      time: \"\",\n      email: \"\",\n      message: \"\",\n      callBackSent: false\n\n    }\n  }\n\n  createCallBack = () => {\n    let number = this.state.phone\n    let date = this.state.date\n    let time = this.state.time\n    let datetime = '';\n    if (date.length > 0) {\n      datetime = new Date(`${date}`);\n      if (time.length > 0) {\n        datetime = new Date(`${date}T${time}`);\n      }\n    }\n    let email = this.state.email\n    let message = this.state.message\n    let url = '/chat/' + this.props.contaktiChat.serviceChannel + '/create_callback'\n    new Api().post(url, { number: number, datetime: datetime, email: email, message: message });\n    document.getElementById('contakti-user-name').innerHTML = this.props.contaktiChat.translations.user_dashboard.thanks_chat;\n    this.setState({callBackSent: true})\n  }\n\n\n  handleChange = (event, key) => {\n    let state = this.state;\n    let inputName = event.target.name;\n    state[inputName] = event.target.value;\n    this.setState({ ...state });\n  }\n  render() {\n    return (\n      <div className=\"call_back_box h-100\">\n      { this.state.callBackSent? (<div style={{textAlign: \"center\", fontSize: \"110%\", paddingTop: \"3em\"}}> <Text text={this.props.contaktiChat.translations.user_dashboard.sentmessage_chat} /> </div>) : (\n      <form id=\"contakti-user-details\" onSubmit={this.createCallBack} className=\"h-100 flex-column justify-content-between d-flex\">\n        <div className=\"row\">\n          <div className=\"col-12 pb-2\">\n            <label>{this.props.contaktiChat.translations.user_dashboard.callback_chat}</label>\n          </div>\n\n          <div className=\"col-12 pb-2\">\n            <div>\n              <div className=\"small-label pb-2\">{this.props.contaktiChat.translations.user_dashboard.cbnumber_chat}</div>\n              <input type=\"text\" onChange={this.handleChange} placeholder={this.props.contaktiChat.translations.user_dashboard.cbnumber_chat} name=\"phone\" className=\"form-control callback-control\" value={this.state.phone} id=\"messagebox-callback-number\" required />\n            </div>\n            <div style={{clear: \"both\"}}></div>\n          </div>\n\n          <div className=\"col-12\">\n            <div className=\"small-label pb-2\">{this.props.contaktiChat.translations.user_dashboard.time_chat}</div>\n            <div style={{clear: \"both\"}}></div>\n\n            <div style={{width: \"50%\", float: \"left\", boxSizing: \"border-box\",  paddingRight: \"20px\"}}>\n              <input type=\"date\" id=\"messagebox-date-field\" name=\"date\" value={this.state.date} onChange={this.handleChange} />\n            </div>\n\n            <div style={{width: \"50%\", float: \"left\", boxSizing: \"border-box\",  paddingRight: \"20px\"}}>\n              <input type=\"time\" id=\"messagebox-time-field\" name=\"time\" value={this.state.time} onChange={this.handleChange} />\n            </div>\n\n\n            <div style={{clear: \"both\"}}></div>\n          </div>\n          <div className=\"col-12 pb-2\">\n            <label>{this.props.contaktiChat.translations.user_dashboard.message_chat}</label>\n            <input type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} placeholder={this.props.contaktiChat.translations.user_dashboard.messageemail_chat} className=\"form-control callback-control\" id=\"messagebox-email\" required />\n            <br />\n            <textarea name=\"message\" value={this.state.message} onChange={this.handleChange} placeholder={this.props.contaktiChat.translations.user_dashboard.messagemsg_chat} className=\"form-control\" rows=\"8\" id=\"messagebox-message\"></textarea>\n\n          </div>\n        </div>\n          <div className=\"footer-sec\">\n            <div className=\"send-button-container pull-left\">\n              <button  type=\"submit\" id=\"messagebox-send\" className={`send ${this.state.phone.length > 0 && this.state.email.length > 0  ? \"\" : \"disabled\"}`} style={{backgroundColor: this.props.contaktiChat.color }} ><span className=\"fa fa-send\"></span></button>\n            </div>\n            <div className=\"pull-right\">\n              Powered by <a href=\"http://contakti.com\" target=\"_blank\" rel=\"noreferrer\" style={{position: \"relative\"}}>contakti.com</a>\n              <div className=\"send-button-container pull-left\">\n\n              </div>\n            </div>\n          </div>\n      </form>\n      )}\n      </div>\n\n    );\n  }\n}\n\nexport default CallBackBox;","import React, { Component } from 'react';\nclass Product extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n\n\n  onProductRemove = (p) => {\n    this.props.onProductRemove(p);\n  }\n\n  increaseQuantity = (product) => {\n    this.props.increaseQuantity(product)\n  }\n\n  decreaseQuantity = (product) => {\n    if (product.quantity > 1) {\n      product.quantity -= 1;\n      this.props.replaceProduct(product)\n    }\n  }\n\n\n  render() {\n    let { products } = this.props;\n    const {translations} = this.props\n\n    return (\n      <table className=\"table table-condensed table-striped \">\n        <thead>\n          <tr>\n            <th className=\"border-0\">{translations.product_title}</th>\n            <th className=\"border-0 text-center\">{translations.quantity}</th>\n            <th className=\"border-0 text-center\">{translations.price}</th>\n            <th className=\"border-0 text-center\">{translations.action}</th>\n          </tr>\n        </thead>\n\n        <tbody id=\"cart_body\">\n          {\n            products.map((product, index) => {\n              return <tr key={index}>\n                <td className=\"px-1 border-0\"><a href=\"#\" onClick={()=> { this.props.handleShow(product) }}>{product?.title}</a></td>\n                <td className=\"px-1 border-0\">\n                  <div className=\"center\" style={{ position: \"relative\" }}>\n                    <span onClick={() => this.increaseQuantity(product)}> <i className=\"fa fa-plus\"></i> </span>\n                    <input type=\"text\" className=\"form-control\" style={{ width: \"50px\", margin: \"0px 5px\" }} value={product?.quantity} readonly />\n                    <span onClick={() => this.decreaseQuantity(product)} > <i className=\"fa fa-minus\" ></i></span>\n                  </div>\n                </td>\n                <td className=\"px-1 border-0 text-center\">{product?.currency} {product?.price}</td>\n                <td className=\"px-1 border-0 center\">\n                  <button\n                    onClick={() => this.onProductRemove(product)}\n                    className=\"btn btn-danger \" ><i className=\"fa fa-times\" disabled ></i></button>\n                </td>\n              </tr>\n\n            })\n          }\n          <tr className=\"table-active\">\n            <td className=\"px-1 border-0 text-end\" colSpan=\"3\">\n              <strong>{translations.total}: {this.props.total}</strong>\n             </td>\n             <td className=\"px-1 border-0 \"/>\n          </tr>\n        </tbody>\n\n      </table>\n\n    );\n  }\n}\nexport default Product;","import React, { Component } from 'react';\nimport Product from './Product';\nimport _ from 'lodash';\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      sum: 0,\n      currency: \"USD\",\n      showModal: false,\n      selectedProduct: {}\n    }\n  }\n  componentDidMount() {\n    this.countSum();\n  }\n\n  onProductRemove = (product) => {\n    let { products } = this.state;\n    products = _.reject(products, (p) => {\n      return p.id === product.id;\n    });\n    this.setState({ products }, () => {\n      if (this.state.products.length === 0) {\n        this.props.onCartEmpty();\n      }\n      this.countSum();\n    });\n\n  }\n\n  addProduct = (p) => {\n    let { products } = this.state;\n    var product = _.find(products, { id: p.id });\n    if (product) {\n      product.quantity += 1;\n      this.replaceProduct(product);\n    }\n    else {\n      p.quantity = 1;\n      let currency = p.currency;\n      products.push(p)\n      this.setState({ products, currency }, () => this.countSum());\n\n    }\n  }\n\n\n  countSum = () => {\n    let sum = 0;\n    let { products } = this.state;\n    _.each(products, (product) => {\n      sum += (product.price * product.quantity);\n    });\n    this.setState({ sum });\n  }\n\n  replaceProduct = (product) => {\n    let { products } = this.state;\n    var index = _.findIndex(products, { id: product.id });\n    products.splice(index, 1, product);\n    this.setState({ products });\n    this.countSum();\n  }\n\n  render() {\n    let { products } = this.state;\n    let color = this.props.contaktiChat.color;\n    let text_color = this.props.contaktiChat.text_color;\n    const {translations} = this.props.contaktiChat\n    return (\n      <div id=\"contakti_cart_box\" className=\"cart_box\">\n        <div className=\"msg_head\" style={{ backgroundColor: color }}>\n          <span id=\"contakti-user-name\" style={{ color: text_color }}> {translations.user_dashboard.shopping_cart.cart_title}</span>\n          <span id=\"close-cart-icon\" className=\"float-end p-1 mr-2 d-none d-sm-block d-md-none\" onClick={this.props.toggleCart}><i className=\"fa fa-times\"></i></span>\n        </div>\n\n        <div className=\"cart_body d-flex flex-column justify-content-between\">\n          <div style={{maxHeight: \"270px\", overflow: \"auto\"}}>\n            <Product\n              products={products}\n              onProductRemove={this.onProductRemove}\n              increaseQuantity={this.addProduct}\n              replaceProduct={this.replaceProduct}\n              total={ `${this.state.currency} ${this.state.sum}` }\n              translations={translations.user_dashboard.shopping_cart}\n              handleShow={this.props.handleShow}\n            />\n          </div>\n\n          <div className=\"text-center\">\n            <div className=\"row\">\n            <div className=\"col-6\">\n              <label> {translations.user_dashboard.shopping_cart.payment_method}</label>\n\n              <div className=\"centera\" id=\"paymenst_method_select\">\n                <select className=\"form-control w-100 m-auto\">\n                  <option> Card</option>\n                  <option> PayPal</option>\n                </select>\n              </div>\n              <br />\n            </div>\n            <div className=\"col-6\">\n              <label > {translations.user_dashboard.shopping_cart.shipment_method}</label>\n              <div className=\"centera\" id=\"payments_method_select\">\n                <select className=\"form-control w-100 m-auto\">\n                  <option> ABC</option>\n                  <option> DEF</option>\n                </select>\n              </div>\n            </div>\n\n            </div>\n\n\n            <div>\n              <button className=\"btn w-50\" style={{ color: text_color, backgroundColor: color }}> {translations.user_dashboard.shopping_cart.checkout}</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Cart;\n","import React, { Component } from 'react';\nimport { Button, Modal, } from 'react-bootstrap'\nimport CarouselWrapper from '../modules/utils/CarouselWrapper';\n\nclass ProductInfoModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: false,\n\n        }\n    }\n    handleClose = () => {\n        this.props.handleClose();\n    }\n    render() {\n        let { product } = this.props\n        return (\n            <>\n                <Modal show={this.props.show} onHide={this.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>{this.props.title}</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"d-flex justify-content-between px-2\">\n                            <span className=\"float-start\">{product.title}</span>\n                            <span className=\"float-end\">{product.currency} {product.price}</span>\n                        </div>\n                        <hr />\n                        {product.images && product.images.length > 0 &&\n                            <div>\n                                <CarouselWrapper \n                                images={product.images}\n                                origin={this.props.origin}\n                                 />    \n                                <hr />\n                            </div>\n                        }\n\n                        <div  className=\"overflow-auto mt-1 px-2\" >\n                            <div>{product.description}</div>\n                            {product.attachments && product.attachments.length > 0 && <div>\n                                {product.attachments.map((f, index) => {\n                                    return (\n                                        <span className=\"mx-1\">\n                                            <a className=\"text-decoration-none\" href={`${this.props.origin}${f.file.url}`} download >{f.file_name}</a>\n                                        </span>\n                                    )\n                                })}\n                            </div>\n                            }\n\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" style={{ background: this.props.buttonColor }}  size=\"sm\" onClick={this.handleClose}>\n                            {this.props.btnText}\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default ProductInfoModal;\n","import React, { Component } from 'react';\nimport ContaktiChat from '../../classes/ContaktiChat';\nimport Dropdown from './Dropdown';\nimport ChatBox from '../chat_box/ChatBox';\nimport CallBackBox from '../others/CallBackBox';\nimport ChatUtils from '../../classes/ChatUtils';\nimport ReactResizeDetector from 'react-resize-detector';\nimport Cart from '../shopping_cart/Cart';\nimport ProductInfoModal from '../shopping_cart/ProductInfoModal';\n\nclass ChatPlugin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      style: {},\n      contaktiChat: {},\n      translations: {},\n      loading: true,\n      showDropDown: false,\n      showNoAgentScreen: false,\n      showPlugin: false,\n      showMinimize: false,\n      chatStarted: false,\n      chatInitialized: false,\n      showCartIcon: false,\n      showCart: false,\n      cartEmpty: true,\n      showProductModal: false,\n      selectedProduct: {}\n    }\n  }\n  handleProductModalClose = () => {\n    this.setState({ showProductModal: false })\n  };\n  handleProductModalShow = (p) => {\n    this.setState({ showProductModal: true, selectedProduct: p });\n  }\n\n  async componentDidMount() {\n    let contakti_chat = new ContaktiChat();\n    let chatUtils = ChatUtils\n    let urlParams = chatUtils.getUrlParams(window.location.href)\n    let serviceChannelId = urlParams.id;\n    contakti_chat.setServiceChannel(serviceChannelId);\n    await contakti_chat.setSettings();\n    await contakti_chat.setTranslations();\n    this.setState({\n      contaktiChat: contakti_chat,\n      loading: false,\n      style: {\n        color: contakti_chat.text_color,\n        backgroundColor: contakti_chat.color\n      }\n    });\n  }\n\n  toggleDropDown = (flag) => {\n    this.setState({ showDropDown: flag });\n  }\n  setChatStarted = () => {\n    if (!this.state.chatStarted) {\n      this.setState({ chatStarted: true });\n    }\n  }\n  showNoAgentOnlineScreen = (e) => {\n    this.setState({ showNoAgentScreen: true });\n    if (e) e.preventDefault();\n  }\n  showChatPlugin = async () => {\n    if (!this.state.chatInitialized) {\n      this.setState({ chatInitialized: true });\n    }\n    if (!this.state.showPlugin) {\n      let cont_chat = this.state.contaktiChat\n      await cont_chat.setSettings();\n      this.setState({ showPlugin: true, showMinimize: true, contaktiChat: cont_chat });\n\n      if (this.state.chatStarted) {\n        this.setState({ showDropDown: true });\n      }\n      if (!this.state.cartEmpty) {\n        this.setState({ showCartIcon: true });\n      }\n\n    }\n\n  }\n  hideChatPlugin = (e) => {\n    e.stopPropagation();\n    if (this.state.showPlugin) {\n      this.setState({ showPlugin: false, showMinimize: false, showDropDown: false, showCart: false, showCartIcon: false });\n    }\n  }\n  destroyChat = () => {\n    this.setState({ chatInitialized: false, showPlugin: false, showMinimize: false, showDropDown: false, showCartIcon: false, cartEmpty: true });\n  }\n  onResize = (width, height) => {\n    window.parent.postMessage({ type: 'set_dimensions', width, height }, \"*\");\n  }\n  toggleCart = () => {\n    this.setState({ showCart: !this.state.showCart });\n  }\n  addToCart = (product) => {\n    this.setState({ showCartIcon: true, cartEmpty: false }, () => this.cart.addProduct(product));\n  }\n  hideCartIcon = () => {\n    this.setState({ showCartIcon: false, showCart: false, cartEmpty: true });\n  }\n\n\n  render() {\n    const { contaktiChat, loading } = this.state;\n    let parent_width_class = '';\n\n    if (window.parent) {\n      if (window.outerWidth <= 600) {\n        parent_width_class += ' max-600-width '\n      }\n    }\n\n    if (loading) {\n      return null;\n    }\n    return (\n      <div id=\"contakti-chat-main\" className={parent_width_class}>\n        <ReactResizeDetector handleWidth handleHeight onResize={this.onResize} >\n          <div id=\"contakti-msg-box\"\n            className={`\n                 chat-plugin-parent\n                 ${this.state.showMinimize === true ? \"open\" : \"\"}\n              `}\n          >\n            <ProductInfoModal\n              title={contaktiChat.translations.user_dashboard.shopping_cart.product_details}\n              btnText={contaktiChat.translations.user_dashboard.shopping_cart.close}\n              buttonColor={contaktiChat.color}\n              product={this.state.selectedProduct}\n              handleShow={this.handleProductModalShow}\n              handleClose={this.handleProductModalClose}\n              show={this.state.showProductModal}\n              origin={contaktiChat.origin}\n            />\n            <div className=\"cart-parent\" style={{ display: this.state.showCart ? \"block\" : \"none\" }}>\n              {(!this.state.cartEmpty) && contaktiChat.chat_settings.enable_cart ? (\n                <Cart ref={instance => { this.cart = instance; }}    handleShow={this.handleProductModalShow} contaktiChat={contaktiChat} onCartEmpty={this.hideCartIcon} toggleCart={this.toggleCart} />\n              ) : \"\"}\n            </div>\n\n            <div className=\"chat-parent flex-column d-flex\">\n              <div id=\"contakti-msg-head\" onClick={this.showChatPlugin} className=\"msg_head\" style={this.state.style}>\n                <div>\n                  <div id=\"contakti-logo-container\">\n                    <img alt=\"logo\" src={`${contaktiChat.origin}/${contaktiChat.chat_settings.file.url}`} />\n                  </div>\n                </div>\n\n                <span id=\"contakti-user-name\" style={{ color: contaktiChat.text_color }}>{contaktiChat.chat_settings.chat_title}</span>\n\n                <span id=\"cart_show_button\" onClick={this.toggleCart} style={{ display: this.state.showCartIcon ? \"block\" : \"none\", margin: '5px 5px 0 0', color: contaktiChat.text_color }}>\n                  <i className=\"fa fa-shopping-cart mt-1\"></i>\n                </span>\n                <span>\n                  {this.state.showDropDown ? (<Dropdown styleObj={this.state.style} translations={contaktiChat.translations} showDropdown={this.state.showDropDown} quit={() => { this.chatBox.quitChat(); this.destroyChat() }} sendChatHistory={() => this.chatBox.showSendChatHistory()} downloadChatHistory={() => { this.chatBox.downloadChat(); }} startChat={() => this.showChatPlugin()} />) : \"\"}\n                </span>\n\n                <div id=\"contakti-msg-minimize\" >\n                  {this.state.showMinimize ? (\n                    <span className=\"fa-stack\" onClick={this.hideChatPlugin} style={{ color: contaktiChat.text_color }}><i className=\"fa fa-stack-2x fa-angle-down\" style={{ top: '3px', left: '0px' }}></i></span>\n                  ) : \"\"}\n                </div>\n              </div>\n              {this.state.chatInitialized ? (\n                <div className=\"h-100 px-1\" style={{ display: this.state.showPlugin ? \"block\" : \"none\" }}>\n                  {this.state.showNoAgentScreen ? (<CallBackBox contaktiChat={contaktiChat} showNoAgentOnlineScreen={this.showNoAgentOnlineScreen} ></CallBackBox>) : (\n                    <ChatBox ref={instance => { this.chatBox = instance; }}\n                      contaktiChat={contaktiChat}\n                      handleProductShow={this.handleProductModalShow}\n                      toggleDropDown={this.toggleDropDown}\n                      showNoAgentOnlineScreen={this.showNoAgentOnlineScreen}\n                      quit={() => { this.destroyChat() }}\n                      setChatStarted={this.setChatStarted}\n                      startChat={() => this.showChatPlugin()}\n                      addToCart={(product) => { this.addToCart(product) }}\n                    ></ChatBox>)}\n                </div>\n              ) : \"\"}\n            </div>\n          </div>\n        </ReactResizeDetector>\n      </div>\n    );\n  }\n}\n\nexport default ChatPlugin;\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.scss';\nimport './components/chat_plugin/ChatPlugin'\nimport ChatPlugin from './components/chat_plugin/ChatPlugin';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <ChatPlugin />\n    );\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './style.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}