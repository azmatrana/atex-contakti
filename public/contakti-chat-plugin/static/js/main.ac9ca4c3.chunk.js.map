{"version":3,"sources":["components/shopping_cart/Cart.jsx","components/shopping_cart/Product.jsx","classes/Api.js","classes/ContaktiChat.js","components/chat_plugin/Dropdown.jsx","classes/MessageFactory.js","classes/ChatUtils.js","components/modules/utils/Text.jsx","components/modules/utils/CarouselWrapper.jsx","components/chat_box/MessageImagesModal.jsx","components/chat_box/Message.jsx","components/others/SendChatHistory.jsx","components/chat_box/ChatBox.jsx","components/others/CallBackBox.jsx","components/shopping_cart/ProductInfoModal.jsx","components/chat_plugin/ChatPlugin.jsx","App.js","reportWebVitals.js","index.js"],"names":["Cart","props","onProductRemove","product","products","state","_","reject","p","id","setState","length","onCartEmpty","countSum","addProduct","find","quantity","replaceProduct","currency","push","sum","each","price","index","findIndex","splice","handleShipmentChange","event","selectedId","target","value","selected_method","selectedShipmentMethod","contaktiChat","shipment_methods","method","handleCheckoutMethodChange","selectedCheckoutMethod","shipmentMethods","showModal","selectedProduct","checkout_methods","this","render","color","text_color","translations","className","style","backgroundColor","user_dashboard","shopping_cart","cart_title","onClick","toggleCart","maxHeight","overflow","increaseQuantity","total","handleShow","checkout_method","onChange","map","eval","title","name","checkout","handleOrder","order","Component","Product","decreaseQuantity","product_title","action","href","position","type","width","margin","readOnly","disabled","colSpan","Api","document","location","origin","includes","serverUrl","baseUrl","prototype","get","a","route","fetch","res","json","data","post","cache","headers","body","JSON","stringify","response","postFile","file_data","ContaktiChat","locale","serviceChannel","chat_settings","url_obj","serverProtocol","api","channel","settings","chat_inquiry_fields","chat_initial_buttons","chatBotEnabled","enable_chatbot","chatWithHuman","initialMsg","initial_msg","agents_online","is_ad_finland","is_ad_finland_company","checkout_paytrail","checkout_ticket","Dropdown","toggle_dropdown","e","expanded","mouseover","styleObj","mouseout","end","quit","showEndChat","sendchatHistory","sendChatHistory","showSendEmail","showStart","startChat","downloadChat","downloadChatHistory","hidden","onMouseOver","onMouseOut","download_txt_file","display","send_to_email","end_chat","start_new_chat","ChatMessage","asJSON","ChatMessageFactory","options","from","username","initialise","newMessage","message","chatBot","msg","channel_id","chatbot","quitMessage","botToHumanSwitchMessage","fileMessage","file_url","file_path","ChatUtils","replaceURLs","replace","url","hyperlink","match","replaceAllNewLines","convertHtmlToText","html","getUrlParams","params","split","forEach","pair","decodeURIComponent","Text","parse","text","CarouselWrapper","handleSelect","selectedIndex","activeIndex","Carousel","onSelect","images","image","Item","src","file","alt","file_name","MessageImagesModal","handleClose","Modal","show","onHide","Body","Message","handleMessageImageShow","imageIndex","modalImages","handleMessageImageClose","userName","fromTime","envelope","fromColor","bgClass","download","rel","upload_chat","gridTemplateColumns","borderColor","files","addToCart","handleProductShow","action_buttons","btn","i","hyper_link","test","sendCustomActionMessage","moment","timestamp","local","format","userInfo","info","SendChatHistory","handleChange","key","sendEmail","email","chat_history","quitChat","cancel","transcript","bgColor","send_chat_history_title","placeholder","messageemail_chat","messagemsg_chat","rows","messagesend_chat","messagesend_cancel","ChatBox","onStartClientResponse","agentPresent","setSendDisabled","callback","onMessageReceived","connect","chatChannel","fayeServer","server","window","Danthes","sign","setTimeout","displayNoAgentOnlineScreen","timeOut","contakti_chat","showNoAgentOnlineScreen","connectTimeout","scrollDown","showNoAgentOnline","successCallback","agent_online","indicators","getElementById","messageCame","localStorage","getItem","setItem","innerHTML","typing_text","removeItem","agentsCount","quit_chat","join_chat","welcome_message","agentName","clearTimeout","ask_human_to_help","innerText","changeFromBotToHumanChat","messages","chat_transcript","getChatTranscript","has_custom_action","custom_action_text","showCustomActionButtion","customActionButtionText","client_data","field","label","camelCase","phone","chat_display_fields","sendMessage","msg_text","messageFactory","_channelUrl","messagesListContainer","scrollIntoView","behavior","block","inline","sendQuitNotify","quitSent","encodeURIComponent","_channelIndicatorUrl","onKeyIndicator","onKeyPress","keyCode","onSendClicked","preventDefault","showDetailInput","showChat","toggleDropDown","bot_alias","enable_initial_buttons","moment1","msgs","setChatStarted","disableChatSendDisabled","updateUserDetail","uploadFile","fileInput","click","handleFileChange","formdata","FormData","append","uploadedFileUrls","showSendChatHistory","showSendChatHistoryFlag","chatUtils","_moment","fileDownload","createTicket","isFromCart","task_data","order_details","setPluginDisabledState","createdTask","createOrder","task_id","shipment_method","chatbot_product_id","setOrderCreated","orderCreated","messageContainer","started","messagEnvelopes","disableMessageInput","Object","keys","chat","msgFactory","bottom","getElementsByClassName","classList","remove","onclick","_onSendClicked","bind","minimized","inquiryData","textAlign","fontSize","paddingTop","thanks_for_order","onSubmit","marginTop","input_type","required","marginBottom","start_chat","ref","el","chat_not_available","chat_leave_a_message_link","type_message","charCode","visibility","attachment_chat","marginRight","instance","CallBackBox","createCallBack","number","date","time","datetime","Date","thanks_chat","callBackSent","sentmessage_chat","callback_chat","cbnumber_chat","clear","time_chat","float","boxSizing","paddingRight","message_chat","ProductInfoModal","Header","closeButton","Title","description","attachments","f","Footer","Button","variant","background","buttonColor","size","btnText","ChatPlugin","handleProductModalClose","showProductModal","handleProductModalShow","flag","showDropDown","chatStarted","showNoAgentScreen","showChatPlugin","chatInitialized","showPlugin","cont_chat","setSettings","showMinimize","cartEmpty","showCartIcon","hideChatPlugin","stopPropagation","showCart","destroyChat","onResize","height","parent","postMessage","cart","hideCartIcon","disableChatboxContent","createCartTicket","chatBox","order_products","taskId","loading","urlParams","serviceChannelId","setServiceChannel","setTranslations","parent_width_class","outerWidth","handleWidth","handleHeight","product_details","close","enable_cart","chat_title","showDropdown","top","left","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.ac9ca4c3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Product from './Product';\nimport _ from 'lodash';\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      shipmentMethods: [],\n      sum: 0,\n      currency: \"USD\",\n      showModal: false,\n      selectedProduct: {},\n      selectedShipmentMethod: this.props.contaktiChat.shipment_methods[0],\n      selectedCheckoutMethod: this.props.contaktiChat.checkout_methods[0]\n    }\n  }\n  componentDidMount() {\n    this.countSum();\n    let { contaktiChat } = this.props;\n  }\n\n  onProductRemove = (product) => {\n    let { products } = this.state;\n    products = _.reject(products, (p) => {\n      return p.id === product.id;\n    });\n    this.setState({ products }, () => {\n      if (this.state.products.length === 0) {\n        this.props.onCartEmpty();\n      }\n      this.countSum();\n    });\n\n  }\n\n  addProduct = (p) => {\n    let { products } = this.state;\n    var product = _.find(products, { id: p.id });\n    if (product) {\n      product.quantity += 1;\n      this.replaceProduct(product);\n    }\n    else {\n      p.quantity = 1;\n      let currency = p.currency;\n      products.push(p)\n      this.setState({ products, currency }, () => this.countSum());\n\n    }\n  }\n\n\n  countSum = () => {\n    let sum = 0;\n    let { products } = this.state;\n    _.each(products, (product) => {\n      sum += (product.price * product.quantity);\n    });\n    this.setState({ sum });\n  }\n\n  replaceProduct = (product) => {\n    let { products } = this.state;\n    var index = _.findIndex(products, { id: product.id });\n    products.splice(index, 1, product);\n    this.setState({ products });\n    this.countSum();\n  }\n\n  handleShipmentChange = (event) => {\n    let selectedId = event.target.value;\n    let selected_method = this.state.selectedShipmentMethod;\n    _.each(this.props.contaktiChat.shipment_methods, (method) => {\n      if ( selectedId == method.id)\n      {\n        selected_method = method;\n      }\n    });\n    this.setState({selectedShipmentMethod: selected_method });\n  }\n\n  handleCheckoutMethodChange = (event) => {\n    this.setState({selectedCheckoutMethod: event.target.value });\n  }\n\n  render() {\n    let { products, selectedCheckoutMethod } = this.state;\n    const { contaktiChat } = this.props\n    let color = contaktiChat.color;\n    let text_color = contaktiChat.text_color;\n    const { translations } = contaktiChat\n    return (\n      <div id=\"contakti_cart_box\" className=\"cart_box\">\n        <div className=\"msg_head\" style={{ backgroundColor: color }}>\n          <span id=\"contakti-user-name\" style={{ color: text_color }}> {translations.user_dashboard.shopping_cart.cart_title}</span>\n          <span id=\"close-cart-icon\" className=\"float-end p-1 mr-2 d-none d-sm-block d-md-none\" onClick={this.props.toggleCart}><i className=\"fa fa-times\"></i></span>\n        </div>\n\n        <div className=\"cart_body d-flex flex-column justify-content-between\">\n          <div style={{ maxHeight: \"270px\", overflow: \"auto\" }}>\n            <Product\n              products={products}\n              onProductRemove={this.onProductRemove}\n              increaseQuantity={this.addProduct}\n              replaceProduct={this.replaceProduct}\n              total={`${this.state.currency} ${this.state.sum}`}\n              translations={translations.user_dashboard.shopping_cart}\n              handleShow={this.props.handleShow}\n            />\n          </div>\n          <div className=\"text-center\">\n            <div className=\"row form-group\">\n              <div className=\"col-6\">\n                <label> {translations.user_dashboard.shopping_cart.checkout_method}</label>\n                <div className=\"centera\" id=\"checkout_method_select\">\n                  <select className=\"form-control w-100 m-auto\" onChange={this.handleCheckoutMethodChange}\n                          value={this.state.selectedCheckoutMethod}>\n                    {contaktiChat.checkout_methods.map((method, index) => {\n                      return <option value={method}> {eval(\"translations.service_channels.\" + method )}</option>\n                    })}\n                  </select>\n                </div>\n              </div>\n\n              <div className=\"col-6\">\n              <label> {translations.shipment_methods.title}</label>\n                <div className=\"centera\" id=\"shipment_method_select\">\n                  <select className=\"form-control w-100 m-auto\" onChange={this.handleShipmentChange}\n                          value={this.state.selectedShipmentMethod.id}>\n                    {contaktiChat.shipment_methods.map((method, index) => {\n                      return (<option value={method.id} key={index}> {method.name}</option>)\n                    })}\n                  </select>\n                </div>\n              </div>\n            </div>\n\n            <div>\n              {selectedCheckoutMethod === \"checkout_paytrail\" ? (\n\n                <button className=\"btn w-50\" style={{\n                  color: text_color,\n                  backgroundColor: color\n                }}> {translations.user_dashboard.shopping_cart.checkout}</button>\n              ) : (\n                <button className=\"btn w-50\" style={{\n                  color: text_color,\n                  backgroundColor: color\n                }}\n                  onClick={() => this.props.handleOrder(this.state.products, this.state.selectedCheckoutMethod, this.state.selectedShipmentMethod, this.state.sum)}\n                > {translations.user_dashboard.shopping_cart.order}</button>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Cart;\n","import React, { Component } from 'react';\nclass Product extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n\n\n  onProductRemove = (p) => {\n    this.props.onProductRemove(p);\n  }\n\n  increaseQuantity = (product) => {\n    this.props.increaseQuantity(product)\n  }\n\n  decreaseQuantity = (product) => {\n    if (product.quantity > 1) {\n      product.quantity -= 1;\n      this.props.replaceProduct(product)\n    }\n  }\n\n\n  render() {\n    let { products } = this.props;\n    const {translations} = this.props\n\n    return (\n      <table className=\"table table-condensed table-striped \">\n        <thead>\n          <tr>\n            <th className=\"border-0\">{translations.product_title}</th>\n            <th className=\"border-0 text-center\">{translations.quantity}</th>\n            <th className=\"border-0 text-center\">{translations.price}</th>\n            <th className=\"border-0 text-center\">{translations.action}</th>\n          </tr>\n        </thead>\n\n        <tbody id=\"cart_body\">\n          {\n            products.map((product, index) => {\n              return <tr key={index}>\n                <td className=\"px-1 border-0\"><a href=\"#\" onClick={()=> { this.props.handleShow(product) }}>{product?.title}</a></td>\n                <td className=\"px-1 border-0\">\n                  <div className=\"center\" style={{ position: \"relative\" }}>\n                    <span onClick={() => this.increaseQuantity(product)}> <i className=\"fa fa-plus\"></i> </span>\n                    <input type=\"text\" className=\"form-control\" style={{ width: \"50px\", margin: \"0px 5px\" }} value={product?.quantity} readOnly />\n                    <span onClick={() => this.decreaseQuantity(product)} > <i className=\"fa fa-minus\" ></i></span>\n                  </div>\n                </td>\n                <td className=\"px-1 border-0 text-center\">{product?.currency} {product?.price}</td>\n                <td className=\"px-1 border-0 center\">\n                  <button\n                    onClick={() => this.onProductRemove(product)}\n                    className=\"btn btn-danger \" ><i className=\"fa fa-times\" disabled ></i></button>\n                </td>\n              </tr>\n\n            })\n          }\n          <tr className=\"table-active\">\n            <td className=\"px-1 border-0 text-end\" colSpan=\"3\">\n              <strong>{translations.total}: {this.props.total}</strong>\n             </td>\n             <td className=\"px-1 border-0 \"/>\n          </tr>\n        </tbody>\n\n      </table>\n\n    );\n  }\n}\nexport default Product;","const Api = function (options= {}) {\n    \n    // this.serverUrl = process.env.HOST_NAME\n    // this.serverProtocol = process.env.PROTOCOL\n    // this.origin = options.host || 'http://localhost:3000'\n\n    if (document.location.origin.includes(\":300\"))\n    {\n        this.origin = 'http://localhost:3000'\n    }\n    else{\n        this.origin = document.location.origin\n    }\n    \n    this.serverUrl = this.origin + '/api/v1'\n    this.baseUrl = this.serverUrl;\n}\n\nApi.prototype.origin = \"ASdas\"\n\nApi.prototype.get = async function (route = '') {\n    const res = await fetch(`${this.baseUrl}/${route}`)\n    const data = await res.json()\n    if (!data) {\n        return null\n    }\n    else {\n        return data\n    }\n}\nApi.prototype.post = async function (route = '', data = {}) {\n    const response = await fetch(`${this.baseUrl}/${route}`, {\n        method: 'POST',\n        cache: 'no-cache',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data) \n    });\n    return await response.json();\n}\n\nApi.prototype.postFile = async function (route = '', file_data = {}) {\n    const response = await fetch(`${this.baseUrl}/${route}`, {\n        method: 'POST',\n        cache: 'no-cache',\n        body: file_data \n    });\n    return await response.json();\n}\nexport default Api\n\n\n","import Api from \"./Api\";\n\nclass ContaktiChat {\n    constructor(options = {}) {\n        // this.serverProtocol = process.env.PROTOCOL\n        if (document.location.origin.includes(\":300\"))\n        {\n            this.origin = 'http://localhost:3000'\n        }\n        else{\n            this.origin = document.location.origin\n        }\n\n        this.serverUrl = this.origin + '/api/v1'\n        this.locale = 'en';\n        this.serviceChannel = null;\n        this.chat_settings = {};\n        this.url_obj = {\n            serverUrl: this.serverUrl,\n            serverProtocol: this.serverProtocol\n        };\n        this.api = new Api(this.url_obj);\n    }\n    setServiceChannel(channel){\n        this.serviceChannel = channel;\n    }\n\n    async setSettings() {\n        let res = await this.api.get(`chat/${this.serviceChannel}/get_chat_settings`);\n        this.chat_settings = res.settings;\n        this.chat_settings.chat_inquiry_fields = res.chat_inquiry_fields;\n        this.chat_settings.chat_initial_buttons = res.chat_initial_buttons;\n        this.chatBotEnabled = this.chat_settings.enable_chatbot;\n        this.chatWithHuman = !(this.chat_settings.enable_chatbot);\n        this.initialMsg = this.chat_settings.initial_msg;\n        this.color = this.chat_settings.color;\n        this.text_color = this.chat_settings.text_color;\n        this.agents_online = res.agents_online;\n        this.is_ad_finland = res.is_ad_finland_company\n        this.shipment_methods = res.shipment_methods\n        \n        this.checkout_methods = []\n        if (this.chat_settings.checkout_paytrail) this.checkout_methods.push(\"checkout_paytrail\")\n        if (this.chat_settings.checkout_ticket) this.checkout_methods.push(\"checkout_ticket\")\n\n    }\n\n    async setTranslations() {\n        this.translations = await this.api.get(`chat/get_translations`);\n    }\n}\n\nexport default ContaktiChat\n","import React, { Component } from 'react';\n\nclass Dropdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: false,\n      showSendEmail: true,\n      showStart: false,\n      showEndChat: true,\n    }\n  }\n\n\n  // document.onclick = (event){\n  // \tif(!event.target.classList.contains('dropdown-toggle') && !event.target.classList.contains('fa-cog')){\n  // \t\tif(document.querySelector('.dropdown')){\n  // \t\t\tdocument.querySelector('.dropdown').classList.remove(\"open\");\n  // \t\t}\n  // \t}\n  // }\n\n  toggle_dropdown = (e) => {\n    // ele.parentElement.classList.remove(\"close-force\");\n    // e.target.parentNode.classList.toggle(\"open\");\n    this.setState({ expanded: !this.state.expanded });\n  }\n   mouseover = (e) => {\n    e.target.style.color = this.props.styleObj.color;\n    e.target.style.backgroundColor = this.props.styleObj.backgroundColor;\n  }\n  mouseout = (e) => {\n    e.target.style.color = this.props.styleObj.backgroundColor;\n    e.target.style.backgroundColor = this.props.styleObj.color;\n  }\n\n  end = () => {\n    this.props.quit();\n    this.setState({showEndChat: false});\n  }\n\n  sendchatHistory = () =>{\n    this.toggle_dropdown();\n    this.props.sendChatHistory();\n    this.setState({showSendEmail: false, showStart: true});\n  }\n\n  startChat =  async() =>{\n    this.setState({showStart: false});\n    await this.props.quit();\n    await this.props.startChat();\n  }\n\n  downloadChat = () => {\n    this.props.downloadChatHistory();\n  }\n\n\n  // mouseoverdownload(e) {\n  //   var x = document.getElementById(\"download_chat_history\");\n  //   x.style.color = document.getElementById('contakti-user-name').style.color;\n  //   x.style.backgroundColor = document.getElementById('contakti-msg-head').style.backgroundColor;\n  // }\n\n  // mouseoutdownload(e) {\n  //   var x = document.getElementById(\"download_chat_history\");\n  //   x.style.color = document.getElementById('contakti-msg-head').style.backgroundColor;\n  //   x.style.backgroundColor = document.getElementById('contakti-user-name').style.color;\n  // }\n\n  // mouseoversend(e) {\n  //   var y = document.getElementById(\"send_chat_history\");\n  //   y.style.color = document.getElementById('contakti-user-name').style.color;\n  //   y.style.backgroundColor = document.getElementById('contakti-msg-head').style.backgroundColor;\n  // }\n\n  // mouseoutsend(e) {\n  //   var y = document.getElementById(\"send_chat_history\");\n  //   y.style.color = document.getElementById('contakti-msg-head').style.backgroundColor;\n  //   y.style.backgroundColor = document.getElementById('contakti-user-name').style.color;\n  // }\n\n  // mouseovercancel(e) {\n  //   var z = document.getElementById(\"contakti-msg-close-chat\");\n  //   z.style.color = document.getElementById('contakti-user-name').style.color;\n  //   z.style.backgroundColor = document.getElementById('contakti-msg-head').style.backgroundColor;\n  // }\n\n  // mouseoutcancel(e) {\n  //   var z = document.getElementById(\"contakti-msg-close-chat\");\n  //   z.style.color = document.getElementById('contakti-msg-head').style.backgroundColor;\n  //   z.style.backgroundColor = document.getElementById('contakti-user-name').style.color;\n  // }\n\n  // mouseoverstart(e) {\n  //   var z = document.getElementById(\"contakti-msg-start-chat\");\n  //   z.style.color = document.getElementById('contakti-user-name').style.color;\n  //   z.style.backgroundColor = document.getElementById('contakti-msg-head').style.backgroundColor;\n  // }\n\n  // mouseoutstart(e) {\n  //   var z = document.getElementById(\"contakti-msg-start-chat\");\n  //   z.style.color = document.getElementById('contakti-msg-head').style.backgroundColor;\n  //   z.style.backgroundColor = document.getElementById('contakti-user-name').style.color;\n  // }\n\n\n\n\n\n  render() {\n    const {translations} = this.props\n    return (\n      <div className=\"dropdown chat-setting d--inline-block\" id=\"chat-setting-dropdown\" >\n        <button\n         style={{ color: this.props.styleObj.color }}\n          className=\"dropdown-toggle\"\n          onClick={this.toggle_dropdown}\n        >\n          <i className=\"fa fa-cog\"></i></button>\n\n        <ul className=\"chatsetting-dropdown-menu\" hidden={this.state.expanded ? false : true } id=\"chat-setting-dropdown-menu\">\n          <li>\n            <a id=\"download_chat_history\" style={{color: this.props.styleObj.backgroundColor, backgroundColor: this.props.styleObj.color }} onClick={this.downloadChat}  onMouseOver={this.mouseover} onMouseOut={this.mouseout}>\n             {translations.user_dashboard.download_txt_file}\n            </a>\n          </li>\n          <li>\n            <a id=\"send_chat_history\" style={{ display:this.state.showSendEmail? \"block\": \"none\", color: this.props.styleObj.backgroundColor, backgroundColor: this.props.styleObj.color }} onClick={this.sendchatHistory} onMouseOver={this.mouseover} onMouseOut={this.mouseout}>\n            {translations.user_dashboard.send_to_email}\n            </a>\n          </li>\n          <li>\n            <a id=\"contakti-msg-close-chat\" onClick={this.end} style={{ display:this.state.showEndChat? \"block\": \"none\" , color: this.props.styleObj.backgroundColor, backgroundColor: this.props.styleObj.color }} onMouseOver={this.mouseover} onMouseOut={this.mouseout}>\n            {translations.user_dashboard.end_chat}\n            </a>\n            <a id=\"contakti-msg-start-chat\" style={{ display:this.state.showStart? \"block\": \"none\", color: this.props.styleObj.backgroundColor, backgroundColor: this.props.styleObj.color }} onClick={this.startChat} onMouseOver={this.mouseover} onMouseOut={this.mouseout}>\n            {translations.user_dashboard.start_new_chat}\n            </a>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Dropdown;","const ChatMessage = function() {\n\n};\n\nChatMessage.prototype.asJSON = function() {\n    return JSON.stringify(this);\n};\nconst ChatMessageFactory = function(options) {\n    this.from = options.username;\n    this.channel = options.channel;\n    this.type = 'message';\n\n};\n\nChatMessageFactory.prototype.initialise = function() {\n\n}\nChatMessageFactory.prototype.newMessage = function(message, type, chatBot = false, from) {\n    var msg = new ChatMessage();\n    msg.from = from || this.from;\n    msg.channel_id = this.channel;\n    msg.type = type || this.type;\n    msg.chatbot = chatBot;\n    msg.message = message;\n    return msg;\n};\n\nChatMessageFactory.prototype.quitMessage = function() {\n    var msg = new ChatMessage();\n    msg.from = this.from;\n    msg.channel_id = this.channel;\n    msg.type = 'quit';\n    msg.message = 'Quitting.';\n    return msg;\n};\n\nChatMessageFactory.prototype.botToHumanSwitchMessage = function() {\n    var msg = new ChatMessage();\n    msg.from = this.from;\n    msg.channel_id = this.channel;\n    msg.type = 'botToHuman';\n    msg.message = 'Requesting human..';\n    return msg;\n};\n\n\nChatMessageFactory.prototype.fileMessage = function(file_url, file_path) {\n    var msg = new ChatMessage();\n    msg.from = this.from;\n    msg.channel_id = this.channel;\n    msg.type = 'file';\n    msg.message = file_url;\n    msg.file_path = file_path;\n    return msg;\n};\n\n\nexport default ChatMessageFactory","class ChatUtils {\n  static replaceURLs = (message) => {\n    if (!message) return '';\n    var urlRegex = /(((https?:\\/\\/)|(www\\.))[^\\s]+)/g;\n    let new_message = message.replace(urlRegex, function (url) {\n      var hyperlink = url;\n      if (!hyperlink.match('^https?:\\/\\/')) {\n        hyperlink = 'http://' + hyperlink;\n      }\n      return '<a href=\"' + hyperlink + '\" target=\"_blank\" rel=\"noopener noreferrer\">' + url + '</a>'\n    });\n\n    return new_message;\n  }\n\n  static replaceAllNewLines = (message) => {\n    if (!message) return '';\n    return message.replace(/\\n/g, '<br/>');\n  }\n\n  static convertHtmlToText = (html) => {\n    html = html.replace(/<style([\\s\\S]*?)<\\/style>/gi, '');\n    html = html.replace(/<script([\\s\\S]*?)<\\/script>/gi, '');\n    html = html.replace(/<\\/div>/ig, '\\n');\n    html = html.replace(/<\\/li>/ig, '\\n');\n    html = html.replace(/<li>/ig, '  *  ');\n    html = html.replace(/<\\/ul>/ig, '\\n');\n    html = html.replace(/<\\/p>/ig, '\\n');\n    html = html.replace(/<br\\s*[\\/]?>/gi, \"\\n\");\n    html = html.replace(/<[^>]+>/ig, '');\n    return html\n  }\n\n  static getUrlParams = (url) => {\n    var params = {};\n    (url + '?').split('?')[1].split('&').forEach(\n      function (pair) {\n        pair = (pair + '=').split('=').map(decodeURIComponent);\n        if (pair[0].length) {\n          params[pair[0]] = pair[1];\n        }\n      });\n\n    return params;\n  }\n};\n\nexport default ChatUtils","import parse from 'html-react-parser';\n\nconst Text = (props) => {\n    return parse(props.text)\n}\n \nexport default Text;","import React, { Component } from 'react';\nimport { Carousel } from 'react-bootstrap';\nclass CarouselWrapper extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { index: 0}\n    }\n    componentDidMount(){\n        let activeIndex = this.props.activeIndex ;\n        this.setState({ index: activeIndex});\n    }\n    handleSelect= (selectedIndex, e) => {\n        this.setState({ index: selectedIndex  });\n    }\n    render() { \n        \n        return ( <> \n        <Carousel activeIndex={this.state.index} onSelect={this.handleSelect}>\n            {this.props.images.map((image, index) => {\n                return (\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src={`${this.props.origin}${image.file.url}`}\n                            alt={image.file_name}\n                        />\n                    </Carousel.Item>\n                )\n            })}\n\n        </Carousel></> );\n    }\n}\n \nexport default CarouselWrapper;","import React, { Component } from 'react';\nimport { Button, Modal, } from 'react-bootstrap'\nimport CarouselWrapper from '../modules/utils/CarouselWrapper';\nclass MessageImagesModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    handleClose = () => {\n        this.props.handleClose()\n    }\n    render() {\n        return (\n            <>\n                <Modal show={this.props.showModal} onHide={this.handleClose}>\n                    <Modal.Body>\n                        <CarouselWrapper\n                            images={this.props.images}\n                            origin={this.props.origin}\n                            activeIndex={this.props.activeIndex}\n                        />\n                    </Modal.Body>\n                </Modal>\n            </>\n        );\n    }\n}\n\nexport default MessageImagesModal;","import React, { Component } from 'react';\nimport moment from 'moment';\nimport ChatUtils from '../../classes/ChatUtils';\nimport Text from '../modules/utils/Text';\nimport MessageImagesModal from './MessageImagesModal';\nclass Message extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.userName,\n      fromTime: this.props.envelope.from === this.username ? 'time_b' : 'time_a',\n      fromColor: this.props.from === this.username ? 'from_b' : 'from_a',\n      imageIndex: null,\n      showModal: false,\n      modalImages: []\n    }\n  }\n  handleMessageImageShow = (index, images) => {\n    this.setState({ imageIndex: index, showModal: true, modalImages: images});\n  }\n  handleMessageImageClose = () => {\n    this.setState({ showModal: false  });\n  }\n\n  render() {\n    var { contaktiChat } = this.props;\n\n    return (\n      <div className={this.props.bgClass} >\n        <MessageImagesModal\n         showModal={this.state.showModal}\n         activeIndex={this.state.imageIndex}\n         images={this.state.modalImages}\n         handleClose={this.handleMessageImageClose}\n         origin={contaktiChat.origin}/>\n        {this.props.envelope.type === 'file' ? (\n          <a download target=\"_blank\" rel=\"noreferrer\" href={ChatUtils.replaceAllNewLines(this.props.envelope.message)}>{`${this.props.envelope.from} ${contaktiChat.translations.user_dashboard.upload_chat}`}</a>\n\n        ) : (\n          <Text text={ChatUtils.replaceAllNewLines(ChatUtils.replaceURLs(this.props.envelope.message))} />\n        )}\n        { this.props.envelope.images ? (<div style={{gridTemplateColumns: \"auto auto auto auto\"}} className=\"d-grid mt-1\">\n          { this.props.envelope.images.map((image, index) => {\n            return(<div className=\"me-1 mb-1\">\n              <img src={`${contaktiChat.origin}${image.file.url}`} onClick={() => { this.handleMessageImageShow(index, this.props.envelope.images)}} style={{borderColor: contaktiChat.color}} className=\"img-thumbnail\"></img>\n            </div>)\n          })}\n\n        </div>) : \"\"\n        }\n        {\n          this.props.envelope.files ? (this.props.envelope.files.map((file) => {\n            return (\n              <div>\n                <a download target=\"_blank\" rel=\"noreferrer\" href={file.url}>{file.name}</a>\n              </div>)\n\n          })) : \"\"\n        }\n        {this.props.envelope.products ? (\n          <div id=\"chat-answer-products-wrapper\" className=\"mt-1\">\n            {this.props.envelope.products.map(product => {\n              return (<div className=\"answer_product\" key={`product-item-${product.id}`}>\n                <div className=\"child1\"><strong>{product.title}</strong> </div>\n                <div className=\"child2\">\n                  <a href=\"#\" onClick={() => this.props.addToCart(product)} className=\"add-to-cart-btn\" data-product-id={product.id} style={{ color: contaktiChat.text_color, backgroundColor: contaktiChat.color }}>\n                    <i className=\"fa fa-shopping-cart\"></i>\n                  </a>\n                </div>\n                <span onClick={() => {this.props.handleProductShow(product)}}> <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i> </span>\n              </div>)\n            })\n            }\n          </div>\n        ) : \"\"}\n\n        {this.props.envelope.action_buttons ? (\n          <div>\n               {this.props.envelope.action_buttons.map((btn, i) => {\n              return (\n                <div key={`action-buttons-${i}`}>\n                  <br />\n                  {btn.hyper_link && btn.hyper_link.length > 0 ? <a href={((!/^https?:\\/\\//i.test(btn.hyper_link))?'http://': \"\") + btn.hyper_link} className=\"action-button\" target=\"_blank\" style={{ backgroundColor: contaktiChat.color, color: contaktiChat.text_color }}><Text text={btn.text} /></a> :\n                    <button className=\"action-button\" style={{ backgroundColor: contaktiChat.color, color: contaktiChat.text_color }} onClick={this.props.sendCustomActionMessage}><Text text={btn?.text} /> </button>\n                  }\n                  <br />\n                </div>\n              )\n\n            })\n            }\n          </div>\n\n        ) : \"\"}\n        {\n          this.props.envelope.type !== 'quit' && this.props.envelope.type !== 'initial' ? (\n            <div>\n              <br />\n              <div className={`msg_time${this.state.fromTime}`}> {moment(this.props.envelope.timestamp ? this.props.envelope.timestamp : \"\").local().format('D.M.YYYY HH.mm')}</div>\n              <div className={`msg_from${this.state.fromColor}`}>{this.props.envelope.from} </div>\n              {this.props.envelope.from === this.props.userName ? (\n                <div>\n                  {this.props.userInfo.map((info, i) => {\n                    return (<div key={`user-info-${i}`} className={`msg_from${this.state.fromColor}`}>{info} </div>)\n                  })}\n                </div>\n              ) : \"\"}\n            </div>\n          ) : \"\"}\n      </div>);\n  }\n}\n\nexport default Message;\n","import React, { Component } from 'react';\nimport Api from '../../classes/Api';\nclass SendChatHistory extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            chat_history: \"\"\n        }\n    }\n    componentDidMount() {\n        this.setState({ chat_history: this.props.transcript });\n    }\n\n    handleChange = (event, key) => {\n        let state = this.state;\n        let inputName = event.target.name;\n        state[inputName] = event.target.value;\n        this.setState({ ...state });\n    }\n\n    sendEmail = () => {\n        let email = this.state.email;\n        let message = this.state.chat_history;\n        var url = 'chat/' + this.props.contaktiChat.serviceChannel + '/send_email_chat_history';\n        let data = { email: email, message: message };\n        new Api().post(url, data);\n        this.props.quitChat();\n    }\n\n    cancel = async () => {\n       await this.props.quitChat();\n        this.props.startChat();\n    }\n\n    render() {\n        const translations = this.props.contaktiChat.translations.user_dashboard\n        const color = this.props.bgColor\n        return (\n            <div id=\"contakti-user-details\" className=\"flex-column justify-content-between d-flex pt-2 px-1\">\n                <div>\n                  <label>{translations.send_chat_history_title}</label>\n                  <input type=\"email\" name=\"email\" onChange={this.handleChange} value={this.state.email} placeholder={translations.messageemail_chat} className=\"form-control callback-control\" id=\"send-chat-history-email\" />\n                  <br /><br />\n                  <textarea placeholder={translations.messagemsg_chat} className=\"form-control sendchat--history\" rows=\"4\" id=\"send-chat-history-message\" name=\"chat_history\" onChange={this.handleChange} value={this.state.chat_history} ></textarea>\n                  <br />\n                  <input type=\"hidden\" id=\"chat-client-container\" name=\"chat-client-container\" />\n                </div>\n                <div className=\"pb-2\">\n                  <div className=\"send-button-container pull-left\">\n                      <button id=\"send-chat-history-send\" className=\"send\" style={{ backgroundColor: color, margin: \"5px\" }}    onClick={this.sendEmail}>{translations.messagesend_chat}  </button>\n                      <span></span>\n                      <button id=\"send-chat-history-cancel\" className=\"send\" style={{ backgroundColor: color, margin: \"5px\" }}  onClick={this.cancel} >{translations.messagesend_cancel}</button>\n                  </div>\n                  <div className=\"pull-right\">\n                      Powered by <a href=\"http://contakti.com\" target=\"_blank\" rel=\"noreferrer\" style={{ position: \"relative\" }}>contakti.com</a>\n                      <div className=\"send-button-container pull-left\">\n\n                      </div>\n                  </div>\n                </div>\n            </div>);\n    }\n}\n\nexport default SendChatHistory;","import React, { Component } from 'react';\nimport ChatMessageFactory from '../../classes/MessageFactory';\nimport Message from './Message';\nimport Api from '../../classes/Api';\nimport moment from 'moment';\nimport SendChatHistory from '../others/SendChatHistory';\nimport _ from 'lodash';\nimport Text from '../modules/utils/Text';\nimport ChatUtils from '../../classes/ChatUtils';\nclass ChatBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chatChannel: null,\n      fayeServer: null,\n      messageContainer: document.getElementById('chat_area'),\n      username: '',\n      email: '',\n      phone: '',\n      messageFactory: new ChatMessageFactory({ username: this.username, channel: this.chatChannel, email: this.email, phone: this.phone }),\n      quitSent: false,\n      messageCame: false,\n      agentPresent: false,\n      agentsCount: 0,\n      connectTimeout: 0,\n      started: false,\n      messages: [],\n      messagEnvelopes: [],\n      contaktiChat: {},\n      showDetailInput: true,\n      showChat: false,\n      newMessage: \"\",\n      disableChatSendDisabled: false,\n      disableMessageInput: false,\n      showNoAgentOnline: false,\n      agentName: \"\",\n      showSendChatHistoryFlag: false,\n      chat_transcript: \"\",\n      showCustomActionButtion: false,\n      customActionButtionText: \"\",\n      uploadedFileUrls: [],\n      orderCreated: false\n    }\n  }\n  componentDidMount() {\n    if (!this.props.contaktiChat || (this.props.contaktiChat && Object.keys(this.props.contaktiChat).length === 0)) {\n      return;\n    }\n    let chat = this.props.contaktiChat\n\n    this.setState({ messageContainer: document.getElementById('chat_area') });\n    this.setState({ contaktiChat: chat }, async () => {\n      if (this.state.contaktiChat.chat_settings.format !== \"inquiry\" || this.state.contaktiChat.chat_settings.chat_inquiry_fields.length === 0) {\n        await this.startChat();\n      }\n      // window.onbeforeunload = this.quitChat;\n    });\n    this.setSendDisabled();\n  }\n\n  onStartClientResponse = (response) => {\n    if ((!this.state.agentPresent) && this.state.contaktiChat.chatWithHuman) {\n      this.setSendDisabled()\n    }\n\n    response.callback = this.onMessageReceived;\n    response.connect = true;\n\n    this.setState({ chatChannel: response.channel });\n    this.setState({ fayeServer: response.server });\n    window.Danthes.sign(response);\n    // Set client info in redis to use when client closes or reloads the chat.\n    setTimeout(() => {\n      const url = this.state.contaktiChat.serverUrl + `/chat/set_client_info?channel_id=${this.state.chatChannel}`\n      fetch(url, {\n        \"Content-Type\": \"application/json\"\n      });\n    }, 2000);\n\n  };\n\n\n\n  displayNoAgentOnlineScreen = (timeOut = 60000) => {\n    let contakti_chat = this.state.contaktiChat;\n    if (contakti_chat.agents_online == false && contakti_chat.chatWithHuman == true)\n    {\n      this.props.showNoAgentOnlineScreen();\n    }\n    else{\n      this.setState({\n        connectTimeout: setTimeout(() => {\n          this.scrollDown();\n          this.setState({ showNoAgentOnline: true });\n        }, timeOut)\n      });\n    }\n\n  };\n\n  successCallback = (data) => {\n    let contakti_chat = this.state.contaktiChat;\n    if (data.agent_online == false)\n    {\n      this.displayNoAgentOnlineScreen(0);\n    }\n    else\n    {\n      contakti_chat.chatWithHuman = true;\n      contakti_chat.chatBotEnabled = false;\n      this.setState({ contaktiChat: contakti_chat }, () => {\n        this.setSendDisabled();\n        this.displayNoAgentOnlineScreen();\n      });\n    }\n  }\n  onMessageReceived = (envelope) => {\n    if (envelope.type === 'indicator') {\n      return\n    }\n    //TODO indicators\n    var indicators = document.getElementById('contakti-msg-indicator');\n    this.setState({ messageCame: true });\n    if (envelope.type === 'agent_indicator') {\n      indicators = document.getElementById('contakti-msg-indicator');\n      var has_cookies = localStorage.getItem('indicator_state')\n      if (!has_cookies) {\n        // setCookies\n        localStorage.setItem('indicator_state', 'true')\n        indicators.innerHTML = envelope.from + this.state.contaktiChat.translations.user_dashboard.typing_text + '<div id=\"wave\"> <span class=\"dot\"></span> <span class=\"dot\"></span> <span class=\"dot\"></span> </div>';\n        this.setState({\n          connectTimeout: setTimeout(function () {\n            var indicators = document.getElementById('contakti-msg-indicator');\n            indicators.innerHTML = '';\n            // remove cookie\n            localStorage.removeItem('indicator_state')\n          }, 5000)\n        });\n      }\n    }\n    else {\n      if (envelope.type === 'quit') {\n        this.setState({ agentsCount: this.state.agentsCount - 1 });\n        envelope.message = `${envelope.from} ${this.state.contaktiChat.translations.user_dashboard.quit_chat}`;\n        if (this.state.agentsCount < 1) {\n          // Disable send button. Do stuff!\n          this.setState({ agentPresent: false });\n          this.setSendDisabled();\n        }\n      }\n      else if (envelope.type === 'join') {\n        this.setState({ agentsCount: this.state.agentsCount + 1 });\n        if (this.state.agentPresent) {\n          envelope.message = `${envelope.from} ${this.state.contaktiChat.translations.user_dashboard.join_chat}`;\n        } else {\n          envelope.message = `${envelope.from} ${this.state.contaktiChat.chat_settings.welcome_message}`;\n        }\n        this.setState({ agentPresent: true, agentName: envelope.from });\n        clearTimeout(this.state.connectTimeout);\n        this.setSendDisabled();\n      }\n      else if (envelope.type === 'switch_to_human') {\n        envelope.message = `${this.state.contaktiChat.translations.user_dashboard.ask_human_to_help}`;\n        if (envelope.from !== this.username) {\n          indicators.innerText = \"\";\n        }\n        this.changeFromBotToHumanChat(this.successCallback);\n      }\n      let { messages, chat_transcript } = this.state;\n      if (envelope) messages.push(envelope);\n      chat_transcript = this.getChatTranscript()\n      this.setState({ messages, chat_transcript })\n      if (envelope.has_custom_action && envelope.custom_action_text) {\n        this.setState({ showCustomActionButtion: true, customActionButtionText: envelope.custom_action_text });\n      }\n      if (envelope.from !== this.state.username) {\n        indicators.innerText = \"\";\n      }\n\n    }\n    this.scrollDown();\n  };\n\n\n\n\n  changeFromBotToHumanChat = async (successCallback) => {\n\n    let client_data = [];\n    if (this.state.contaktiChat.chat_settings.format === 'inquiry') {\n      client_data = this.state.contaktiChat.chat_settings.chat_inquiry_fields.map(field => {\n        return { label: field.title, value: this.state[_.camelCase(field.title)] }\n      })\n    }\n    else {\n      client_data = [\n        { label: \"Name\", value: this.state.username }\n      ]\n    }\n    let params = {\n      chatbot: false,\n      channel_id: this.state.chatChannel,\n      name: this.state.username,\n      email: this.state.email,\n      phone: this.state.phone,\n      chat_display_fields: client_data,\n      is_ad_finland_company: this.state.contaktiChat.is_ad_finland\n        }\n    // var options = \"chatbot=\" + false + \"&name=\" + this.state.username + \"&email=\" + this.state.email + \"&phone=\" + this.state.phone + \"&channel_id=\" + encodeURIComponent(this.state.chatChannel);\n    let route = `/chat/${this.state.contaktiChat.serviceChannel}/bot_initiate_human_chat`;\n    let res = await new Api().post(route, params);\n    successCallback(res);\n  }\n\n\n  setUsername(name) {\n    if (!name) {\n      name = 'Anonymous';\n    }\n    this.setState({ username: name });\n    let msgFactory = this.state.messageFactory\n    msgFactory.from = name;\n    this.setState({ messageFactory: msgFactory });\n  };\n\n  sendCustomActionMessage = (e) => {\n    this.sendMessage(e.target.innerText);\n  }\n\n  sendMessage = (msg_text = \"\") => {\n    if (msg_text.length === 0) {\n      msg_text = this.state.newMessage;\n    }\n    if (msg_text.length > 0) {\n      var msg = this.state.messageFactory.newMessage(msg_text, null, this.state.contaktiChat.chatBotEnabled);\n      let route = this._channelUrl();\n      new Api().post(route, msg);\n      this.setState({ newMessage: \"\" })\n    }\n  };\n\n\n\n  _channelUrl = () => {\n    return this.state.chatChannel + '/send_msg';\n  };\n\n  scrollDown = () => {\n    if (this.messagesListContainer) {\n      this.messagesListContainer.scrollIntoView({ behavior: \"smooth\", block: \"end\", inline: \"nearest\" });\n    }\n  };\n\n  sendQuitNotify = () => {\n    if (this.state.quitSent) return;\n    this.setState({ quitSent: true });\n    var msg = this.state.messageFactory.quitMessage();\n    let route = this._channelUrl();\n    new Api().post(route, msg);\n    var ret = true ? null : ':D'; // Some browsers need fooling to evaluate onbeforeunload\n    return ret;\n  };\n\n  quitChat = async () => {\n    if (this.state.agentPresent) {\n      this.sendQuitNotify();\n    } else {\n      if (this.state.chatChannel) {\n        let route = `/chat/${this.state.contaktiChat.serviceChannel}/abort_chat?channel_id=${encodeURIComponent(this.state.chatChannel)}`;\n        await new Api().get(route);\n      }\n    }\n  };\n  _channelIndicatorUrl = () => {\n\n    return this.state.chatChannel + \"/send_indicator\";\n  };\n\n  onKeyIndicator = () => {\n    var msg = this.state.messageFactory.newMessage(\"Customer typing\");\n    let route = this._channelIndicatorUrl();\n    new Api().post(route, msg);\n  };\n\n  onKeyPress = (event) => {\n    var keyCode = event.keyCode;\n    if (keyCode !== 13) {\n      this.onKeyIndicator();\n    }\n\n  };\n\n  onSendClicked = (event) => {\n    this.setSendDisabled();\n    this.sendMessage();\n  };\n\n  startChat = async (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    let name = \"Anonymous\";\n    if (this.state.contaktiChat.chat_settings.format === 'inquiry') {\n      name = this.state[_.camelCase(this.state.contaktiChat.chat_settings.chat_inquiry_fields[0]?.title)]\n    }\n    this.setState({\n      showDetailInput: false,\n      showChat: true,\n      username: this.state.username.length > 0 ? this.state.username : name,\n      messageFactory: new ChatMessageFactory({\n        username: this.state.username.length > 0 ? this.state.username : name,\n        channel: this.state.chatChannel,\n        email: this.state.email,\n        phone: this.state.phone\n      })\n    });\n    this.props.toggleDropDown(true);\n    if (this.state.contaktiChat.chatWithHuman) {\n      this.displayNoAgentOnlineScreen();\n    }\n    let client_data = [];\n    if (this.state.contaktiChat.chat_settings.format === 'inquiry') {\n      client_data = this.state.contaktiChat.chat_settings.chat_inquiry_fields.map(field => {\n        return { label: field.title, value: this.state[_.camelCase(field.title)] }\n      })\n    }\n    else {\n      client_data = [\n        { label: \"Name\", value: name }\n      ]\n    }\n    let params = {\n      chatbot: this.state.contaktiChat.chatBotEnabled,\n      name: name,\n      email: this.state.email,\n      phone: this.state.phone,\n      chat_display_fields: client_data,\n      is_ad_finland_company: this.state.contaktiChat.is_ad_finland\n    }\n\n    let route = `chat/${this.state.contaktiChat.serviceChannel}/initiate_chat`;\n    let res = await new Api().post(route, params);\n\n    if (this.state.contaktiChat.initialMsg.length > 0) {\n      var msg = this.state.messageFactory.newMessage(this.state.contaktiChat.initialMsg, \"initial\", this.state.contaktiChat.chatBotEnabled, this.state.contaktiChat.chat_settings.bot_alias);\n      if (this.state.contaktiChat.chatBotEnabled && this.state.contaktiChat.chat_settings.enable_initial_buttons) {\n        msg.action_buttons = this.state.contaktiChat.chat_settings.chat_initial_buttons.map(btn => {return{ text: btn.title}});\n      }\n      let moment1 = moment;\n      msg.timestamp = moment1().local().format();\n      let msgs = this.state.messages\n      msgs.push(msg);\n      this.setState({ messages: msgs });\n    }\n    this.props.setChatStarted();\n    this.onStartClientResponse(res);\n  };\n\n  setSendDisabled = (event) => {\n    if (!this.state.agentPresent && this.state.contaktiChat?.chatWithHuman) {\n      this.setState({ disableChatSendDisabled: true })\n      if (!this.state.agentPresent && this.state.contaktiChat?.chatWithHuman) {\n        this.setState({ disableChatSendDisabled: true })\n\n      }\n    } else {\n      this.setState({ disableChatSendDisabled: false })\n    }\n  };\n\n  maximize() {\n    document.getElementById('contakti-msg-box').style.bottom = '0px';\n    var chatSettingDrowpdown = document.getElementById('chat-setting-dropdown')\n    if (chatSettingDrowpdown && document.getElementsByClassName('show-dropdown').length > 0) {\n      document.getElementById('chat-setting-dropdown').style.display = \"block\";\n    }\n    document.getElementById('contakti-msg-minimize').classList.remove('hide');\n    var sendButton = document.getElementById('contakti-chat-send-btn');\n    sendButton.onclick = this._onSendClicked.bind(this);\n    this.setState({ messageContainer: document.getElementById('contakti-msg-body') });\n    this.setState({ minimized: false });\n  };\n\n  updateUserDetail = () => {\n  }\n\n  handleChange = (event, key) => {\n    let state = this.state;\n    let inputName = event.target.name;\n    state[inputName] = event.target.value;\n    this.setState({ ...state });\n  }\n  uploadFile = () => {\n    this.fileInput.click();\n  }\n  handleFileChange = async (e) => {\n    // const fileData = e.target.files[0];\n\n    let file = e.target.files[0];\n\n\n    var formdata = new FormData();\n    formdata.append(\"upload\", file, file.name);\n\n    let response = await new Api().postFile('chat/uploadfile', formdata);\n    this.state.uploadedFileUrls.push(response.file_url)\n    var msg = this.state.messageFactory.fileMessage(response.file_url, response.file_path);\n    let route = this._channelUrl();\n    new Api().post(route, msg);\n\n  }\n\n  showSendChatHistory = () => {\n    this.setState({ showSendChatHistoryFlag: true });\n  }\n  getChatTranscript = () => {\n    let transcript = \"\";\n    this.state.messages.forEach(message => {\n      let chatUtils = ChatUtils\n      if(message && message.message){\n      transcript += chatUtils.convertHtmlToText(message?.message)\n      transcript += '\\n'\n      }\n      if (message && message.files) {\n        message.files.forEach(file => {\n          transcript += file.url;\n          transcript += '\\n'\n        })\n      }\n      if (message && message.action_buttons) {\n        message.action_buttons.forEach(btn => {\n          transcript += btn.text;\n          if(btn.hyper_link && btn.hyper_link.length > 0 ){\n            transcript +=  `( ${btn.hyper_link} )`\n          }\n          transcript += '\\n';\n        })\n      }\n      if (message && message.type !== 'quit') {\n        let _moment = moment;\n        transcript += _moment(message.timestamp ? message.timestamp : []).local().format('D.M.YYYY HH.mm')\n        transcript += '\\n';\n        transcript += message.from;\n        transcript += '\\n';\n      }\n      transcript += '\\n';\n    })\n    return transcript;\n  }\n\n  downloadChat = () => {\n    this.fileDownload.click();\n  }\n\n  createTicket = async (isFromCart = false, products = [], sum = \"\", title=\"\" ) => {\n    const task_data = {};\n    task_data['channel_id'] = this.state.chatChannel\n    task_data['media_channel_id'] = this.state.contaktiChat.serviceChannel;\n    task_data['messages_attributes'] = [];\n    task_data['messages_attributes'][0] = {};\n    task_data['messages_attributes'][0]['title'] = title;\n    task_data['messages_attributes'][0][\"channel_type\"] = 'chat';\n    if (this.state.customActionButtionText.length > 0 && title.length === 0) {\n      task_data['messages_attributes'][0]['title'] = this.state.customActionButtionText;\n    }\n    task_data['messages_attributes'][0]['to'] = 'Internal';\n    task_data['messages_attributes'][0]['from'] = this.state.username;\n    task_data['user_uploaded_file_urls'] = this.state.uploadedFileUrls;\n    if (this.state.email.length > 0) task_data['messages_attributes'][0]['from'] = this.state.email;\n    let transcript = \"\";\n    if (this.state.contaktiChat.chat_settings.format === 'inquiry') {\n      this.state.contaktiChat.chat_settings.chat_inquiry_fields.forEach(field => {\n        transcript += `${field.title} : ${this.state[_.camelCase(field.title)]}\\n`;\n      })\n    }\n    else {\n      transcript += `Name : ${this.state.username}\\n`;\n    }\n    transcript += `\\n`;\n    if(this.state.newMessage.length > 0){\n      var msg = this.state.messageFactory.newMessage(this.state.newMessage);\n      let {messages} = this.state;\n      messages.push(msg);\n    }\n    transcript += this.getChatTranscript();\n    if(isFromCart === true){\n      transcript +=  `${this.state.contaktiChat.translations.user_dashboard.shopping_cart.order_details}: \\n`\n      products.forEach(product => {\n        transcript += `${product.title}&nbsp&nbsp&nbsp&nbsp&nbsp${product.quantity}-items&nbsp&nbsp&nbsp&nbsp&nbsp${product.currency}${product.price}\\n` \n      })\n      transcript += `\\ntotal: ${products[0].currency}${sum}\\n`\n\n    }\n\n    task_data['messages_attributes'][0]['description'] = transcript;\n    task_data['type'] = 'chat';\n    const url = 'tasks/create_task_from_chat'\n    this.props.setPluginDisabledState(true);\n    let createdTask = await new Api().post(url, task_data);\n    this.props.setPluginDisabledState(false);\n    this.setState({ showCustomActionButtion: false, customActionButtionText: \"\" });\n    this.quitChat();\n    if(isFromCart === false){\n      this.props.quit();\n    }\n\n    return createdTask.id;\n  }\n\n  createOrder = async (task_id = null, products = [], checkout_method = \"\", shipment_method={}, sum=\"\" ) => {\n    let data = {};\n    data['checkout_method'] = checkout_method;\n    data['shipment_method_id'] = shipment_method.id;\n    data['task_id'] = task_id;\n    data['total'] = sum;\n    data['order_products_attributes'] = [];\n    data['inquiry_fields_data'] = [];\n    data['service_channel_id'] = this.state.contaktiChat.serviceChannel;\n    if (this.state.contaktiChat.chat_settings.format === 'inquiry') {\n      data['inquiry_fields_data'] = this.state.contaktiChat.chat_settings.chat_inquiry_fields.map(field => {\n        return { label: field.title, value: this.state[_.camelCase(field.title)] }\n      })\n    }\n    \n    products.forEach( async (product) => {\n      let p = {\n        chatbot_product_id: product.id,\n        quantity: product.quantity,\n        price: product.price\n      }\n      data['order_products_attributes'].push(p);\n    })\n    let createdOrder = await new Api().post('orders', data)\n  }\n\n  setOrderCreated = () => {\n    this.setState({ orderCreated:  true});\n  }\n\n  render() {\n    if (!this.state.contaktiChat) {\n      return null;\n    }\n    const { contaktiChat, disableChatSendDisabled } = this.state;\n    const { messages } = this.state;\n\n    let inquiryData = [];\n    if (contaktiChat.chat_settings?.format === 'inquiry') {\n      contaktiChat.chat_settings.chat_inquiry_fields.forEach((field, index) => {\n        if (index > 0) {\n          inquiryData.push(this.state[_.camelCase(field.title)]);\n        }\n      })\n    }\n\n\n\n    return (\n\n      <div id=\"contakti-msg-container\" className=\"msg_wrap h-100\">\n         { this.state.orderCreated ? (<div style={{textAlign: \"center\", fontSize: \"110%\", paddingTop: \"3em\"}}> <Text text={contaktiChat.translations.user_dashboard.shopping_cart.thanks_for_order} /> </div>) : (<div>\n        <div id=\"contakti-chat-agent-details\" className=\"msg_agent\" style={{ display: this.state.agentName === \"\" ? \"none\" : \"block\", color: this.props.contaktiChat.text_color, backgroundColor: this.props.contaktiChat.color }}>\n          <div className=\"msg_agent_name\" id=\"contakti-chat-agent-name\">{this.state.agentName}</div>\n        </div>\n        {\n          contaktiChat?.chat_settings?.format === \"inquiry\" && contaktiChat?.chat_settings.chat_inquiry_fields.length > 0 ?\n            <div id=\"contakti-user-details\" className=\"h-100 px-1\" style={{ display: this.state.showDetailInput ? 'block' : 'none' }} >\n              <form className=\"flex-column justify-content-between d-flex h-100\" onSubmit={async (event) => { await this.startChat(event); }}>\n                <div style={{ maxHeight: \"330px\", overflow: \"auto\", marginTop: \"115px\" }} >\n                  {contaktiChat?.chat_settings.chat_inquiry_fields.map((field, index) => {\n                    return (<div key={`inquiry-fields-${index}`}><label>{field.title}</label>\n                      <input type={field.input_type} required className=\"form-control-start\" value={this.state[_.camelCase(field.title)] || \"\"} name={_.camelCase(field.title)} onChange={this.handleChange} id=\"contakti-input-name\" />\n                    </div>\n                    )\n                  })}\n                </div>\n                <div style={{ textAlign: 'center', marginBottom: \"20px\" }} >\n                  <div>\n                    <input type=\"submit\" id=\"contakti-input-details-submit\" className=\"btn btn-default btn-block\" value={contaktiChat.translations.user_dashboard.start_chat} style={{ backgroundColor: this.props.contaktiChat.color, color: this.props.contaktiChat.text_color }} />\n                  </div>\n                  <div >\n                    Powered by <a href=\"http://contakti.com\" target=\"_blank\" rel=\"noreferrer\">contakti.com</a>\n                  </div>\n                </div>\n              </form>\n            </div>\n            : null\n        }\n        {this.state.showSendChatHistoryFlag ? (<SendChatHistory contaktiChat={contaktiChat} bgColor={contaktiChat.color} transcript={this.state.chat_transcript} quitChat={() => { this.props.quit(); this.quitChat(); }} startChat={() => this.props.startChat()} />) : (\n          <div className={this.state.showDetailInput === false ? '' : 'd-none'}>\n\n            <div id=\"contakti-msg-body\" className=\"msg_bodyclient\">\n              {contaktiChat?.chat_settings?.format === \"inquiry\" && contaktiChat?.chat_settings.chat_inquiry_fields.length > 0 ? (\n                null\n              ) : \"\"}\n              <div style={{ display: this.state.showChat ? 'block' : 'none' }} id=\"chat_area\" ref={(el) => { this.messagesListContainer = el; }}>\n                {\n                  this.state.showNoAgentOnline ? (\n                    <div className=\"msg_n\">{contaktiChat.translations.user_dashboard.chat_not_available}<a href=\"#\" onClick={this.props.showNoAgentOnlineScreen} id=\"contakti_chat_not_available_link\"> {contaktiChat.translations.user_dashboard.chat_leave_a_message_link}</a></div>\n                  ) : (\n\n                    <div>\n                      {\n                        messages.map((message, index) => {\n                          return (\n                            <Message key={index}\n                              envelope={message}\n                              handleProductShow={this.props.handleProductShow}\n                              bgClass={message.from === this.state.username ? 'msg_b' : 'msg_a'}\n                              userName={this.state.username}\n                              sendCustomActionMessage={this.sendCustomActionMessage}\n                              addToCart={(product) => { this.props.addToCart(product) }}\n                              contaktiChat={contaktiChat}\n                              userInfo={inquiryData}\n                            />\n                          );\n\n                        })\n                      }\n                    </div>\n\n                  )}\n              </div>\n            </div>\n            <div id=\"contakti-msg-indicator\" className=\"msg_indictor\"> </div>\n            <div id=\"contakti-msg-footer\" className=\"msg_footer\" style={{ display: this.state.showChat ? 'block' : 'none' }}>\n              <div className=\"block-row\">\n                <div className=\"input-block\">\n                  <textarea\n                    id=\"contakti-chat-text-input\"\n                    value={this.state.newMessage}\n                    disabled={disableChatSendDisabled}\n                    name='newMessage'\n                    onChange={this.handleChange}\n                    className=\"msg_input form-control\"\n                    placeholder={contaktiChat?.translations?.user_dashboard.type_message}\n                    onKeyPress={(event) => {\n                      if (event.charCode === 13) {\n                        event.preventDefault();\n                        this.onSendClicked();\n                      }\n                      else {\n                        this.onKeyPress(event);\n                      }\n                    }}\n                    disabled={this.state.disableChatSendDisabled ? true : false}\n                    rows=\"3\" />\n                </div>\n                <div className=\"button-block\">\n                  <a\n                    className={`contakti-chat-send-btn ${this.state.newMessage.length > 0 ? \"\" : \"disabled\"}`}\n                    onClick={this.onSendClicked}\n                    style={{ backgroundColor: this.props.contaktiChat.color, color: this.props.contaktiChat.text_color }}>\n                    <span className=\"fa fa-send\"></span>\n                  </a>\n                </div>\n              </div>\n              <div className=\"block-row mb-1\">\n                <div className=\"pull-left\">\n                  <button id=\"custom_action_button\" onClick={this.createTicket} style={{ visibility: this.state.showCustomActionButtion ? 'visible' : 'hidden' }}> {this.state.customActionButtionText}</button>\n                </div>\n              </div>\n              <div className=\"block-row mb-10\">\n                <div className=\"pull-left\">\n                  <a onClick={this.uploadFile} id=\"contakti-open-file\">{contaktiChat.translations?.user_dashboard.attachment_chat}</a>\n                </div>\n                <div className=\"pull-right\">\n                  Powered by <a href=\"http://contakti.com\" target=\"_blank\" rel=\"noreferrer\" style={{ marginRight: '10px' }}>contakti.com</a>\n                </div>\n              </div>\n              <form id=\"contakti-file-upload-form\" style={{ display: 'none' }}>\n                <input type=\"file\" id=\"contakti-file-upload-input\" ref={instance => { this.fileInput = instance; }} name=\"upload\" onChange={this.handleFileChange} />\n              </form>\n            </div>\n          </div>\n        )}\n        </div>\n        )}\n        \n        <a ref={instance => { this.fileDownload = instance; }} style={{ display: \"none\" }} href={`data:text/plain;charset=utf-8,${encodeURIComponent(this.state.chat_transcript)}`} download=\"chat_history.txt\"></a>\n      </div>\n    );\n  }\n}\n\nexport default ChatBox;\n","import React, { Component } from 'react';\nimport Api from '../../classes/Api';\nimport Text from '../modules/utils/Text';\nclass CallBackBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      phone: \"\",\n      date: \"\",\n      time: \"\",\n      email: \"\",\n      message: \"\",\n      callBackSent: false\n\n    }\n  }\n\n  createCallBack = () => {\n    let number = this.state.phone\n    let date = this.state.date\n    let time = this.state.time\n    let datetime = '';\n    if (date.length > 0) {\n      datetime = new Date(`${date}`);\n      if (time.length > 0) {\n        datetime = new Date(`${date}T${time}`);\n      }\n    }\n    let email = this.state.email\n    let message = this.state.message\n    let url = '/chat/' + this.props.contaktiChat.serviceChannel + '/create_callback'\n    new Api().post(url, { number: number, datetime: datetime, email: email, message: message });\n    document.getElementById('contakti-user-name').innerHTML = this.props.contaktiChat.translations.user_dashboard.thanks_chat;\n    this.setState({callBackSent: true})\n  }\n\n\n  handleChange = (event, key) => {\n    let state = this.state;\n    let inputName = event.target.name;\n    state[inputName] = event.target.value;\n    this.setState({ ...state });\n  }\n  render() {\n    return (\n      <div className=\"call_back_box h-100\">\n      { this.state.callBackSent? (<div style={{textAlign: \"center\", fontSize: \"110%\", paddingTop: \"3em\"}}> <Text text={this.props.contaktiChat.translations.user_dashboard.sentmessage_chat} /> </div>) : (\n      <form id=\"contakti-user-details\" onSubmit={this.createCallBack} className=\"h-100 flex-column justify-content-between d-flex\">\n        <div className=\"row\">\n          <div className=\"col-12 pb-2\">\n            <label>{this.props.contaktiChat.translations.user_dashboard.callback_chat}</label>\n          </div>\n\n          <div className=\"col-12 pb-2\">\n            <div>\n              <div className=\"small-label pb-2\">{this.props.contaktiChat.translations.user_dashboard.cbnumber_chat}</div>\n              <input type=\"text\" onChange={this.handleChange} placeholder={this.props.contaktiChat.translations.user_dashboard.cbnumber_chat} name=\"phone\" className=\"form-control callback-control\" value={this.state.phone} id=\"messagebox-callback-number\" required />\n            </div>\n            <div style={{clear: \"both\"}}></div>\n          </div>\n\n          <div className=\"col-12\">\n            <div className=\"small-label pb-2\">{this.props.contaktiChat.translations.user_dashboard.time_chat}</div>\n            <div style={{clear: \"both\"}}></div>\n\n            <div style={{width: \"50%\", float: \"left\", boxSizing: \"border-box\",  paddingRight: \"20px\"}}>\n              <input type=\"date\" id=\"messagebox-date-field\" name=\"date\" value={this.state.date} onChange={this.handleChange} />\n            </div>\n\n            <div style={{width: \"50%\", float: \"left\", boxSizing: \"border-box\",  paddingRight: \"20px\"}}>\n              <input type=\"time\" id=\"messagebox-time-field\" name=\"time\" value={this.state.time} onChange={this.handleChange} />\n            </div>\n\n\n            <div style={{clear: \"both\"}}></div>\n          </div>\n          <div className=\"col-12 pb-2\">\n            <label>{this.props.contaktiChat.translations.user_dashboard.message_chat}</label>\n            <input type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} placeholder={this.props.contaktiChat.translations.user_dashboard.messageemail_chat} className=\"form-control callback-control\" id=\"messagebox-email\" required />\n            <br />\n            <textarea name=\"message\" value={this.state.message} onChange={this.handleChange} placeholder={this.props.contaktiChat.translations.user_dashboard.messagemsg_chat} className=\"form-control\" rows=\"8\" id=\"messagebox-message\"></textarea>\n\n          </div>\n        </div>\n          <div className=\"footer-sec\">\n            <div className=\"send-button-container pull-left\">\n              <button  type=\"submit\" id=\"messagebox-send\" className={`send ${this.state.phone.length > 0 && this.state.email.length > 0  ? \"\" : \"disabled\"}`} style={{backgroundColor: this.props.contaktiChat.color }} ><span className=\"fa fa-send\"></span></button>\n            </div>\n            <div className=\"pull-right\">\n              Powered by <a href=\"http://contakti.com\" target=\"_blank\" rel=\"noreferrer\" style={{position: \"relative\"}}>contakti.com</a>\n              <div className=\"send-button-container pull-left\">\n\n              </div>\n            </div>\n          </div>\n      </form>\n      )}\n      </div>\n\n    );\n  }\n}\n\nexport default CallBackBox;","import React, { Component } from 'react';\nimport { Button, Modal, } from 'react-bootstrap'\nimport CarouselWrapper from '../modules/utils/CarouselWrapper';\n\nclass ProductInfoModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: false,\n\n        }\n    }\n    handleClose = () => {\n        this.props.handleClose();\n    }\n    render() {\n        let { product } = this.props\n        return (\n            <>\n                <Modal show={this.props.show} onHide={this.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>{this.props.title}</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"d-flex justify-content-between px-2\">\n                            <span className=\"float-start\">{product.title}</span>\n                            <span className=\"float-end\">{product.currency} {product.price}</span>\n                        </div>\n                        <hr />\n                        {product.images && product.images.length > 0 &&\n                            <div>\n                                <CarouselWrapper \n                                images={product.images}\n                                origin={this.props.origin}\n                                 />    \n                                <hr />\n                            </div>\n                        }\n\n                        <div  className=\"overflow-auto mt-1 px-2\" >\n                            <div>{product.description}</div>\n                            {product.attachments && product.attachments.length > 0 && <div>\n                                {product.attachments.map((f, index) => {\n                                    return (\n                                        <span className=\"mx-1\">\n                                            <a className=\"text-decoration-none\" href={`${this.props.origin}${f.file.url}`} download >{f.file_name}</a>\n                                        </span>\n                                    )\n                                })}\n                            </div>\n                            }\n\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" style={{ background: this.props.buttonColor }}  size=\"sm\" onClick={this.handleClose}>\n                            {this.props.btnText}\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default ProductInfoModal;\n","import React, { Component } from 'react';\nimport ContaktiChat from '../../classes/ContaktiChat';\nimport Dropdown from './Dropdown';\nimport ChatBox from '../chat_box/ChatBox';\nimport CallBackBox from '../others/CallBackBox';\nimport ChatUtils from '../../classes/ChatUtils';\nimport ReactResizeDetector from 'react-resize-detector/build/withPolyfill';\nimport Cart from '../shopping_cart/Cart';\nimport ProductInfoModal from '../shopping_cart/ProductInfoModal';\n\nclass ChatPlugin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      style: {},\n      contaktiChat: {},\n      translations: {},\n      loading: true,\n      showDropDown: false,\n      showNoAgentScreen: false,\n      showPlugin: false,\n      showMinimize: false,\n      chatStarted: false,\n      chatInitialized: false,\n      showCartIcon: false,\n      showCart: false,\n      cartEmpty: true,\n      showProductModal: false,\n      selectedProduct: {},\n      disableChatboxContent: false\n    }\n  }\n  handleProductModalClose = () => {\n    this.setState({ showProductModal: false })\n  };\n  handleProductModalShow = (p) => {\n    this.setState({ showProductModal: true, selectedProduct: p });\n  }\n\n  async componentDidMount() {\n    let contakti_chat = new ContaktiChat();\n    let chatUtils = ChatUtils\n    let urlParams = chatUtils.getUrlParams(window.location.href)\n    let serviceChannelId = urlParams.id;\n    contakti_chat.setServiceChannel(serviceChannelId);\n    await contakti_chat.setSettings();\n    await contakti_chat.setTranslations();\n\n    this.setState({\n      contaktiChat: contakti_chat,\n      loading: false,\n      style: {\n        color: contakti_chat.text_color,\n        backgroundColor: contakti_chat.color\n      }\n    });\n  }\n\n  toggleDropDown = (flag) => {\n    this.setState({ showDropDown: flag });\n  }\n  setChatStarted = () => {\n    if (!this.state.chatStarted) {\n      this.setState({ chatStarted: true });\n    }\n  }\n  showNoAgentOnlineScreen = (e) => {\n    this.setState({ showNoAgentScreen: true });\n    if (e) e.preventDefault();\n  }\n  showChatPlugin = async () => {\n    if (!this.state.chatInitialized) {\n      this.setState({ chatInitialized: true });\n    }\n    if (!this.state.showPlugin) {\n      let cont_chat = this.state.contaktiChat\n      await cont_chat.setSettings();\n      this.setState({ showPlugin: true, showMinimize: true, contaktiChat: cont_chat });\n\n      if (this.state.chatStarted) {\n        this.setState({ showDropDown: true });\n      }\n      if (!this.state.cartEmpty) {\n        this.setState({ showCartIcon: true });\n      }\n\n    }\n\n  }\n  hideChatPlugin = (e) => {\n    e.stopPropagation();\n    if (this.state.showPlugin) {\n      this.setState({ showPlugin: false, showMinimize: false, showDropDown: false, showCart: false, showCartIcon: false });\n    }\n  }\n  destroyChat = () => {\n    this.setState({ chatInitialized: false, showPlugin: false, showMinimize: false, showDropDown: false, showCartIcon: false, cartEmpty: true });\n  }\n  onResize = (width, height) => {\n    // if (width < 350){\n    //   // width = 350;\n    // }\n    // if ( height < 535)\n    // {\n    //   // height = 535;\n    // }\n    window.parent.postMessage({ type: 'set_dimensions', width, height }, \"*\");\n  }\n  toggleCart = () => {\n    this.setState({ showCart: !this.state.showCart });\n  }\n  addToCart = (product) => {\n    this.setState({ showCartIcon: true, cartEmpty: false }, () => this.cart.addProduct(product));\n  }\n  hideCartIcon = () => {\n    this.setState({ showCartIcon: false, showCart: false, cartEmpty: true });\n  }\n\n  setPluginDisabledState = (disabled = false) => {\n    this.setState({ disableChatboxContent: disabled });\n  }\n\n  createCartTicket = async (products, checkout_method, shipment_method, sum) => {\n    this.setPluginDisabledState(true);\n    const taskId = await this.chatBox.createTicket(true, products, sum, this.state.contaktiChat.translations.user_dashboard.shopping_cart.order_products);\n    await this.chatBox.createOrder(taskId, products, checkout_method, shipment_method, sum);\n    this.chatBox.setOrderCreated();\n    this.setState({ showCart: false, showCartIcon: false});\n    this.setPluginDisabledState(false);\n  }\n\n\n  render() {\n    const { contaktiChat, loading } = this.state;\n    let parent_width_class = '';\n\n    if (window.parent) {\n      if (window.outerWidth <= 600) {\n        parent_width_class += ' max-600-width '\n      }\n    }\n\n    if (loading) {\n      return null;\n    }\n\n    return (\n      <div id=\"contakti-chat-main\" className={parent_width_class}>\n        <ReactResizeDetector handleWidth handleHeight onResize={this.onResize} >\n          <div id=\"contakti-msg-box\"\n            className={`\n                 chat-plugin-parent\n                 ${this.state.showMinimize === true ? \"open\" : \"\"}\n              `}\n          >\n            <ProductInfoModal\n              title={contaktiChat.translations.user_dashboard.shopping_cart.product_details}\n              btnText={contaktiChat.translations.user_dashboard.shopping_cart.close}\n              buttonColor={contaktiChat.color}\n              product={this.state.selectedProduct}\n              handleShow={this.handleProductModalShow}\n              handleClose={this.handleProductModalClose}\n              show={this.state.showProductModal}\n              origin={contaktiChat.origin}\n            />\n            <div className={\"cart-parent\" + (this.state.disableChatboxContent ? ' disabled-content' : '')} style={{ display: this.state.showCart ? \"block\" : \"none\" }}>\n              {(!this.state.cartEmpty) && contaktiChat.chat_settings.enable_cart ? (\n                <Cart ref={instance => { this.cart = instance; }}\n                    handleShow={this.handleProductModalShow}\n                    contaktiChat={contaktiChat}\n                    onCartEmpty={this.hideCartIcon}\n                    toggleCart={this.toggleCart}\n                    handleOrder={this.createCartTicket}/>\n              ) : \"\"}\n            </div>\n\n            <div className={\"chat-parent flex-column d-flex\" + (this.state.disableChatboxContent ? ' disabled-content' : '')}>\n              <div id=\"contakti-msg-head\" onClick={this.showChatPlugin} className=\"msg_head\" style={this.state.style}>\n                <div>\n                  <div id=\"contakti-logo-container\">\n                    <img alt=\"logo\" src={`${contaktiChat.origin}/${contaktiChat.chat_settings.file.url}`} />\n                  </div>\n                </div>\n\n                <span id=\"contakti-user-name\" style={{ color: contaktiChat.text_color }}>{contaktiChat.chat_settings.chat_title}</span>\n\n                <span id=\"cart_show_button\" onClick={this.toggleCart} style={{ display: this.state.showCartIcon ? \"block\" : \"none\", margin: '5px 5px 0 0', color: contaktiChat.text_color }}>\n                  <i className=\"fa fa-shopping-cart mt-1\"></i>\n                </span>\n                <span>\n                  {this.state.showDropDown ? (<Dropdown styleObj={this.state.style} translations={contaktiChat.translations} showDropdown={this.state.showDropDown} quit={() => { this.chatBox.quitChat(); this.destroyChat() }} sendChatHistory={() => this.chatBox.showSendChatHistory()} downloadChatHistory={() => { this.chatBox.downloadChat(); }} startChat={() => this.showChatPlugin()} />) : \"\"}\n                </span>\n\n                <div id=\"contakti-msg-minimize\" >\n                  {this.state.showMinimize ? (\n                    <span className=\"fa-stack\" onClick={this.hideChatPlugin} style={{ color: contaktiChat.text_color }}><i className=\"fa fa-stack-2x fa-angle-down\" style={{ top: '3px', left: '0px' }}></i></span>\n                  ) : \"\"}\n                </div>\n              </div>\n              {this.state.chatInitialized ? (\n                <div  style={{ display: this.state.showPlugin ? \"block\" : \"none\" }}>\n                  {this.state.showNoAgentScreen ? (<CallBackBox contaktiChat={contaktiChat} showNoAgentOnlineScreen={this.showNoAgentOnlineScreen} ></CallBackBox>) : (\n                    <ChatBox ref={instance => { this.chatBox = instance; }}\n                      contaktiChat={contaktiChat}\n                      handleProductShow={this.handleProductModalShow}\n                      toggleDropDown={this.toggleDropDown}\n                      showNoAgentOnlineScreen={this.showNoAgentOnlineScreen}\n                      quit={() => { this.destroyChat() }}\n                      setChatStarted={this.setChatStarted}\n                      startChat={() => this.showChatPlugin()}\n                      addToCart={(product) => { this.addToCart(product) }}\n                      setPluginDisabledState={this.setPluginDisabledState}\n                    ></ChatBox>)}\n                </div>\n              ) : \"\"}\n            </div>\n          </div>\n        </ReactResizeDetector>\n      </div>\n    );\n  }\n}\n\nexport default ChatPlugin;\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.scss';\nimport './components/chat_plugin/ChatPlugin'\nimport ChatPlugin from './components/chat_plugin/ChatPlugin';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <ChatPlugin />\n    );\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './style.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}