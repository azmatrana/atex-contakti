{"version":3,"sources":["classes/Api.js","classes/ContaktiChat.js","components/chat_plugin/Dropdown.jsx","classes/MessageFactory.js","classes/ChatUtils.js","components/modules/utils/Text.jsx","components/chat_box/Message.jsx","components/others/SendChatHistory.jsx","components/chat_box/ChatBox.jsx","components/others/CallBackBox.jsx","components/shopping_cart/Product.jsx","components/shopping_cart/Cart.jsx","components/chat_plugin/ChatPlugin.jsx","App.js","reportWebVitals.js","index.js"],"names":["Api","document","location","origin","includes","this","serverUrl","baseUrl","prototype","get","a","route","fetch","res","json","data","post","method","cache","headers","body","JSON","stringify","response","postFile","file_data","ContaktiChat","locale","serviceChannel","chat_settings","url_obj","serverProtocol","api","channel","settings","chat_inquiry_fields","chat_initial_buttons","chatBotEnabled","enable_chatbot","chatWithHuman","initialMsg","initial_msg","color","text_color","translations","chat_available","Dropdown","props","toggle_dropdown","e","setState","expanded","state","mouseover","target","style","styleObj","backgroundColor","mouseout","end","quit","showEndChat","sendchatHistory","sendChatHistory","showSendEmail","showStart","startChat","downloadChat","downloadChatHistory","className","id","onClick","hidden","onMouseOver","onMouseOut","display","Component","ChatMessage","asJSON","ChatMessageFactory","options","from","username","type","initialise","newMessage","message","chatBot","msg","channel_id","chatbot","quitMessage","botToHumanSwitchMessage","fileMessage","file_url","file_path","ChatUtils","replaceURLs","replace","url","hyperlink","match","getUrlParams","params","split","forEach","pair","map","decodeURIComponent","length","Text","parse","text","Message","userName","fromTime","envelope","fromColor","contaktiChat","bgClass","download","href","replaceAll","user_dashboard","upload_chat","files","file","name","products","product","title","addToCart","action_buttons","btn_text","sendCustomActionMessage","moment","timestamp","local","format","userInfo","info","SendChatHistory","handleChange","event","key","value","sendEmail","email","chat_history","quitChat","cancel","transcript","bgColor","send_chat_history_title","onChange","placeholder","messageemail_chat","messagemsg_chat","rows","margin","messagesend_chat","messagesend_cancel","position","ChatBox","onStartClientResponse","console","log","agentPresent","setSendDisabled","callback","onMessageReceived","connect","chatChannel","fayeServer","server","window","Danthes","sign","setTimeout","displayNoAgentOnlineScreen","timeOut","connectTimeout","scrollDown","showNoAgentOnline","successCallback","contakti_chat","indicators","getElementById","messageCame","localStorage","getItem","setItem","innerHTML","typing_text","removeItem","agentsCount","quit_chat","join_chat","welcome_message","agentName","clearTimeout","ask_human_to_help","innerText","changeFromBotToHumanChat","msgs","messages","push","chat_transcript","getChatTranscript","has_custom_action","custom_action_text","showCustomActionButtion","customActionButtionText","client_data","field","label","_","camelCase","phone","chat_display_fields","sendMessage","msg_text","messageFactory","_channelUrl","messagesListContainer","scrollIntoView","behavior","block","inline","sendQuitNotify","quitSent","encodeURIComponent","_channelIndicatorUrl","onKeyIndicator","onKeyPress","keyCode","onSendClicked","preventDefault","showDetailInput","showChat","toggleDropDown","bot_alias","enable_initial_buttons","btn","setChatStarted","disableChatSendDisabled","updateUserDetail","uploadFile","fileInput","click","handleFileChange","formdata","FormData","append","showSendChatHistory","showSendChatHistoryFlag","fileDownload","createTicket","task_data","messageContainer","started","messagEnvelopes","disableMessageInput","Object","keys","chat","onbeforeunload","msgFactory","bottom","getElementsByClassName","classList","remove","onclick","_onSendClicked","bind","minimized","inquiryData","index","onSubmit","input_type","required","marginLeft","marginBottom","marginTop","textAlign","ref","el","chat_not_available","showNoAgentOnlineScreen","chat_leave_a_message_link","disabled","type_message","charCode","visibility","attachment_chat","marginRight","instance","CallBackBox","createCallBack","number","date","time","datetime","Date","thanks_chat","callBackSent","fontSize","paddingTop","sentmessage_chat","padding","callback_chat","width","float","boxSizing","cbnumber_chat","clear","time_chat","paddingRight","message_chat","Product","onProductRemove","p","increaseQuantity","decreaseQuantity","quantity","replaceProduct","readonly","currency","price","colSpan","total","Cart","reject","onCartEmpty","countSum","addProduct","find","sum","each","findIndex","splice","maxHeight","overflow","ChatPlugin","flag","showDropDown","chatStarted","showNoAgentScreen","showChatPlugin","chatInitialized","cont_chat","setSettings","showPlugin","showMinimize","cartEmpty","showCartIcon","hideChatPlugin","stopPropagation","showCart","destroyChat","onResize","height","parent","postMessage","toggleCart","cart","hideCartIcon","loading","urlParams","serviceChannelId","setServiceChannel","setTranslations","checkIfChatIsAvailable","handleWidth","handleHeight","right","enable_cart","src","chat_title","showDropdown","chatBox","top","left","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6b7525ee.chunk.js","sourcesContent":["const Api = function (options= {}) {\n    \n    // this.serverUrl = process.env.HOST_NAME\n    // this.serverProtocol = process.env.PROTOCOL\n    // this.origin = options.host || 'http://localhost:3000'\n\n    if (document.location.origin.includes(\":300\"))\n    {\n        this.origin = 'http://localhost:3000'\n    }\n    else{\n        this.origin = document.location.origin\n    }\n    \n    this.serverUrl = this.origin + '/api/v1'\n    this.baseUrl = this.serverUrl;\n}\n\nApi.prototype.origin = \"ASdas\"\n\nApi.prototype.get = async function (route = '') {\n    const res = await fetch(`${this.baseUrl}/${route}`)\n    const data = await res.json()\n    if (!data) {\n        return null\n    }\n    else {\n        return data\n    }\n}\nApi.prototype.post = async function (route = '', data = {}) {\n    const response = await fetch(`${this.baseUrl}/${route}`, {\n        method: 'POST',\n        cache: 'no-cache',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data) \n    });\n    return await response.json();\n}\n\nApi.prototype.postFile = async function (route = '', file_data = {}) {\n    const response = await fetch(`${this.baseUrl}/${route}`, {\n        method: 'POST',\n        cache: 'no-cache',\n        body: file_data \n    });\n    return await response.json();\n}\nexport default Api\n\n\n","import Api from \"./Api\";\n\nclass ContaktiChat {\n    constructor(options = {}) {\n        // this.serverProtocol = process.env.PROTOCOL\n        if (document.location.origin.includes(\":300\"))\n        {\n            this.origin = 'http://localhost:3000'\n        }\n        else{\n            this.origin = document.location.origin\n        }\n\n        this.serverUrl = this.origin + '/api/v1'\n        this.locale = 'en';\n        this.serviceChannel = null;\n        this.chat_settings = {};\n        this.url_obj = {\n            serverUrl: this.serverUrl,\n            serverProtocol: this.serverProtocol\n        };\n        this.api = new Api(this.url_obj);\n    }\n    setServiceChannel(channel){\n        this.serviceChannel = channel;\n    }\n\n    async setSettings() {\n        let res = await this.api.get(`chat/${this.serviceChannel}/get_chat_settings`);\n        this.chat_settings = res.settings;\n        this.chat_settings.chat_inquiry_fields = res.chat_inquiry_fields;\n        this.chat_settings.chat_initial_buttons = res.chat_initial_buttons;\n        this.chatBotEnabled = this.chat_settings.enable_chatbot;\n        this.chatWithHuman = !(this.chat_settings.enable_chatbot);\n        this.initialMsg = this.chat_settings.initial_msg;\n        this.color = this.chat_settings.color;\n        this.text_color = this.chat_settings.text_color;\n      \n    }\n    async setTranslations() {\n        this.translations = await this.api.get(`chat/get_translations`);\n    }\n    async checkIfChatIsAvailable() {\n        this.chat_available = await this.api.get(`chat/${this.serviceChannel}/is_chat_available`);\n    }\n}\n\nexport default ContaktiChat","import React, { Component } from 'react';\n\nclass Dropdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: false,\n      showSendEmail: true,\n      showStart: false,\n      showEndChat: true,\n    }\n  }\n\n\n  // document.onclick = (event){\n  // \tif(!event.target.classList.contains('dropdown-toggle') && !event.target.classList.contains('fa-cog')){\n  // \t\tif(document.querySelector('.dropdown')){\n  // \t\t\tdocument.querySelector('.dropdown').classList.remove(\"open\");\n  // \t\t}\n  // \t}\n  // }\n\n  toggle_dropdown = (e) => {\n    // ele.parentElement.classList.remove(\"close-force\");\n    // e.target.parentNode.classList.toggle(\"open\");\n    this.setState({ expanded: !this.state.expanded });\n  }\n   mouseover = (e) => {\n    e.target.style.color = this.props.styleObj.color;\n    e.target.style.backgroundColor = this.props.styleObj.backgroundColor;\n  }\n  mouseout = (e) => {\n    e.target.style.color = this.props.styleObj.backgroundColor;\n    e.target.style.backgroundColor = this.props.styleObj.color;\n  }\n\n  end = () => {\n    this.props.quit();\n    this.setState({showEndChat: false});\n  }\n\n  sendchatHistory = () =>{\n    this.toggle_dropdown();\n    this.props.sendChatHistory();\n    this.setState({showSendEmail: false, showStart: true});\n  }\n\n  startChat =  async() =>{\n    this.setState({showStart: false});\n    await this.props.quit();\n    await this.props.startChat();\n  }\n\n  downloadChat = () => {\n    this.props.downloadChatHistory();\n  }\n\n  \n  // mouseoverdownload(e) {\n  //   var x = document.getElementById(\"download_chat_history\");\n  //   x.style.color = document.getElementById('contakti-user-name').style.color;\n  //   x.style.backgroundColor = document.getElementById('contakti-msg-head').style.backgroundColor;\n  // }\n\n  // mouseoutdownload(e) {\n  //   var x = document.getElementById(\"download_chat_history\");\n  //   x.style.color = document.getElementById('contakti-msg-head').style.backgroundColor;\n  //   x.style.backgroundColor = document.getElementById('contakti-user-name').style.color;\n  // }\n\n  // mouseoversend(e) {\n  //   var y = document.getElementById(\"send_chat_history\");\n  //   y.style.color = document.getElementById('contakti-user-name').style.color;\n  //   y.style.backgroundColor = document.getElementById('contakti-msg-head').style.backgroundColor;\n  // }\n\n  // mouseoutsend(e) {\n  //   var y = document.getElementById(\"send_chat_history\");\n  //   y.style.color = document.getElementById('contakti-msg-head').style.backgroundColor;\n  //   y.style.backgroundColor = document.getElementById('contakti-user-name').style.color;\n  // }\n\n  // mouseovercancel(e) {\n  //   var z = document.getElementById(\"contakti-msg-close-chat\");\n  //   z.style.color = document.getElementById('contakti-user-name').style.color;\n  //   z.style.backgroundColor = document.getElementById('contakti-msg-head').style.backgroundColor;\n  // }\n\n  // mouseoutcancel(e) {\n  //   var z = document.getElementById(\"contakti-msg-close-chat\");\n  //   z.style.color = document.getElementById('contakti-msg-head').style.backgroundColor;\n  //   z.style.backgroundColor = document.getElementById('contakti-user-name').style.color;\n  // }\n\n  // mouseoverstart(e) {\n  //   var z = document.getElementById(\"contakti-msg-start-chat\");\n  //   z.style.color = document.getElementById('contakti-user-name').style.color;\n  //   z.style.backgroundColor = document.getElementById('contakti-msg-head').style.backgroundColor;\n  // }\n\n  // mouseoutstart(e) {\n  //   var z = document.getElementById(\"contakti-msg-start-chat\");\n  //   z.style.color = document.getElementById('contakti-msg-head').style.backgroundColor;\n  //   z.style.backgroundColor = document.getElementById('contakti-user-name').style.color;\n  // }\n \n\n\n\n\n  render() {\n    return (\n      <div className=\"dropdown chat-setting d--inline-block\" id=\"chat-setting-dropdown\" >\n        <button\n         style={{ color: this.props.styleObj.color }}\n          className=\"dropdown-toggle\"\n          onClick={this.toggle_dropdown}\n        >\n          <i className=\"fa fa-cog\"></i></button>\n\n        <ul className=\"chatsetting-dropdown-menu\" hidden={this.state.expanded ? false : true } id=\"chat-setting-dropdown-menu\">\n          <li>\n            <a id=\"download_chat_history\" style={{color: this.props.styleObj.backgroundColor, backgroundColor: this.props.styleObj.color }} onClick={this.downloadChat}  onMouseOver={this.mouseover} onMouseOut={this.mouseout}>\n              Download Text file\n            </a>\n          </li>\n          <li>\n            <a id=\"send_chat_history\" style={{ display:this.state.showSendEmail? \"block\": \"none\", color: this.props.styleObj.backgroundColor, backgroundColor: this.props.styleObj.color }} onClick={this.sendchatHistory} onMouseOver={this.mouseover} onMouseOut={this.mouseout}>\n              send to email\n            </a>\n          </li>\n          <li>\n            <a id=\"contakti-msg-close-chat\" onClick={this.end} style={{ display:this.state.showEndChat? \"block\": \"none\" , color: this.props.styleObj.backgroundColor, backgroundColor: this.props.styleObj.color }} onMouseOver={this.mouseover} onMouseOut={this.mouseout}>\n              End Chat\n            </a>\n            <a id=\"contakti-msg-start-chat\" style={{ display:this.state.showStart? \"block\": \"none\", color: this.props.styleObj.backgroundColor, backgroundColor: this.props.styleObj.color }} onClick={this.startChat} onMouseOver={this.mouseover} onMouseOut={this.mouseout}>\n              Start New Chat\n            </a>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Dropdown;","import ContaktiChat from \"./ContaktiChat\";\nconst ChatMessage = function() {\n    \n};\n\nChatMessage.prototype.asJSON = function() {\n    return JSON.stringify(this);\n};\nconst ChatMessageFactory = function(options) {\n    this.from = options.username;\n    this.channel = options.channel;\n    this.type = 'message';\n\n};\n\nChatMessageFactory.prototype.initialise = function() {              \n\n}\nChatMessageFactory.prototype.newMessage = function(message, type, chatBot = false, from) {\n    var msg = new ChatMessage();\n    msg.from = from || this.from;\n    msg.channel_id = this.channel;\n    msg.type = type || this.type;\n    msg.chatbot = chatBot;\n    msg.message = message;\n    return msg;\n};\n\nChatMessageFactory.prototype.quitMessage = function() {\n    var msg = new ChatMessage();\n    msg.from = this.from;\n    msg.channel_id = this.channel;\n    msg.type = 'quit';\n    msg.message = 'Quitting.';\n    return msg;\n};\n\nChatMessageFactory.prototype.botToHumanSwitchMessage = function() {\n    var msg = new ChatMessage();\n    msg.from = this.from;\n    msg.channel_id = this.channel;\n    msg.type = 'botToHuman';\n    msg.message = 'Requesting human..';\n    return msg;\n};\n\n\nChatMessageFactory.prototype.fileMessage = function(file_url, file_path) {\n    var msg = new ChatMessage();\n    msg.from = this.from;\n    msg.channel_id = this.channel;\n    msg.type = 'file';\n    msg.message = file_url;\n    msg.file_path = file_path;\n    return msg;\n};\n\n\nexport default ChatMessageFactory","class ChatUtils {\n  static replaceURLs = (message) => {\n    if (!message) return '';\n\n    var urlRegex = /(((https?:\\/\\/)|(www\\.))[^\\s]+)/g;\n    return message.replace(urlRegex, function (url) {\n      var hyperlink = url;\n      if (!hyperlink.match('^https?:\\/\\/')) {\n        hyperlink = 'http://' + hyperlink;\n      }\n      return '<a href=\"' + hyperlink + '\" target=\"_blank\" rel=\"noopener noreferrer\">' + url + '</a>'\n    });\n  }\n  static getUrlParams = (url) => {\n    var params = {};\n    (url + '?').split('?')[1].split('&').forEach(\n      function (pair) {\n        pair = (pair + '=').split('=').map(decodeURIComponent);\n        if (pair[0].length) {\n          params[pair[0]] = pair[1];\n        }\n      });\n\n    return params;\n  }\n};\n\nexport default ChatUtils","import parse from 'html-react-parser';\n\nconst Text = (props) => {\n    return parse(props.text)\n}\n \nexport default Text;","import React, { Component } from 'react';\nimport moment from 'moment';\nimport ChatUtils from '../../classes/ChatUtils';\nimport Text from '../modules/utils/Text';\nclass Message extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.userName,\n      fromTime: this.props.envelope.from == this.username ? 'time_b' : 'time_a',\n      fromColor: this.props.from == this.username ? 'from_b' : 'from_a',\n    }\n  }\n\n  componentDidMount() {\n  }\n\n\n\n  render() {\n    var { contaktiChat } = this.props;\n    return (\n      <div className={this.props.bgClass} >\n        {this.props.envelope.type == 'file' ? (\n          <a download target=\"_blank\" href={this.props.envelope.message.replaceAll(\"\\n\", '<br/>')}>{`${this.props.envelope.from} ${contaktiChat.translations.user_dashboard.upload_chat}`}</a>\n\n        ) : (\n          <Text text={ChatUtils.replaceURLs(this.props.envelope.message).replaceAll(\"\\n\", '<br/>')} />\n        )}\n        {\n          this.props.envelope.files ? (this.props.envelope.files.map((file) => {\n            return (\n              <div>\n                <a download target=\"_blank\" href={file.url}>{file.name}</a>\n              </div>)\n\n          })) : \"\"\n        }\n        {this.props.envelope.products ? (\n          <div id=\"chat-answer-products-wrapper\" className=\"mt-1\">\n            {this.props.envelope.products.map(product => {\n              return (<div className=\"answer_product\">\n                <div className=\"child1\"><strong>{product.title}</strong> </div>\n                <div className=\"child2\">\n                  <a href=\"#\" onClick={() => this.props.addToCart(product)} className=\"add-to-cart-btn\" data-product-id={product.id} style={{ color: contaktiChat.text_color, backgroundColor: contaktiChat.color }}>\n                    <i className=\"fa fa-shopping-cart\"></i>\n                  </a>\n                </div>\n              </div>)\n            })\n            }\n          </div>\n        ) : \"\"}\n\n        {this.props.envelope.action_buttons ? (\n          <div>\n            {this.props.envelope.action_buttons.map(btn_text => {\n              return (\n                <div>\n                  <br />\n                  <button className=\"action-button\" style={{ backgroundColor: contaktiChat.color, color: contaktiChat.text_color }} onClick={this.props.sendCustomActionMessage}><Text text={btn_text} /> </button>\n                  <br />\n                </div>\n              )\n\n            })\n            }\n          </div>\n\n        ) : \"\"}\n        {\n          this.props.envelope.type !== 'quit' && this.props.envelope.type !== 'initial' ? (\n            <div>\n              <br />\n              <div className={`msg_time${this.state.fromTime}`}> {moment(this.props.envelope.timestamp ? this.props.envelope.timestamp : \"\").local().format('D.M.YYYY HH.mm')}</div>\n              <div className={`msg_from${this.state.fromColor}`}>{this.props.envelope.from} </div>\n              {this.props.envelope.from === this.props.userName ? (\n                <div>\n                  {this.props.userInfo.map(info => {\n                    return (<div className={`msg_from${this.state.fromColor}`}>{info} </div>)\n                  })}\n                </div>\n              ) : \"\"}\n            </div>\n          ) : \"\"}\n      </div>);\n  }\n}\n\nexport default Message;\n","import React, { Component } from 'react';\nimport Text from '../modules/utils/Text';\nimport parse from 'html-react-parser'\nimport Api from '../../classes/Api';\nclass SendChatHistory extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            chat_history: \"\"\n        }\n    }\n    componentDidMount() {\n        this.setState({ chat_history: this.props.transcript });\n    }\n\n    handleChange = (event, key) => {\n        let state = this.state;\n        let inputName = event.target.name;\n        state[inputName] = event.target.value;\n        this.setState({ ...state });\n    }\n\n    sendEmail = () => {\n        let email = this.state.email;\n        let message = this.state.chat_history;\n        var url = 'chat/' + this.props.contaktiChat.serviceChannel + '/send_email_chat_history';\n        let data = { email: email, message: message };\n        let res = new Api().post(url, data);\n        this.props.quitChat();\n    }\n\n    cancel = async () => {\n       await this.props.quitChat();\n        this.props.startChat();\n    }\n\n    render() {\n        const translations = this.props.contaktiChat.translations.user_dashboard\n        const color = this.props.bgColor\n        return (\n            <div id=\"contakti-user-details\">\n                <label>{translations.send_chat_history_title}</label>\n                <input type=\"email\" name=\"email\" onChange={this.handleChange} value={this.state.email} placeholder={translations.messageemail_chat} className=\"form-control callback-control\" id=\"send-chat-history-email\" />\n                <br /><br />\n                <textarea placeholder={translations.messagemsg_chat} className=\"form-control sendchat--history\" rows=\"4\" id=\"send-chat-history-message\" name=\"chat_history\" onChange={this.handleChange} value={this.state.chat_history} ></textarea>\n                <br />\n                <input type=\"hidden\" id=\"chat-client-container\" name=\"chat-client-container\" />\n                <div className=\"send-button-container pull-left\">\n                    <button id=\"send-chat-history-send\" className=\"send\" style={{ backgroundColor: color, margin: \"5px\" }}    onClick={this.sendEmail}>{translations.messagesend_chat}  </button>\n                    <span></span>\n                    <button id=\"send-chat-history-cancel\" className=\"send\" style={{ backgroundColor: color, margin: \"5px\" }}  onClick={this.cancel} >{translations.messagesend_cancel}</button>\n                </div>\n                <div className=\"pull-right\">\n                    Powered by <a href=\"http://contakti.com\" target=\"_blank\" style={{ position: \"relative\" }}>contakti.com</a>\n                    <div className=\"send-button-container pull-left\">\n\n                    </div>\n                </div>\n            </div>);\n    }\n}\n\nexport default SendChatHistory;","import React, { Component } from 'react';\nimport ChatMessageFactory from '../../classes/MessageFactory';\nimport Message from './Message';\nimport Api from '../../classes/Api';\nimport Text from '../modules/utils/Text';\nimport moment from 'moment';\nimport SendChatHistory from '../others/SendChatHistory';\nimport _ from 'lodash';\nclass ChatBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chatChannel: null,\n      fayeServer: null,\n      messageContainer: document.getElementById('chat_area'),\n      username: '',\n      email: '',\n      phone: '',\n      messageFactory: new ChatMessageFactory({ username: this.username, channel: this.chatChannel, email: this.email, phone: this.phone }),\n      quitSent: false,\n      messageCame: false,\n      agentPresent: false,\n      agentsCount: 0,\n      connectTimeout: 0,\n      started: false,\n      messages: [],\n      messagEnvelopes: [],\n      contaktiChat: {},\n      showDetailInput: true,\n      showChat: false,\n      newMessage: \"\",\n      disableChatSendDisabled: false,\n      disableMessageInput: false,\n      showNoAgentOnline: false,\n      agentName: \"\",\n      showSendChatHistoryFlag: false,\n      chat_transcript: \"\",\n      showCustomActionButtion: false,\n      customActionButtionText: \"\"\n    }\n  }\n  componentDidMount() {\n    if (!this.props.contaktiChat || (this.props.contaktiChat && Object.keys(this.props.contaktiChat).length === 0)) {\n      return;\n    }\n    let chat = this.props.contaktiChat\n\n    this.setState({ messageContainer: document.getElementById('chat_area') });\n    this.setState({ contaktiChat: chat }, async () => {\n      if (this.state.contaktiChat.chat_settings.format !== \"inquiry\" || this.state.contaktiChat.chat_settings.chat_inquiry_fields.length == 0) {\n        await this.startChat();\n      }\n      window.onbeforeunload = this.quitChat;\n    });\n    this.setSendDisabled();\n  }\n\n  onStartClientResponse = (response) => {\n\n    console.log('onStartClientResponse.........');\n\n    if ((!this.state.agentPresent) && this.state.contaktiChat.chatWithHuman) {\n      this.setSendDisabled()\n    }\n\n    response.callback = this.onMessageReceived;\n    response.connect = true;\n\n    this.setState({ chatChannel: response.channel });\n    this.setState({ fayeServer: response.server });\n    window.Danthes.sign(response);\n    // Set client info in redis to use when client closes or reloads the chat.\n    setTimeout(() => {\n      const url = this.state.contaktiChat.serverUrl + `/chat/set_client_info?channel_id=${this.state.chatChannel}`\n      fetch(url, {\n        \"Content-Type\": \"application/json\"\n      });\n    }, 2000);\n\n  };\n\n\n\n  displayNoAgentOnlineScreen = (timeOut = 60000) => {\n    this.setState({\n      connectTimeout: setTimeout(() => {\n        this.scrollDown();\n        this.setState({ showNoAgentOnline: true });\n      }, timeOut)\n    });\n  };\n\n  successCallback = (data) => {\n    let contakti_chat = this.state.contaktiChat;\n    contakti_chat.chatWithHuman = true;\n    contakti_chat.chatBotEnabled = false;\n    this.setState({ contaktiChat: contakti_chat }, () => {\n      this.setSendDisabled();\n    });\n    this.displayNoAgentOnlineScreen();\n  }\n  onMessageReceived = (envelope) => {\n    if (envelope.type == 'indicator') {\n      return\n    }\n    //TODO indicators\n    var indicators = document.getElementById('contakti-msg-indicator');\n    this.setState({ messageCame: true });\n    if (envelope.type == 'agent_indicator') {\n      var indicators = document.getElementById('contakti-msg-indicator');\n      var has_cookies = localStorage.getItem('indicator_state')\n      if (!has_cookies) {\n        // setCookies\n        localStorage.setItem('indicator_state', 'true')\n        indicators.innerHTML = envelope.from + this.state.contaktiChat.translations.user_dashboard.typing_text + '<div id=\"wave\"> <span class=\"dot\"></span> <span class=\"dot\"></span> <span class=\"dot\"></span> </div>';\n        this.setState({\n          connectTimeout: setTimeout(function () {\n            var indicators = document.getElementById('contakti-msg-indicator');\n            indicators.innerHTML = '';\n            // remove cookie\n            localStorage.removeItem('indicator_state')\n          }, 5000)\n        });\n      }\n    }\n    else {\n      if (envelope.type == 'quit') {\n        this.setState({ agentsCount: this.state.agentsCount - 1 });\n        envelope.message = `${envelope.from} ${this.state.contaktiChat.translations.user_dashboard.quit_chat}`;\n        if (this.state.agentsCount < 1) {\n          // Disable send button. Do stuff!\n          this.setState({ agentPresent: false });\n          this.setSendDisabled();\n        }\n      }\n      else if (envelope.type == 'join') {\n        this.setState({ agentsCount: this.state.agentsCount + 1 });\n        if (this.state.agentPresent) {\n          envelope.message = `${envelope.from} ${this.state.contaktiChat.translations.user_dashboard.join_chat}`;\n        } else {\n          envelope.message = `${envelope.from} ${this.state.contaktiChat.chat_settings.welcome_message}`;\n        }\n        this.setState({ agentPresent: true, agentName: envelope.from });\n        clearTimeout(this.state.connectTimeout);\n        this.setSendDisabled();\n      }\n      else if (envelope.type == 'switch_to_human') {\n        envelope.message = `${this.state.contaktiChat.translations.user_dashboard.ask_human_to_help}`;\n        if (envelope.from != this.username) {\n          indicators.innerText = \"\";\n        }\n        this.changeFromBotToHumanChat(this.successCallback);\n      }\n      let msgs = this.state.messages\n      msgs.push(envelope);\n\n      this.setState({ messages: msgs }, () => {\n        this.setState({ chat_transcript: this.getChatTranscript() });\n      })\n      if (envelope.has_custom_action && envelope.custom_action_text) {\n        this.setState({ showCustomActionButtion: true, customActionButtionText: envelope.custom_action_text });\n      }\n      if (envelope.from != this.state.username) {\n        indicators.innerText = \"\";\n      }\n\n    }\n    this.scrollDown();\n  };\n\n\n\n\n  changeFromBotToHumanChat = async (successCallback) => {\n\n    let client_data = [];\n    if (this.state.contaktiChat.chat_settings.format === 'inquiry') {\n      client_data = this.state.contaktiChat.chat_settings.chat_inquiry_fields.map(field => {\n        return { label: field.title, value: this.state[_.camelCase(field.title)] }\n      })\n    }\n    else {\n      client_data = [\n        { label: \"Name\", value: this.state.username }\n      ]\n    }\n    let params = {\n      chatbot: false,\n      channel_id: this.state.chatChannel,\n      name: this.state.username,\n      email: this.state.email,\n      phone: this.state.phone,\n      chat_display_fields: client_data\n    }\n    // var options = \"chatbot=\" + false + \"&name=\" + this.state.username + \"&email=\" + this.state.email + \"&phone=\" + this.state.phone + \"&channel_id=\" + encodeURIComponent(this.state.chatChannel);\n    let route = `/chat/${this.state.contaktiChat.serviceChannel}/bot_initiate_human_chat`;\n    let res = await new Api().post(route, params);\n    successCallback(res);\n  }\n\n\n  setUsername(name) {\n    if (!name) {\n      name = 'Anonymous';\n    }\n    this.setState({ username: name });\n    let msgFactory = this.state.messageFactory\n    msgFactory.from = name;\n    this.setState({ messageFactory: msgFactory });\n  };\n\n  sendCustomActionMessage = (e) => {\n    this.sendMessage(e.target.innerText);\n  }\n\n  sendMessage = (msg_text = \"\") => {\n    if (msg_text.length === 0) {\n      msg_text = this.state.newMessage;\n    }\n    if (msg_text.length > 0) {\n      var msg = this.state.messageFactory.newMessage(msg_text, null, this.state.contaktiChat.chatBotEnabled);\n      let route = this._channelUrl();\n      let res = new Api().post(route, msg);\n      this.setState({ newMessage: \"\" })\n    }\n  };\n\n\n\n  _channelUrl = () => {\n    return this.state.chatChannel + '/send_msg';\n  };\n\n  scrollDown = () => {\n    this.messagesListContainer.scrollIntoView({ behavior: \"smooth\", block: \"end\", inline: \"nearest\" });\n  };\n\n  sendQuitNotify = () => {\n    if (this.state.quitSent) return;\n    this.setState({ quitSent: true });\n    var msg = this.state.messageFactory.quitMessage();\n    let route = this._channelUrl();\n    let res = new Api().post(route, msg);\n    var ret = true ? null : ':D'; // Some browsers need fooling to evaluate onbeforeunload\n    return ret;\n  };\n\n  quitChat = async () => {\n    if (this.state.agentPresent) {\n      this.sendQuitNotify();\n    } else {\n      if (this.state.chatChannel) {\n        let route = `/chat/${this.state.contaktiChat.serviceChannel}/abort_chat?channel_id=${encodeURIComponent(this.state.chatChannel)}`;\n        let res = await new Api().get(route);\n      }\n    }\n  };\n  _channelIndicatorUrl = () => {\n\n    return this.state.chatChannel + \"/send_indicator\";\n  };\n\n  onKeyIndicator = () => {\n    var msg = this.state.messageFactory.newMessage(\"Customer typing\");\n    let route = this._channelIndicatorUrl();\n    let res = new Api().post(route, msg);\n  };\n\n  onKeyPress = (event) => {\n    var keyCode = event.keyCode;\n    if (keyCode != 13) {\n      this.onKeyIndicator();\n    }\n\n  };\n\n  onSendClicked = (event) => {\n    this.setSendDisabled();\n    this.sendMessage();\n  };\n\n  startChat = async (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    let name = \"Anonymous\";\n    if (this.state.contaktiChat.chat_settings.format === 'inquiry') {\n      name = this.state[_.camelCase(this.state.contaktiChat.chat_settings.chat_inquiry_fields[0]?.title)]\n    }\n    this.setState({\n      showDetailInput: false,\n      showChat: true,\n      username: this.state.username.length > 0 ? this.state.username : name,\n      messageFactory: new ChatMessageFactory({\n        username: this.state.username.length > 0 ? this.state.username : name,\n        channel: this.state.chatChannel,\n        email: this.state.email,\n        phone: this.state.phone\n      })\n    });\n    this.props.toggleDropDown(true);\n    if (this.state.contaktiChat.chatWithHuman) {\n      this.displayNoAgentOnlineScreen();\n    }\n    let client_data = [];\n    if (this.state.contaktiChat.chat_settings.format === 'inquiry') {\n      client_data = this.state.contaktiChat.chat_settings.chat_inquiry_fields.map(field => {\n        return { label: field.title, value: this.state[_.camelCase(field.title)] }\n      })\n    }\n    else {\n      client_data = [\n        { label: \"Name\", value: name }\n      ]\n    }\n    let params = {\n      chatbot: this.state.contaktiChat.chatBotEnabled,\n      name: name,\n      email: this.state.email,\n      phone: this.state.phone,\n      chat_display_fields: client_data\n    }\n\n    let route = `chat/${this.state.contaktiChat.serviceChannel}/initiate_chat`;\n    let res = await new Api().post(route, params);\n    var msg = this.state.messageFactory.newMessage(this.state.contaktiChat.initialMsg, \"initial\",this.state.contaktiChat.chatBotEnabled, this.state.contaktiChat.chat_settings.bot_alias  );\n    if (this.state.contaktiChat.chatBotEnabled && this.state.contaktiChat.chat_settings.enable_initial_buttons){\n      msg.action_buttons = this.state.contaktiChat.chat_settings.chat_initial_buttons.map( btn => btn.title);\n    }\n    let msgs = this.state.messages\n    msgs.push(msg);\n    this.setState({ messages: msgs });\n    this.props.setChatStarted();\n    this.onStartClientResponse(res);\n  };\n\n  setSendDisabled = (event) => {\n    if (!this.state.agentPresent && this.state.contaktiChat?.chatWithHuman) {\n      this.setState({ disableChatSendDisabled: true })\n      if (!this.state.agentPresent && this.state.contaktiChat?.chatWithHuman) {\n        this.setState({ disableChatSendDisabled: true })\n\n      }\n    } else {\n      this.setState({ disableChatSendDisabled: false })\n    }\n  };\n\n  maximize() {\n    document.getElementById('contakti-msg-box').style.bottom = '0px';\n    var chatSettingDrowpdown = document.getElementById('chat-setting-dropdown')\n    if (chatSettingDrowpdown && document.getElementsByClassName('show-dropdown').length > 0) {\n      document.getElementById('chat-setting-dropdown').style.display = \"block\";\n    }\n    document.getElementById('contakti-msg-minimize').classList.remove('hide');\n    var sendButton = document.getElementById('contakti-chat-send-btn');\n    sendButton.onclick = this._onSendClicked.bind(this);\n    this.setState({ messageContainer: document.getElementById('contakti-msg-body') });\n    this.setState({ minimized: false });\n  };\n\n  updateUserDetail = () => {\n  }\n\n  handleChange = (event, key) => {\n    let state = this.state;\n    let inputName = event.target.name;\n    state[inputName] = event.target.value;\n    this.setState({ ...state });\n  }\n  uploadFile = () => {\n    this.fileInput.click();\n  }\n  handleFileChange = async (e) => {\n    // const fileData = e.target.files[0];\n\n    let file = e.target.files[0];\n\n\n    var formdata = new FormData();\n    formdata.append(\"upload\", file, file.name);\n\n    let response = await new Api().postFile('chat/uploadfile', formdata);\n    var msg = this.state.messageFactory.fileMessage(response.file_url, response.file_path);\n    let route = this._channelUrl();\n    let res = new Api().post(route, msg);\n\n  }\n\n  showSendChatHistory = () => {\n    this.setState({ showSendChatHistoryFlag: true });\n  }\n  getChatTranscript = () => {\n    let transcript = \"\";\n    this.state.messages.forEach(message => {\n      transcript += message.message;\n      transcript += '\\n'\n      if (message.files) {\n        message.files.forEach(file => {\n          transcript += file.url;\n          transcript += '\\n'\n        })\n      }\n      if (message.action_buttons) {\n        message.action_buttons.forEach(btn_text => {\n          transcript += btn_text;\n          transcript += '\\n';\n        })\n      }\n      if (message.type !== 'quit') {\n        transcript += moment(message.timestamp ? message.timestamp : \"\").local().format('D.M.YYYY HH.mm')\n        transcript += '\\n';\n        transcript += message.from;\n        transcript += '\\n';\n      }\n      transcript += '\\n';\n    })\n    return transcript;\n  }\n\n  downloadChat = () => {\n    this.fileDownload.click();\n  }\n\n  createTicket = async () => {\n    const task_data = {};\n    task_data['channel_id'] = this.state.chatChannel\n    task_data['media_channel_id'] = this.state.contaktiChat.serviceChannel;\n    task_data['messages_attributes'] = [];\n    task_data['messages_attributes'][0] = {};\n    task_data['messages_attributes'][0]['title'] = \"\";\n    task_data['messages_attributes'][0][\"channel_type\"] = 'chat';\n    if (this.state.customActionButtionText.length > 0) {\n      task_data['messages_attributes'][0]['title'] = this.state.customActionButtionText;\n    }\n    task_data['messages_attributes'][0]['to'] = 'Internal';\n    task_data['messages_attributes'][0]['from'] = this.state.username;\n    if (this.state.email.length > 0) task_data['messages_attributes'][0]['from'] = this.state.email;\n    let transcript = \"\";\n    if (this.state.contaktiChat.chat_settings.format === 'inquiry') {\n      this.state.contaktiChat.chat_settings.chat_inquiry_fields.forEach(field => {\n        transcript += `${field.title} : ${this.state[_.camelCase(field.title)]}\\n`;\n      })\n    }\n    else {\n      transcript += `Name : ${this.state.username}\\n`;\n    }\n    transcript += `\\n`;\n    transcript += this.getChatTranscript();\n    task_data['messages_attributes'][0]['description'] = transcript;\n    task_data['type'] = 'chat';\n    const url = 'tasks/create_task_from_chat'\n    let res = await new Api().post(url, task_data);\n    this.setState({ showCustomActionButtion: false, customActionButtionText: \"\" });\n    this.quitChat();\n    this.props.quit();\n  }\n\n  render() {\n    if (!this.state.contaktiChat) {\n      return null;\n    }\n    const { contaktiChat, disableChatSendDisabled } = this.state;\n    const { messages } = this.state;\n\n    let inquiryData = [];\n    if (contaktiChat.chat_settings?.format === 'inquiry') {\n      contaktiChat.chat_settings.chat_inquiry_fields.forEach((field, index) => {\n        if (index > 0) {\n          inquiryData.push(this.state[_.camelCase(field.title)]);\n        }\n      })\n    }\n\n\n\n    return (\n\n      <div id=\"contakti-msg-container\" className=\"msg_wrap\">\n        <div id=\"contakti-chat-agent-details\" className=\"msg_agent\" style={{ display: this.state.agentName === \"\" ? \"none\" : \"block\", color: this.props.contaktiChat.text_color, backgroundColor: this.props.contaktiChat.color }}>\n          <div className=\"msg_agent_name\" id=\"contakti-chat-agent-name\">{this.state.agentName}</div>\n        </div>\n        {this.state.showSendChatHistoryFlag ? (<SendChatHistory contaktiChat={contaktiChat} bgColor={contaktiChat.color} transcript={this.state.chat_transcript} quitChat={() => { this.props.quit(); this.quitChat(); }} startChat={() => this.props.startChat()} />) : (\n\n          <div>\n            <div id=\"contakti-msg-body\"  className={contaktiChat?.chat_settings?.format === \"inquiry\" && !this.state.showChat ? \"msg_bodyclient_inquiry h-100\" : \"msg_bodyclient\" }>\n              {contaktiChat?.chat_settings?.format === \"inquiry\" && contaktiChat?.chat_settings.chat_inquiry_fields.length > 0 ? (\n\n                <div id=\"contakti-user-details\" style={{ display: this.state.showDetailInput ? 'block' : 'none' }} >\n                  <form onSubmit={async (event) => { await this.startChat(event); }}>\n                    {contaktiChat?.chat_settings.chat_inquiry_fields.map((field, index) => {\n                      return (<div><label>{field.title}</label>\n                        <input type={field.input_type} required className=\"form-control-start\" value={this.state[_.camelCase(field.title)] || \"\"} name={_.camelCase(field.title)} onChange={this.handleChange} id=\"contakti-input-name\" />\n                      </div>\n                      )\n                    })}\n                    <div style={{ marginLeft: \"95px\", marginBottom: \"10px\", marginTop: \"10px\" }}>\n                      <input type=\"submit\" id=\"contakti-input-details-submit\" className=\"btn btn-default btn-block\" value=\"Start Chat\" style={{ backgroundColor: this.props.contaktiChat.color, color: this.props.contaktiChat.text_color }} />\n                    </div>\n                  </form>\n                  <div style={{ textAlign: 'center' }}>\n                    Powered by <a href=\"http://contakti.com\" target=\"_blank\" >contakti.com</a>\n                  </div>\n                </div>\n              ) : \"\"}\n              <div  style={{ display: this.state.showChat ? 'block' : 'none' }} id=\"chat_area\" ref={(el) => { this.messagesListContainer = el; }}>\n                {\n                  this.state.showNoAgentOnline ? (\n                    <div className=\"msg_n\">{contaktiChat.translations.user_dashboard.chat_not_available}<a href=\"#\" onClick={this.props.showNoAgentOnlineScreen} id=\"contakti_chat_not_available_link\"> {contaktiChat.translations.user_dashboard.chat_leave_a_message_link}</a></div>\n                  ) : (\n\n                    <div>\n                      {\n                        messages.map((message, index) => {\n                          return (\n                            <Message key={index}\n                              envelope={message}\n                              bgClass={message.from === this.state.username ? 'msg_b' : 'msg_a'}\n                              userName={this.state.username}\n                              contaktiChat={contaktiChat}\n                              sendCustomActionMessage={this.sendCustomActionMessage}\n                              addToCart={(product) => { this.props.addToCart(product) }}\n                              contaktiChat={contaktiChat}\n                              userName={this.state.username}\n                              userInfo={inquiryData}\n                            />\n                          );\n\n                        })\n                      }\n                    </div>\n\n                  )}\n              </div>\n            </div>\n            <div id=\"contakti-msg-indicator\" className=\"msg_indictor\"> </div>\n            <div id=\"contakti-msg-footer\" className=\"msg_footer\" style={{ display: this.state.showChat ? 'block' : 'none' }}>\n              <div className=\"block-row\">\n                <div className=\"input-block\">\n                  <textarea\n                    id=\"contakti-chat-text-input\"\n                    value={this.state.newMessage}\n                    disabled={disableChatSendDisabled}\n                    name='newMessage'\n                    onChange={this.handleChange}\n                    className=\"msg_input form-control\"\n                    placeholder={contaktiChat?.translations?.user_dashboard.type_message}\n                    onKeyPress={(event) => {\n                      if (event.charCode === 13) {\n                        event.preventDefault();\n                        this.onSendClicked();\n                      }\n                      else {\n                        this.onKeyPress(event);\n                      }\n                    }}\n                    disabled={this.state.disableChatSendDisabled ? true : false}\n                    rows=\"3\" />\n                </div>\n                <div className=\"button-block\">\n                  <a\n                    id=\"contakti-chat-send-btn\"\n                    onClick={this.onSendClicked}\n                    disabled={disableChatSendDisabled}\n                    style={{ backgroundColor: this.props.contaktiChat.color, color: this.props.contaktiChat.text_color }}>\n                    <span className=\"fa fa-send\"></span>\n                  </a>\n                </div>\n              </div>\n              <div className=\"block-row mb-1\">\n                <div className=\"pull-left\">\n                  <button id=\"custom_action_button\" onClick={this.createTicket} style={{ visibility: this.state.showCustomActionButtion ? 'visible' : 'hidden' }}> {this.state.customActionButtionText}</button>\n                </div>\n              </div>\n              <div className=\"block-row mb-10\">\n                <div className=\"pull-left\">\n                  <a onClick={this.uploadFile} id=\"contakti-open-file\">{contaktiChat.translations?.user_dashboard.attachment_chat}</a>\n                </div>\n                <div className=\"pull-right\">\n                  Powered by <a href=\"http://contakti.com\" target=\"_blank\" style={{ marginRight: '10px' }}>contakti.com</a>\n                </div>\n              </div>\n              <form id=\"contakti-file-upload-form\" style={{ display: 'none' }}>\n                <input type=\"file\" id=\"contakti-file-upload-input\" ref={instance => { this.fileInput = instance; }} name=\"upload\" onChange={this.handleFileChange} />\n              </form>\n            </div>\n          </div>\n        )}\n        <a ref={instance => { this.fileDownload = instance; }} style={{ display: \"none\" }} href={`data:text/plain;charset=utf-8,${encodeURIComponent(this.state.chat_transcript)}`} download=\"chat_history.txt\"></a>\n      </div>\n    );\n  }\n}\n\nexport default ChatBox;\n","import React, { Component } from 'react';\nimport Api from '../../classes/Api';\nimport Text from '../modules/utils/Text';\nclass CallBackBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      phone: \"\",\n      date: \"\",\n      time: \"\",\n      email: \"\",\n      message: \"\",\n      callBackSent: false\n\n    }\n  }\n\n  createCallBack = () => {\n    let number = this.state.phone\n    let date = this.state.date\n    let time = this.state.time\n    let datetime = '';\n    if (date.length > 0) {\n      datetime = new Date(`${date}`);\n      if (time.length > 0) {\n        datetime = new Date(`${date}T${time}`);\n      }\n    }\n    let email = this.state.email\n    let message = this.state.message\n    let url = '/chat/' + this.props.contaktiChat.serviceChannel + '/create_callback'\n    let res = new Api().post(url, { number: number, datetime: datetime, email: email, message: message });\n    document.getElementById('contakti-user-name').innerHTML = this.props.contaktiChat.translations.user_dashboard.thanks_chat;\n    this.setState({callBackSent: true})\n  }\n\n\n  handleChange = (event, key) => {\n    let state = this.state;\n    let inputName = event.target.name;\n    state[inputName] = event.target.value;\n    this.setState({ ...state });\n  }\n  render() {\n    return (\n      <div>\n      { this.state.callBackSent? (<div style={{textAlign: \"center\", fontSize: \"110%\", paddingTop: \"3em\"}}> <Text text={this.props.contaktiChat.translations.user_dashboard.sentmessage_chat} /> </div>) : (\n      <div id=\"contakti-user-details\" style={{padding: \"10px\"}}>\n        <label>{this.props.contaktiChat.translations.user_dashboard.callback_chat}</label>\n\n        <div>\n          <div style={{width: \"100%\", float: \"left\", boxSizing: \"border-box\" }}>\n            <div className=\"small-label\">{this.props.contaktiChat.translations.user_dashboard.cbnumber_chat}</div>\n            <input type=\"text\" onChange={this.handleChange} placeholder={this.props.contaktiChat.translations.user_dashboard.cbnumber_chat} name=\"phone\" className=\"form-control callback-control\" value={this.state.phone} id=\"messagebox-callback-number\" />\n          </div>\n          <div style={{clear: \"both\"}}></div>\n        </div>\n\n        <div>\n          <div className=\"small-label\">{this.props.contaktiChat.translations.user_dashboard.time_chat}</div>\n          <div style={{clear: \"both\"}}></div>\n\n          <div style={{width: \"50%\", float: \"left\", boxSizing: \"border-box\",  paddingRight: \"20px\"}}>\n            <input type=\"date\" id=\"messagebox-date-field\" name=\"date\" value={this.state.date} onChange={this.handleChange} />\n          </div>\n\n          <div style={{width: \"50%\", float: \"left\", boxSizing: \"border-box\",  paddingRight: \"20px\"}}>\n            <input type=\"time\" id=\"messagebox-time-field\" name=\"time\" value={this.state.time} onChange={this.handleChange} />\n          </div>\n\n\n          <div style={{clear: \"both\"}}></div>\n        </div>\n\n        <label>{this.props.contaktiChat.translations.user_dashboard.message_chat}</label>\n        <input type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} placeholder={this.props.contaktiChat.translations.user_dashboard.messageemail_chat} className=\"form-control callback-control\" id=\"messagebox-email\" />\n        <br />\n        <textarea name=\"message\" value={this.state.message} onChange={this.handleChange} placeholder={this.props.contaktiChat.translations.user_dashboard.messagemsg_chat} className=\"form-control\" rows=\"4\" id=\"messagebox-message\"></textarea>\n        <br />\n        <div className=\"send-button-container pull-left\">\n          <button id=\"messagebox-send\" onClick={this.createCallBack} className=\"send\" style={{backgroundColor: this.props.contaktiChat.color }} ><span className=\"fa fa-send\"></span></button>\n        </div>\n        <div className=\"pull-right\">\n          Powered by <a href=\"http://contakti.com\" target=\"_blank\" style={{position: \"relative\"}}>contakti.com</a>\n          <div className=\"send-button-container pull-left\">\n\n          </div>\n        </div>\n      </div>\n      )}\n      </div>\n      \n    );\n  }\n}\n\nexport default CallBackBox;","import React, { Component } from 'react';\nclass Product extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n\n\n  onProductRemove = (p) => {\n    this.props.onProductRemove(p);\n  }\n\n  increaseQuantity = (product) => {\n    this.props.increaseQuantity(product)\n  }\n\n  decreaseQuantity = (product) => {\n    if (product.quantity > 1) {\n      product.quantity -= 1;\n      this.props.replaceProduct(product)\n    }\n  }\n\n\n  render() {\n    let { products } = this.props;\n\n    return (\n      <table className=\"table table-condensed table-striped \">\n        <thead>\n          <tr>\n            <th className=\"border-0\">Title</th>\n            <th className=\"border-0 text-center\">Quantity</th>\n            <th className=\"border-0 text-center\">Price</th>\n            <th className=\"border-0 text-center\">Actions</th>\n          </tr>\n        </thead>\n\n        <tbody id=\"cart_body\">\n          {\n            products.map((product, index) => {\n              return <tr key={index}>\n                <td className=\"px-1 border-0\"><a href=\"#\">{product?.title}</a></td>\n                <td className=\"px-1 border-0\">\n                  <div className=\"center\" style={{ position: \"relative\" }}>\n                    <span onClick={() => this.increaseQuantity(product)}> <i className=\"fa fa-plus\"></i> </span>\n                    <input type=\"text\" className=\"form-control\" style={{ width: \"50px\", margin: \"0px 5px\" }} value={product?.quantity} readonly />\n                    <span onClick={() => this.decreaseQuantity(product)} > <i className=\"fa fa-minus\" ></i></span>\n                  </div>\n                </td>\n                <td className=\"px-1 border-0 text-center\">{product?.currency} {product?.price}</td>\n                <td className=\"px-1 border-0 center\">\n                  <button\n                    onClick={() => this.onProductRemove(product)}\n                    className=\"btn btn-danger \" ><i className=\"fa fa-times\" disabled ></i></button>\n                </td>\n              </tr>\n\n            })\n          }\n          <tr className=\"table-active\">\n            <td className=\"px-1 border-0 text-right\" colSpan=\"3\">\n              <strong>Total: {this.props.total}</strong>\n             </td>\n             <td className=\"px-1 border-0 \"/>\n          </tr>\n        </tbody>\n\n      </table>\n\n    );\n  }\n}\nexport default Product;","import React, { Component } from 'react';\nimport Product from './Product';\nimport _ from 'lodash';\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      sum: 0,\n      currency: \"USD\"\n    }\n  }\n  componentDidMount() {\n    this.countSum();\n  }\n\n  onProductRemove = (product) => {\n    let { products } = this.state;\n    products = _.reject(products, (p) => {\n      return p.id == product.id;\n    });\n    this.setState({ products }, () => {\n      if (this.state.products.length === 0) {\n        this.props.onCartEmpty();\n      }\n      this.countSum();\n    });\n\n  }\n\n  addProduct = (p) => {\n    let { products } = this.state;\n    var product = _.find(products, { id: p.id });\n    if (product) {\n      product.quantity += 1;\n      this.replaceProduct(product);\n    }\n    else {\n      p.quantity = 1;\n      let currency = p.currency;\n      products.push(p)\n      this.setState({ products, currency }, () => this.countSum());\n\n    }\n  }\n\n\n  countSum = () => {\n    let sum = 0;\n    let { products } = this.state;\n    _.each(products, (product) => {\n      sum += (product.price * product.quantity);\n    });\n    this.setState({ sum });\n  }\n\n  replaceProduct = (product) => {\n    let { products } = this.state;\n    var index = _.findIndex(products, { id: product.id });\n    products.splice(index, 1, product);\n    this.setState({ products });\n    this.countSum();\n  }\n\n  render() {\n    let { products } = this.state;\n    let color = this.props.contaktiChat.color;\n    let text_color = this.props.contaktiChat.text_color;\n    return (\n      <div id=\"contakti_cart_box\" className=\"cart_box\">\n        <div className=\"msg_head\" style={{ backgroundColor: color }}>\n\n          <span id=\"contakti-user-name\" style={{ color: text_color }}> Shopping Cart</span>\n        </div>\n\n        <div className=\"cart_body d-flex flex-column justify-content-between\">\n          <div style={{maxHeight: \"270px\", overflow: \"auto\"}}>\n            <Product\n              products={products}\n              onProductRemove={this.onProductRemove}\n              increaseQuantity={this.addProduct}\n              replaceProduct={this.replaceProduct}\n              total={ `${this.state.currency} ${this.state.sum}` }\n            />\n          </div>\n\n          <div className=\"text-center\">\n            <div className=\"row\">\n            <div className=\"col-6\">\n              <label> PAYMENT METHOD</label>\n\n              <div className=\"centera\" id=\"paymenst_method_select\">\n                <select className=\"form-control w-100 m-auto\">\n                  <option> Card</option>\n                  <option> PayPal</option>\n                </select>\n              </div>\n              <br />\n            </div>\n            <div className=\"col-6\">\n              <label > SHIPPING METHOD</label>\n              <div className=\"centera\" id=\"payments_method_select\">\n                <select className=\"form-control w-100 m-auto\">\n                  <option> ABC</option>\n                  <option> DEF</option>\n                </select>\n              </div>\n            </div>\n\n            </div>\n\n\n            <div>\n              <button className=\"btn w-50\" style={{ color: text_color, backgroundColor: color }}> CHECKOUT</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Cart;","import React, { Component } from 'react';\nimport ContaktiChat from '../../classes/ContaktiChat';\nimport Dropdown from './Dropdown';\nimport ChatBox from '../chat_box/ChatBox';\nimport CallBackBox from '../others/CallBackBox';\nimport ChatUtils from '../../classes/ChatUtils';\nimport ReactResizeDetector from 'react-resize-detector';\nimport Cart from '../shopping_cart/Cart';\nimport { tsImportEqualsDeclaration } from '@babel/types';\n\n\nclass ChatPlugin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      style: {},\n      contaktiChat: {},\n      translations: {},\n      loading: true,\n      showDropDown: false,\n      showNoAgentScreen: false,\n      showPlugin: false,\n      showMinimize: false,\n      chatStarted: false,\n      chatInitialized: false,\n      showCartIcon: false,\n      showCart: false,\n      cartEmpty: true,\n    }\n  }\n\n  async componentDidMount() {\n    let contakti_chat = new ContaktiChat();\n    let chatUtils = ChatUtils\n    let urlParams = chatUtils.getUrlParams(window.location.href)\n    let serviceChannelId = urlParams.id;\n    contakti_chat.setServiceChannel(serviceChannelId);\n    await contakti_chat.setSettings();\n    await contakti_chat.setTranslations();\n    await contakti_chat.checkIfChatIsAvailable();\n    this.setState({\n      contaktiChat: contakti_chat,\n      loading: false,\n      style: {\n        color: contakti_chat.text_color,\n        backgroundColor: contakti_chat.color\n      }\n    });\n  }\n\n  toggleDropDown = (flag) => {\n    this.setState({ showDropDown: flag });\n  }\n  setChatStarted = () => {\n    if (!this.state.chatStarted) {\n      this.setState({ chatStarted: true });\n    }\n  }\n  showNoAgentOnlineScreen = (e) => {\n    this.setState({ showNoAgentScreen: true });\n    e.preventDefault()\n  }\n  showChatPlugin = async () => {\n    if (!this.state.chatInitialized) {\n      this.setState({ chatInitialized: true });\n    }\n    let cont_chat = this.state.contaktiChat\n    await cont_chat.setSettings();\n    this.setState({ contaktiChat: cont_chat });\n    if (!this.state.showPlugin) {\n      this.setState({ showPlugin: true, showMinimize: true })\n\n      if (this.state.chatStarted) {\n        this.setState({ showDropDown: true });\n      }\n      if(!this.state.cartEmpty){\n        this.setState({ showCartIcon: true });\n      }\n\n    }\n\n  }\n  hideChatPlugin = (e) => {\n    e.stopPropagation();\n    if (this.state.showPlugin) {\n      this.setState({ showPlugin: false, showMinimize: false, showDropDown: false, showCart: false, showCartIcon: false });\n    }\n  }\n  destroyChat = () => {\n    this.setState({ chatInitialized: false, showPlugin: false, showMinimize: false, showDropDown: false, showCartIcon: false , cartEmpty: true   });\n  }\n  onResize = (width, height) => {\n    window.parent.postMessage({ type: 'set_dimensions', width, height }, \"*\");\n  }\n  toggleCart = () => {\n    this.setState({ showCart: !this.state.showCart });\n  }\n  addToCart = (product) => {\n    this.setState({ showCartIcon: true, cartEmpty: false }, () => this.cart.addProduct(product) );\n  }\n  hideCartIcon = () => {\n    this.setState({ showCartIcon: false, showCart: false, cartEmpty: true });\n  }\n\n\n  render() {\n    const { contaktiChat, loading } = this.state;\n    const { translations } = contaktiChat;\n    if (loading) {\n      return null;\n    }\n    return (\n      <div id=\"contakti-chat-main\">\n        <ReactResizeDetector handleWidth handleHeight onResize={this.onResize} >\n          <div id=\"contakti-msg-box\" className=\"chat-plugin-parent\" style={{ right: '0px', bottom: '0px' }}>\n            <div className=\"cart-parent\" style={{ display: this.state.showCart ? \"block\" : \"none\" }}>\n              { (!this.state.cartEmpty)&&contaktiChat.chat_settings.enable_cart ? (\n              <Cart ref={instance => { this.cart = instance; }} contaktiChat={contaktiChat} onCartEmpty={this.hideCartIcon} />\n              ): \"\"}\n            </div>\n\n            <div className=\"chat-parent\">\n              <div id=\"contakti-msg-head\" onClick={this.showChatPlugin} className=\"msg_head\" style={this.state.style}>\n                <div>\n                  <div id=\"contakti-logo-container\">\n                    <img src={`${contaktiChat.origin}/${contaktiChat.chat_settings.file.url}`} />\n                  </div>\n                </div>\n\n                <span id=\"contakti-user-name\" style={{ color: contaktiChat.text_color }}>{contaktiChat.chat_settings.chat_title}</span>\n\n                <span id=\"cart_show_button\" onClick={this.toggleCart} style={{ display: this.state.showCartIcon ? \"block\" : \"none\", margin: '5px 5px 0 0', color: contaktiChat.text_color }}>\n                  <i className=\"fa fa-shopping-cart mt-1\"></i>\n                </span>\n                <span>\n                  {this.state.showDropDown ? (<Dropdown styleObj={this.state.style} showDropdown={this.state.showDropDown} quit={() => { this.chatBox.quitChat(); this.destroyChat() }} sendChatHistory={() => this.chatBox.showSendChatHistory()} downloadChatHistory={() => { this.chatBox.downloadChat(); }} startChat={() => this.showChatPlugin()} />) : \"\"}\n                </span>\n\n                <div id=\"contakti-msg-minimize\" >\n                  {this.state.showMinimize ? (\n                    <span className=\"fa-stack\" onClick={this.hideChatPlugin} style={{ color: contaktiChat.text_color }}><i className=\"fa fa-stack-2x fa-angle-down\" style={{ top: '3px', left: '0px' }}></i></span>\n                  ) : \"\"}\n                </div>\n              </div>\n              <div>\n              </div>\n              <div>\n                {this.state.chatInitialized ? (\n                  <div style={{ display: this.state.showPlugin ? \"block\" : \"none\" }}>\n                    {this.state.showNoAgentScreen ? (<CallBackBox contaktiChat={contaktiChat} showNoAgentOnlineScreen={this.showNoAgentOnlineScreen} ></CallBackBox>) : (\n                      <ChatBox ref={instance => { this.chatBox = instance; }}\n                        contaktiChat={contaktiChat}\n                        toggleDropDown={this.toggleDropDown}\n                        showNoAgentOnlineScreen={this.showNoAgentOnlineScreen}\n                        quit={() => { this.destroyChat() }}\n                        setChatStarted={this.setChatStarted}\n                        startChat={() => this.showChatPlugin()}\n                        addToCart={(product) => { this.addToCart(product) }}\n                      ></ChatBox>)}\n                  </div>\n                ) : \"\"}\n              </div>\n            </div>\n          </div>\n        </ReactResizeDetector>\n      </div>\n    );\n  }\n}\n\nexport default ChatPlugin;\n","import React, { Component } from 'react';\nimport './App.scss';\nimport './components/chat_plugin/ChatPlugin'\nimport ChatPlugin from './components/chat_plugin/ChatPlugin';\nimport ContaktiChat from './classes/ContaktiChat';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <ChatPlugin />\n    );\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './style.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}