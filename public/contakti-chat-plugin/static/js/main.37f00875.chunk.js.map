{"version":3,"sources":["classes/Api.js","classes/ContaktiChat.js","components/chat_plugin/Dropdown.jsx","classes/MessageFactory.js","classes/ChatUtils.js","components/modules/utils/Text.jsx","components/modules/utils/CarouselWrapper.jsx","components/chat_box/MessageImagesModal.jsx","components/chat_box/Message.jsx","components/others/SendChatHistory.jsx","components/chat_box/ChatBox.jsx","components/others/CallBackBox.jsx","components/shopping_cart/Product.jsx","components/shopping_cart/Cart.jsx","components/shopping_cart/ProductInfoModal.jsx","components/chat_plugin/ChatPlugin.jsx","App.js","reportWebVitals.js","index.js"],"names":["Api","document","location","origin","includes","this","serverUrl","baseUrl","prototype","get","a","route","fetch","res","json","data","post","method","cache","headers","body","JSON","stringify","response","postFile","file_data","ContaktiChat","locale","serviceChannel","chat_settings","url_obj","serverProtocol","api","channel","settings","chat_inquiry_fields","chat_initial_buttons","chatBotEnabled","enable_chatbot","chatWithHuman","initialMsg","initial_msg","color","text_color","agents_online","is_ad_finland","is_ad_finland_company","result","payment_methods","translations","Dropdown","props","toggle_dropdown","e","setState","expanded","state","mouseover","target","style","styleObj","backgroundColor","mouseout","end","quit","showEndChat","sendchatHistory","sendChatHistory","showSendEmail","showStart","startChat","downloadChat","downloadChatHistory","className","id","onClick","hidden","onMouseOver","onMouseOut","user_dashboard","download_txt_file","display","send_to_email","end_chat","start_new_chat","Component","ChatMessage","asJSON","ChatMessageFactory","options","from","username","type","initialise","newMessage","message","chatBot","msg","channel_id","chatbot","quitMessage","botToHumanSwitchMessage","fileMessage","file_url","file_path","ChatUtils","replaceURLs","replace","url","hyperlink","match","replaceAllNewLines","convertHtmlToText","html","getUrlParams","params","split","forEach","pair","map","decodeURIComponent","length","Text","parse","text","CarouselWrapper","handleSelect","selectedIndex","index","activeIndex","Carousel","onSelect","images","image","Item","src","file","alt","file_name","MessageImagesModal","handleClose","Modal","show","showModal","onHide","Body","Message","handleMessageImageShow","imageIndex","modalImages","handleMessageImageClose","userName","fromTime","envelope","fromColor","contaktiChat","bgClass","download","rel","href","upload_chat","gridTemplateColumns","borderColor","files","name","products","product","title","addToCart","data-product-id","handleProductShow","aria-hidden","action_buttons","btn","i","hyper_link","test","sendCustomActionMessage","moment","timestamp","local","format","userInfo","info","SendChatHistory","handleChange","event","key","value","sendEmail","email","chat_history","quitChat","cancel","transcript","bgColor","send_chat_history_title","onChange","placeholder","messageemail_chat","messagemsg_chat","rows","margin","messagesend_chat","messagesend_cancel","position","ChatBox","onStartClientResponse","agentPresent","setSendDisabled","callback","onMessageReceived","connect","chatChannel","fayeServer","server","window","Danthes","sign","setTimeout","displayNoAgentOnlineScreen","timeOut","contakti_chat","showNoAgentOnlineScreen","connectTimeout","scrollDown","showNoAgentOnline","successCallback","agent_online","indicators","getElementById","messageCame","localStorage","getItem","setItem","innerHTML","typing_text","removeItem","agentsCount","quit_chat","join_chat","welcome_message","agentName","clearTimeout","ask_human_to_help","innerText","changeFromBotToHumanChat","messages","chat_transcript","push","getChatTranscript","has_custom_action","custom_action_text","showCustomActionButtion","customActionButtionText","client_data","field","label","_","camelCase","phone","chat_display_fields","sendMessage","msg_text","messageFactory","_channelUrl","messagesListContainer","scrollIntoView","behavior","block","inline","sendQuitNotify","quitSent","encodeURIComponent","_channelIndicatorUrl","onKeyIndicator","onKeyPress","keyCode","onSendClicked","preventDefault","showDetailInput","showChat","toggleDropDown","bot_alias","enable_initial_buttons","moment1","msgs","setChatStarted","disableChatSendDisabled","updateUserDetail","uploadFile","fileInput","click","handleFileChange","formdata","FormData","append","uploadedFileUrls","showSendChatHistory","showSendChatHistoryFlag","chatUtils","_moment","fileDownload","createTicket","isFromCart","sum","task_data","shopping_cart","order_details","quantity","currency","price","setOrderCreated","orderCreated","messageContainer","started","messagEnvelopes","disableMessageInput","Object","keys","chat","msgFactory","bottom","getElementsByClassName","classList","remove","onclick","_onSendClicked","bind","minimized","inquiryData","textAlign","fontSize","paddingTop","thanks_for_order","onSubmit","maxHeight","overflow","marginTop","input_type","required","marginBottom","start_chat","ref","el","chat_not_available","chat_leave_a_message_link","disabled","type_message","charCode","visibility","attachment_chat","marginRight","instance","CallBackBox","createCallBack","number","date","time","datetime","Date","thanks_chat","callBackSent","sentmessage_chat","callback_chat","cbnumber_chat","clear","time_chat","width","float","boxSizing","paddingRight","message_chat","Product","onProductRemove","p","increaseQuantity","decreaseQuantity","replaceProduct","product_title","action","handleShow","readOnly","colSpan","total","Cart","reject","onCartEmpty","countSum","addProduct","find","each","findIndex","splice","selectedPaymentMethod","paymentMethods","selectedProduct","cart_title","toggleCart","selected","shipment_method","checkout_format","checkout","handleOrder","order","ProductInfoModal","Header","closeButton","Title","description","attachments","f","Footer","Button","variant","background","buttonColor","size","btnText","ChatPlugin","handleProductModalClose","showProductModal","handleProductModalShow","flag","showDropDown","chatStarted","showNoAgentScreen","showChatPlugin","chatInitialized","showPlugin","cont_chat","setSettings","showMinimize","cartEmpty","showCartIcon","hideChatPlugin","stopPropagation","showCart","destroyChat","onResize","height","parent","postMessage","cart","hideCartIcon","createCartTicket","chatBox","order_products","loading","urlParams","serviceChannelId","setServiceChannel","setTranslations","setPaymentMethods","parent_width_class","outerWidth","handleWidth","handleHeight","product_details","close","enable_cart","chat_title","showDropdown","top","left","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"ySAAMA,EAAM,WAMJC,SAASC,SAASC,OAAOC,SAAS,QAElCC,KAAKF,OAAS,wBAGdE,KAAKF,OAASF,SAASC,SAASC,OAGpCE,KAAKC,UAAYD,KAAKF,OAAS,UAC/BE,KAAKE,QAAUF,KAAKC,WAGxBN,EAAIQ,UAAUL,OAAS,QAEvBH,EAAIQ,UAAUC,IAAd,sBAAoB,4CAAAC,EAAA,6DAAgBC,EAAhB,+BAAwB,GAAxB,SACEC,MAAM,GAAD,OAAIP,KAAKE,QAAT,YAAoBI,IAD3B,cACVE,EADU,gBAEGA,EAAIC,OAFP,UAEVC,EAFU,iDAIL,MAJK,iCAOLA,GAPK,iDAUpBf,EAAIQ,UAAUQ,KAAd,sBAAqB,4CAAAN,EAAA,6DAAgBC,EAAhB,+BAAwB,GAAII,EAA5B,+BAAmC,GAAnC,SACMH,MAAM,GAAD,OAAIP,KAAKE,QAAT,YAAoBI,GAAS,CACrDM,OAAQ,OACRC,MAAO,WACPC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUP,KAPR,cACXQ,EADW,gBASJA,EAAST,OATL,wFAYrBd,EAAIQ,UAAUgB,SAAd,sBAAyB,4CAAAd,EAAA,6DAAgBC,EAAhB,+BAAwB,GAAIc,EAA5B,+BAAwC,GAAxC,SACEb,MAAM,GAAD,OAAIP,KAAKE,QAAT,YAAoBI,GAAS,CACrDM,OAAQ,OACRC,MAAO,WACPE,KAAMK,IAJW,cACfF,EADe,gBAMRA,EAAST,OAND,wFAQVd,QCCA0B,E,WAhDX,aAA0B,oBAElBzB,SAASC,SAASC,OAAOC,SAAS,QAElCC,KAAKF,OAAS,wBAGdE,KAAKF,OAASF,SAASC,SAASC,OAGpCE,KAAKC,UAAYD,KAAKF,OAAS,UAC/BE,KAAKsB,OAAS,KACdtB,KAAKuB,eAAiB,KACtBvB,KAAKwB,cAAgB,GACrBxB,KAAKyB,QAAU,CACXxB,UAAWD,KAAKC,UAChByB,eAAgB1B,KAAK0B,gBAEzB1B,KAAK2B,IAAM,IAAIhC,EAAIK,KAAKyB,S,qDAE5B,SAAkBG,GACd5B,KAAKuB,eAAiBK,I,gEAG1B,4BAAAvB,EAAA,sEACoBL,KAAK2B,IAAIvB,IAAT,eAAqBJ,KAAKuB,eAA1B,uBADpB,OACQf,EADR,OAEIR,KAAKwB,cAAgBhB,EAAIqB,SACzB7B,KAAKwB,cAAcM,oBAAsBtB,EAAIsB,oBAC7C9B,KAAKwB,cAAcO,qBAAuBvB,EAAIuB,qBAC9C/B,KAAKgC,eAAiBhC,KAAKwB,cAAcS,eACzCjC,KAAKkC,eAAkBlC,KAAKwB,cAAcS,eAC1CjC,KAAKmC,WAAanC,KAAKwB,cAAcY,YACrCpC,KAAKqC,MAAQrC,KAAKwB,cAAca,MAChCrC,KAAKsC,WAAatC,KAAKwB,cAAcc,WACrCtC,KAAKuC,cAAgB/B,EAAI+B,cACzBvC,KAAKwC,cAAgBhC,EAAIiC,sBAX7B,iD,4HAcA,4BAAApC,EAAA,sEACuBL,KAAK2B,IAAIvB,IAAT,eAAqBJ,KAAKuB,eAA1B,yBADvB,OACQmB,EADR,OAEI1C,KAAK2C,gBAAkBD,EAAOC,gBAFlC,gD,0HAKA,sBAAAtC,EAAA,sEAC8BL,KAAK2B,IAAIvB,IAAT,yBAD9B,OACIJ,KAAK4C,aADT,uD,oECoGWC,E,kDA/Ib,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAkBRC,gBAAkB,SAACC,GAGjB,EAAKC,SAAS,CAAEC,UAAW,EAAKC,MAAMD,YAtBrB,EAwBlBE,UAAY,SAACJ,GACZA,EAAEK,OAAOC,MAAMjB,MAAQ,EAAKS,MAAMS,SAASlB,MAC3CW,EAAEK,OAAOC,MAAME,gBAAkB,EAAKV,MAAMS,SAASC,iBA1BpC,EA4BnBC,SAAW,SAACT,GACVA,EAAEK,OAAOC,MAAMjB,MAAQ,EAAKS,MAAMS,SAASC,gBAC3CR,EAAEK,OAAOC,MAAME,gBAAkB,EAAKV,MAAMS,SAASlB,OA9BpC,EAiCnBqB,IAAM,WACJ,EAAKZ,MAAMa,OACX,EAAKV,SAAS,CAACW,aAAa,KAnCX,EAsCnBC,gBAAkB,WAChB,EAAKd,kBACL,EAAKD,MAAMgB,kBACX,EAAKb,SAAS,CAACc,eAAe,EAAOC,WAAW,KAzC/B,EA4CnBC,UA5CmB,sBA4CN,sBAAA5D,EAAA,6DACX,EAAK4C,SAAS,CAACe,WAAW,IADf,SAEL,EAAKlB,MAAMa,OAFN,uBAGL,EAAKb,MAAMmB,YAHN,2CA5CM,EAkDnBC,aAAe,WACb,EAAKpB,MAAMqB,uBAjDX,EAAKhB,MAAQ,CACXD,UAAU,EACVa,eAAe,EACfC,WAAW,EACXJ,aAAa,GANE,E,0CA2GnB,WAAU,IACDhB,EAAgB5C,KAAK8C,MAArBF,aACP,OACE,sBAAKwB,UAAU,wCAAwCC,GAAG,wBAA1D,UACE,wBACCf,MAAO,CAAEjB,MAAOrC,KAAK8C,MAAMS,SAASlB,OACnC+B,UAAU,kBACVE,QAAStE,KAAK+C,gBAHhB,SAKE,mBAAGqB,UAAU,gBAEf,qBAAIA,UAAU,4BAA4BG,QAAQvE,KAAKmD,MAAMD,SAA0BmB,GAAG,6BAA1F,UACE,6BACE,mBAAGA,GAAG,wBAAwBf,MAAO,CAACjB,MAAOrC,KAAK8C,MAAMS,SAASC,gBAAiBA,gBAAiBxD,KAAK8C,MAAMS,SAASlB,OAASiC,QAAStE,KAAKkE,aAAeM,YAAaxE,KAAKoD,UAAWqB,WAAYzE,KAAKyD,SAA3M,SACEb,EAAa8B,eAAeC,sBAGhC,6BACE,mBAAGN,GAAG,oBAAoBf,MAAO,CAAEsB,QAAQ5E,KAAKmD,MAAMY,cAAe,QAAS,OAAQ1B,MAAOrC,KAAK8C,MAAMS,SAASC,gBAAiBA,gBAAiBxD,KAAK8C,MAAMS,SAASlB,OAASiC,QAAStE,KAAK6D,gBAAiBW,YAAaxE,KAAKoD,UAAWqB,WAAYzE,KAAKyD,SAA7P,SACCb,EAAa8B,eAAeG,kBAG/B,+BACE,mBAAGR,GAAG,0BAA0BC,QAAStE,KAAK0D,IAAKJ,MAAO,CAAEsB,QAAQ5E,KAAKmD,MAAMS,YAAa,QAAS,OAASvB,MAAOrC,KAAK8C,MAAMS,SAASC,gBAAiBA,gBAAiBxD,KAAK8C,MAAMS,SAASlB,OAASmC,YAAaxE,KAAKoD,UAAWqB,WAAYzE,KAAKyD,SAAtP,SACCb,EAAa8B,eAAeI,WAE7B,mBAAGT,GAAG,0BAA0Bf,MAAO,CAAEsB,QAAQ5E,KAAKmD,MAAMa,UAAW,QAAS,OAAQ3B,MAAOrC,KAAK8C,MAAMS,SAASC,gBAAiBA,gBAAiBxD,KAAK8C,MAAMS,SAASlB,OAASiC,QAAStE,KAAKiE,UAAWO,YAAaxE,KAAKoD,UAAWqB,WAAYzE,KAAKyD,SAAzP,SACCb,EAAa8B,eAAeK,8B,GAvIlBC,a,eCFjBC,EAAc,aAIpBA,EAAY9E,UAAU+E,OAAS,WAC3B,OAAOlE,KAAKC,UAAUjB,OAE1B,IAAMmF,EAAqB,SAASC,GAChCpF,KAAKqF,KAAOD,EAAQE,SACpBtF,KAAK4B,QAAUwD,EAAQxD,QACvB5B,KAAKuF,KAAO,WAIhBJ,EAAmBhF,UAAUqF,WAAa,aAG1CL,EAAmBhF,UAAUsF,WAAa,SAASC,EAASH,GAA8B,IAAxBI,EAAuB,wDAANN,EAAM,uCACjFO,EAAM,IAAIX,EAMd,OALAW,EAAIP,KAAOA,GAAQrF,KAAKqF,KACxBO,EAAIC,WAAa7F,KAAK4B,QACtBgE,EAAIL,KAAOA,GAAQvF,KAAKuF,KACxBK,EAAIE,QAAUH,EACdC,EAAIF,QAAUA,EACPE,GAGXT,EAAmBhF,UAAU4F,YAAc,WACvC,IAAIH,EAAM,IAAIX,EAKd,OAJAW,EAAIP,KAAOrF,KAAKqF,KAChBO,EAAIC,WAAa7F,KAAK4B,QACtBgE,EAAIL,KAAO,OACXK,EAAIF,QAAU,YACPE,GAGXT,EAAmBhF,UAAU6F,wBAA0B,WACnD,IAAIJ,EAAM,IAAIX,EAKd,OAJAW,EAAIP,KAAOrF,KAAKqF,KAChBO,EAAIC,WAAa7F,KAAK4B,QACtBgE,EAAIL,KAAO,aACXK,EAAIF,QAAU,qBACPE,GAIXT,EAAmBhF,UAAU8F,YAAc,SAASC,EAAUC,GAC1D,IAAIP,EAAM,IAAIX,EAMd,OALAW,EAAIP,KAAOrF,KAAKqF,KAChBO,EAAIC,WAAa7F,KAAK4B,QACtBgE,EAAIL,KAAO,OACXK,EAAIF,QAAUQ,EACdN,EAAIO,UAAYA,EACTP,GAIIT,Q,iBCzDTiB,E,kCAAAA,EACGC,YAAc,SAACX,GACpB,IAAKA,EAAS,MAAO,GAUrB,OARkBA,EAAQY,QADX,oCAC6B,SAAUC,GACpD,IAAIC,EAAYD,EAIhB,OAHKC,EAAUC,MAAM,gBACnBD,EAAY,UAAYA,GAEnB,YAAcA,EAAY,+CAAiDD,EAAM,WATxFH,EAeGM,mBAAqB,SAAChB,GAC3B,OAAKA,EACEA,EAAQY,QAAQ,MAAO,SADT,IAhBnBF,EAoBGO,kBAAoB,SAACC,GAU1B,OADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,EAAOA,EAAKN,QAAQ,8BAA+B,KACvCA,QAAQ,gCAAiC,KACzCA,QAAQ,YAAa,OACrBA,QAAQ,WAAY,OACpBA,QAAQ,SAAU,UAClBA,QAAQ,WAAY,OACpBA,QAAQ,UAAW,OACnBA,QAAQ,iBAAkB,OAC1BA,QAAQ,YAAa,KA7B/BF,EAiCGS,aAAe,SAACN,GACrB,IAAIO,EAAS,GASb,OARCP,EAAM,KAAKQ,MAAM,KAAK,GAAGA,MAAM,KAAKC,SACnC,SAAUC,IACRA,GAAQA,EAAO,KAAKF,MAAM,KAAKG,IAAIC,qBAC1B,GAAGC,SACVN,EAAOG,EAAK,IAAMA,EAAK,OAItBH,GAIIV,Q,QCzCAiB,EAJF,SAACvE,GACV,OAAOwE,YAAMxE,EAAMyE,O,gBC+BRC,E,kDA/BX,WAAY1E,GAAQ,IAAD,8BACf,cAAMA,IAOV2E,aAAc,SAACC,EAAe1E,GAC1B,EAAKC,SAAS,CAAE0E,MAAOD,KAPvB,EAAKvE,MAAQ,CAAEwE,MAAO,GAFP,E,qDAInB,WACI,IAAIC,EAAc5H,KAAK8C,MAAM8E,YAC7B5H,KAAKiD,SAAS,CAAE0E,MAAOC,M,oBAK3B,WAAU,IAAD,OAEL,OAAS,mCACT,cAACC,EAAA,EAAD,CAAUD,YAAa5H,KAAKmD,MAAMwE,MAAOG,SAAU9H,KAAKyH,aAAxD,SACKzH,KAAK8C,MAAMiF,OAAOb,KAAI,SAACc,EAAOL,GAC3B,OACI,cAACE,EAAA,EAASI,KAAV,UACI,qBACI7D,UAAU,gBACV8D,IAAG,UAAK,EAAKpF,MAAMhD,QAAhB,OAAyBkI,EAAMG,KAAK5B,KACvC6B,IAAKJ,EAAMK,yB,GAtBTrD,aC2BfsD,E,kDAzBX,WAAYxF,GAAQ,IAAD,8BACf,cAAMA,IAIVyF,YAAc,WACV,EAAKzF,MAAMyF,eAJX,EAAKpF,MAAQ,GAFE,E,0CAQnB,WACI,OACI,mCACI,cAACqF,EAAA,EAAD,CAAOC,KAAMzI,KAAK8C,MAAM4F,UAAWC,OAAQ3I,KAAKuI,YAAhD,SACI,cAACC,EAAA,EAAMI,KAAP,UACI,cAAC,EAAD,CACIb,OAAQ/H,KAAK8C,MAAMiF,OACnBjI,OAAQE,KAAK8C,MAAMhD,OACnB8H,YAAa5H,KAAK8C,MAAM8E,wB,GAjBnB5C,aC8GlB6D,E,kDA3Gb,WAAY/F,GAAQ,IAAD,8BACjB,cAAMA,IAURgG,uBAAyB,SAACnB,EAAOI,GAC/B,EAAK9E,SAAS,CAAE8F,WAAYpB,EAAOe,WAAW,EAAMM,YAAajB,KAZhD,EAcnBkB,wBAA0B,WACxB,EAAKhG,SAAS,CAAEyF,WAAW,KAb3B,EAAKvF,MAAQ,CACXmC,SAAU,EAAKxC,MAAMoG,SACrBC,SAAU,EAAKrG,MAAMsG,SAAS/D,OAAS,EAAKC,SAAW,SAAW,SAClE+D,UAAW,EAAKvG,MAAMuC,OAAS,EAAKC,SAAW,SAAW,SAC1DyD,WAAY,KACZL,WAAW,EACXM,YAAa,IARE,E,0CAkBnB,WAAU,IAAD,OACDM,EAAiBtJ,KAAK8C,MAAtBwG,aAEN,OACE,sBAAKlF,UAAWpE,KAAK8C,MAAMyG,QAA3B,UACE,cAAC,EAAD,CACCb,UAAW1I,KAAKmD,MAAMuF,UACtBd,YAAa5H,KAAKmD,MAAM4F,WACxBhB,OAAQ/H,KAAKmD,MAAM6F,YACnBT,YAAavI,KAAKiJ,wBAClBnJ,OAAQwJ,EAAaxJ,SACQ,SAA7BE,KAAK8C,MAAMsG,SAAS7D,KACnB,mBAAGiE,UAAQ,EAACnG,OAAO,SAASoG,IAAI,aAAaC,KAAMtD,EAAUM,mBAAmB1G,KAAK8C,MAAMsG,SAAS1D,SAApG,mBAAkH1F,KAAK8C,MAAMsG,SAAS/D,KAAtI,YAA8IiE,EAAa1G,aAAa8B,eAAeiF,eAGvL,cAAC,EAAD,CAAMpC,KAAMnB,EAAUM,mBAAmBN,EAAUC,YAAYrG,KAAK8C,MAAMsG,SAAS1D,YAEnF1F,KAAK8C,MAAMsG,SAASrB,OAAU,qBAAKzE,MAAO,CAACsG,oBAAqB,uBAAwBxF,UAAU,cAApE,SAC5BpE,KAAK8C,MAAMsG,SAASrB,OAAOb,KAAI,SAACc,EAAOL,GACvC,OAAO,qBAAKvD,UAAU,YAAf,SACL,qBAAK8D,IAAG,UAAKoB,EAAaxJ,QAAlB,OAA2BkI,EAAMG,KAAK5B,KAAOjC,QAAS,WAAQ,EAAKwE,uBAAuBnB,EAAO,EAAK7E,MAAMsG,SAASrB,SAAUzE,MAAO,CAACuG,YAAaP,EAAajH,OAAQ+B,UAAU,yBAIvL,GAGRpE,KAAK8C,MAAMsG,SAASU,MAAS9J,KAAK8C,MAAMsG,SAASU,MAAM5C,KAAI,SAACiB,GAC1D,OACE,8BACE,mBAAGqB,UAAQ,EAACnG,OAAO,SAASoG,IAAI,aAAaC,KAAMvB,EAAK5B,IAAxD,SAA8D4B,EAAK4B,YAGnE,GAEP/J,KAAK8C,MAAMsG,SAASY,SACnB,qBAAK3F,GAAG,+BAA+BD,UAAU,OAAjD,SACGpE,KAAK8C,MAAMsG,SAASY,SAAS9C,KAAI,SAAA+C,GAChC,OAAQ,sBAAK7F,UAAU,iBAAf,UACN,sBAAKA,UAAU,SAAf,UAAwB,iCAAS6F,EAAQC,QAAzC,OACA,qBAAK9F,UAAU,SAAf,SACE,mBAAGsF,KAAK,IAAIpF,QAAS,kBAAM,EAAKxB,MAAMqH,UAAUF,IAAU7F,UAAU,kBAAkBgG,kBAAiBH,EAAQ5F,GAAIf,MAAO,CAAEjB,MAAOiH,EAAahH,WAAYkB,gBAAiB8F,EAAajH,OAA1L,SACE,mBAAG+B,UAAU,4BAGjB,uBAAME,QAAS,WAAO,EAAKxB,MAAMuH,kBAAkBJ,IAAnD,cAA+D,mBAAG7F,UAAU,oBAAoBkG,cAAY,SAA5G,SAPM,uBAAqDL,EAAQ5F,UAYvE,GAEHrE,KAAK8C,MAAMsG,SAASmB,eACnB,8BACMvK,KAAK8C,MAAMsG,SAASmB,eAAerD,KAAI,SAACsD,EAAKC,GAC/C,OACE,gCACE,uBACCD,EAAIE,YAAcF,EAAIE,WAAWtD,OAAS,EAAI,mBAAGsC,MAAS,gBAAgBiB,KAAKH,EAAIE,YAAwB,GAAX,WAAiBF,EAAIE,WAAYtG,UAAU,gBAAgBf,OAAO,SAASC,MAAO,CAAEE,gBAAiB8F,EAAajH,MAAOA,MAAOiH,EAAahH,YAA/L,SAA6M,cAAC,EAAD,CAAMiF,KAAMiD,EAAIjD,SAC1Q,yBAAQnD,UAAU,gBAAgBd,MAAO,CAAEE,gBAAiB8F,EAAajH,MAAOA,MAAOiH,EAAahH,YAAcgC,QAAS,EAAKxB,MAAM8H,wBAAtI,UAA+J,cAAC,EAAD,CAAMrD,KAAI,OAAEiD,QAAF,IAAEA,OAAF,EAAEA,EAAKjD,OAAhL,OAEF,yBALF,yBAA4BkD,SAahC,GAE2B,SAA7BzK,KAAK8C,MAAMsG,SAAS7D,MAAgD,YAA7BvF,KAAK8C,MAAMsG,SAAS7D,KACzD,gCACE,uBACA,sBAAKnB,UAAS,kBAAapE,KAAKmD,MAAMgG,UAAtC,cAAoD0B,IAAO7K,KAAK8C,MAAMsG,SAAS0B,UAAY9K,KAAK8C,MAAMsG,SAAS0B,UAAY,IAAIC,QAAQC,OAAO,qBAC9I,sBAAK5G,UAAS,kBAAapE,KAAKmD,MAAMkG,WAAtC,UAAoDrJ,KAAK8C,MAAMsG,SAAS/D,KAAxE,OACCrF,KAAK8C,MAAMsG,SAAS/D,OAASrF,KAAK8C,MAAMoG,SACvC,8BACGlJ,KAAK8C,MAAMmI,SAAS/D,KAAI,SAACgE,EAAMT,GAC9B,OAAQ,sBAA4BrG,UAAS,kBAAa,EAAKjB,MAAMkG,WAA7D,UAA2E6B,EAA3E,0BAAuBT,SAGjC,MAEJ,U,GAvGQzF,aC6DPmG,E,kDA9DX,WAAYrI,GAAQ,IAAD,8BACf,cAAMA,IAUVsI,aAAe,SAACC,EAAOC,GACnB,IAAInI,EAAQ,EAAKA,MAEjBA,EADgBkI,EAAMhI,OAAO0G,MACVsB,EAAMhI,OAAOkI,MAChC,EAAKtI,SAAL,eAAmBE,KAfJ,EAkBnBqI,UAAY,WACR,IAAIC,EAAQ,EAAKtI,MAAMsI,MACnB/F,EAAU,EAAKvC,MAAMuI,aACrBnF,EAAM,QAAU,EAAKzD,MAAMwG,aAAa/H,eAAiB,2BACzDb,EAAO,CAAE+K,MAAOA,EAAO/F,QAASA,IACpC,IAAI/F,GAAMgB,KAAK4F,EAAK7F,GACpB,EAAKoC,MAAM6I,YAxBI,EA2BnBC,OA3BmB,sBA2BV,sBAAAvL,EAAA,sEACA,EAAKyC,MAAM6I,WADX,OAEL,EAAK7I,MAAMmB,YAFN,2CAzBL,EAAKd,MAAQ,CACTsI,MAAO,GACPC,aAAc,IAJH,E,qDAOnB,WACI1L,KAAKiD,SAAS,CAAEyI,aAAc1L,KAAK8C,MAAM+I,e,oBAwB7C,WACI,IAAMjJ,EAAe5C,KAAK8C,MAAMwG,aAAa1G,aAAa8B,eACpDrC,EAAQrC,KAAK8C,MAAMgJ,QACzB,OACI,sBAAKzH,GAAG,wBAAwBD,UAAU,uDAA1C,UACI,gCACE,gCAAQxB,EAAamJ,0BACrB,uBAAOxG,KAAK,QAAQwE,KAAK,QAAQiC,SAAUhM,KAAKoL,aAAcG,MAAOvL,KAAKmD,MAAMsI,MAAOQ,YAAarJ,EAAasJ,kBAAmB9H,UAAU,gCAAgCC,GAAG,4BACjL,uBAAM,uBACN,0BAAU4H,YAAarJ,EAAauJ,gBAAiB/H,UAAU,iCAAiCgI,KAAK,IAAI/H,GAAG,4BAA4B0F,KAAK,eAAeiC,SAAUhM,KAAKoL,aAAcG,MAAOvL,KAAKmD,MAAMuI,eAC3M,uBACA,uBAAOnG,KAAK,SAASlB,GAAG,wBAAwB0F,KAAK,6BAEvD,sBAAK3F,UAAU,OAAf,UACE,sBAAKA,UAAU,kCAAf,UACI,yBAAQC,GAAG,yBAAyBD,UAAU,OAAOd,MAAO,CAAEE,gBAAiBnB,EAAOgK,OAAQ,OAAY/H,QAAStE,KAAKwL,UAAxH,UAAoI5I,EAAa0J,iBAAjJ,QACA,yBACA,wBAAQjI,GAAG,2BAA2BD,UAAU,OAAOd,MAAO,CAAEE,gBAAiBnB,EAAOgK,OAAQ,OAAU/H,QAAStE,KAAK4L,OAAxH,SAAkIhJ,EAAa2J,wBAEnJ,sBAAKnI,UAAU,aAAf,wBACe,mBAAGsF,KAAK,sBAAsBrG,OAAO,SAASoG,IAAI,aAAanG,MAAO,CAAEkJ,SAAU,YAAlF,0BACX,qBAAKpI,UAAU,iD,GAvDPY,a,iBC6oBfyH,E,kDAroBb,WAAY3J,GAAQ,IAAD,8BACjB,cAAMA,IAiDR4J,sBAAwB,SAACxL,IACjB,EAAKiC,MAAMwJ,cAAiB,EAAKxJ,MAAMmG,aAAapH,eACxD,EAAK0K,kBAGP1L,EAAS2L,SAAW,EAAKC,kBACzB5L,EAAS6L,SAAU,EAEnB,EAAK9J,SAAS,CAAE+J,YAAa9L,EAASU,UACtC,EAAKqB,SAAS,CAAEgK,WAAY/L,EAASgM,SACrCC,OAAOC,QAAQC,KAAKnM,GAEpBoM,YAAW,WACT,IAAM/G,EAAM,EAAKpD,MAAMmG,aAAarJ,UAAxB,2CAAwE,EAAKkD,MAAM6J,aAC/FzM,MAAMgG,EAAK,CACT,eAAgB,uBAEjB,MAnEc,EAyEnBgH,2BAA6B,WAAsB,IAArBC,EAAoB,uDAAV,IAClCC,EAAgB,EAAKtK,MAAMmG,aACI,GAA/BmE,EAAclL,eAAyD,GAA/BkL,EAAcvL,cAExD,EAAKY,MAAM4K,0BAGX,EAAKzK,SAAS,CACZ0K,eAAgBL,YAAW,WACzB,EAAKM,aACL,EAAK3K,SAAS,CAAE4K,mBAAmB,MAClCL,MApFU,EA0FnBM,gBAAkB,SAACpN,GACjB,IAAI+M,EAAgB,EAAKtK,MAAMmG,aACN,GAArB5I,EAAKqN,aAEP,EAAKR,2BAA2B,IAIhCE,EAAcvL,eAAgB,EAC9BuL,EAAczL,gBAAiB,EAC/B,EAAKiB,SAAS,CAAEqG,aAAcmE,IAAiB,WAC7C,EAAKb,kBACL,EAAKW,kCAtGQ,EA0GnBT,kBAAoB,SAAC1D,GACnB,GAAsB,cAAlBA,EAAS7D,KAAb,CAIA,IAAIyI,EAAapO,SAASqO,eAAe,0BAEzC,GADA,EAAKhL,SAAS,CAAEiL,aAAa,IACP,oBAAlB9E,EAAS7D,KAA4B,CACvCyI,EAAapO,SAASqO,eAAe,0BACnBE,aAAaC,QAAQ,qBAGrCD,aAAaE,QAAQ,kBAAmB,QACxCL,EAAWM,UAAYlF,EAAS/D,KAAO,EAAKlC,MAAMmG,aAAa1G,aAAa8B,eAAe6J,YAAc,uGACzG,EAAKtL,SAAS,CACZ0K,eAAgBL,YAAW,WACR1N,SAASqO,eAAe,0BAC9BK,UAAY,GAEvBH,aAAaK,WAAW,qBACvB,YAIJ,CACmB,SAAlBpF,EAAS7D,MACX,EAAKtC,SAAS,CAAEwL,YAAa,EAAKtL,MAAMsL,YAAc,IACtDrF,EAAS1D,QAAT,UAAsB0D,EAAS/D,KAA/B,YAAuC,EAAKlC,MAAMmG,aAAa1G,aAAa8B,eAAegK,WACvF,EAAKvL,MAAMsL,YAAc,IAE3B,EAAKxL,SAAS,CAAE0J,cAAc,IAC9B,EAAKC,oBAGkB,SAAlBxD,EAAS7D,MAChB,EAAKtC,SAAS,CAAEwL,YAAa,EAAKtL,MAAMsL,YAAc,IAClD,EAAKtL,MAAMwJ,aACbvD,EAAS1D,QAAT,UAAsB0D,EAAS/D,KAA/B,YAAuC,EAAKlC,MAAMmG,aAAa1G,aAAa8B,eAAeiK,WAE3FvF,EAAS1D,QAAT,UAAsB0D,EAAS/D,KAA/B,YAAuC,EAAKlC,MAAMmG,aAAa9H,cAAcoN,iBAE/E,EAAK3L,SAAS,CAAE0J,cAAc,EAAMkC,UAAWzF,EAAS/D,OACxDyJ,aAAa,EAAK3L,MAAMwK,gBACxB,EAAKf,mBAEoB,oBAAlBxD,EAAS7D,OAChB6D,EAAS1D,QAAT,UAAsB,EAAKvC,MAAMmG,aAAa1G,aAAa8B,eAAeqK,mBACtE3F,EAAS/D,OAAS,EAAKC,WACzB0I,EAAWgB,UAAY,IAEzB,EAAKC,yBAAyB,EAAKnB,kBA1BlC,MA4BiC,EAAK3K,MAAnC+L,EA5BH,EA4BGA,SAAUC,EA5Bb,EA4BaA,gBACZ/F,GAAU8F,EAASE,KAAKhG,GAC5B+F,EAAkB,EAAKE,oBACvB,EAAKpM,SAAS,CAAEiM,WAAUC,oBACtB/F,EAASkG,mBAAqBlG,EAASmG,oBACzC,EAAKtM,SAAS,CAAEuM,yBAAyB,EAAMC,wBAAyBrG,EAASmG,qBAE/EnG,EAAS/D,OAAS,EAAKlC,MAAMmC,WAC/B0I,EAAWgB,UAAY,IAI3B,EAAKpB,eA1KY,EAgLnBqB,yBAhLmB,uCAgLQ,WAAOnB,GAAP,qBAAAzN,EAAA,6DAErBqP,EAAc,GAEhBA,EADmD,YAAjD,EAAKvM,MAAMmG,aAAa9H,cAAcwJ,OAC1B,EAAK7H,MAAMmG,aAAa9H,cAAcM,oBAAoBoF,KAAI,SAAAyI,GAC1E,MAAO,CAAEC,MAAOD,EAAMzF,MAAOqB,MAAO,EAAKpI,MAAM0M,IAAEC,UAAUH,EAAMzF,YAIrD,CACZ,CAAE0F,MAAO,OAAQrE,MAAO,EAAKpI,MAAMmC,WAGnCwB,EAAS,CACXhB,SAAS,EACTD,WAAY,EAAK1C,MAAM6J,YACvBjD,KAAM,EAAK5G,MAAMmC,SACjBmG,MAAO,EAAKtI,MAAMsI,MAClBsE,MAAO,EAAK5M,MAAM4M,MAClBC,oBAAqBN,EACrBjN,sBAAuB,EAAKU,MAAMmG,aAAa9G,eAG7ClC,EAvBqB,gBAuBJ,EAAK6C,MAAMmG,aAAa/H,eAvBpB,sCAwBT,IAAI5B,GAAMgB,KAAKL,EAAOwG,GAxBb,OAwBrBtG,EAxBqB,OAyBzBsN,EAAgBtN,GAzBS,2CAhLR,wDAuNnBoK,wBAA0B,SAAC5H,GACzB,EAAKiN,YAAYjN,EAAEK,OAAO2L,YAxNT,EA2NnBiB,YAAc,WAAoB,IAAnBC,EAAkB,uDAAP,GAIxB,GAHwB,IAApBA,EAAS9I,SACX8I,EAAW,EAAK/M,MAAMsC,YAEpByK,EAAS9I,OAAS,EAAG,CACvB,IAAIxB,EAAM,EAAKzC,MAAMgN,eAAe1K,WAAWyK,EAAU,KAAM,EAAK/M,MAAMmG,aAAatH,gBACnF1B,EAAQ,EAAK8P,eACjB,IAAIzQ,GAAMgB,KAAKL,EAAOsF,GACtB,EAAK3C,SAAS,CAAEwC,WAAY,OAnOb,EAyOnB2K,YAAc,WACZ,OAAO,EAAKjN,MAAM6J,YAAc,aA1Of,EA6OnBY,WAAa,WACP,EAAKyC,uBACP,EAAKA,sBAAsBC,eAAe,CAAEC,SAAU,SAAUC,MAAO,MAAOC,OAAQ,aA/OvE,EAmPnBC,eAAiB,WACf,IAAI,EAAKvN,MAAMwN,SAAf,CACA,EAAK1N,SAAS,CAAE0N,UAAU,IAC1B,IAAI/K,EAAM,EAAKzC,MAAMgN,eAAepK,cAChCzF,EAAQ,EAAK8P,eACjB,IAAIzQ,GAAMgB,KAAKL,EAAOsF,GAEtB,OADiB,OAzPA,EA6PnB+F,SA7PmB,sBA6PR,4BAAAtL,EAAA,0DACL,EAAK8C,MAAMwJ,aADN,gBAEP,EAAK+D,iBAFE,0BAIH,EAAKvN,MAAM6J,YAJR,uBAKD1M,EALC,gBAKgB,EAAK6C,MAAMmG,aAAa/H,eALxC,kCAKgFqP,mBAAmB,EAAKzN,MAAM6J,cAL9G,UAMC,IAAIrN,GAAMS,IAAIE,GANf,2CA7PQ,EAuQnBuQ,qBAAuB,WAErB,OAAO,EAAK1N,MAAM6J,YAAc,mBAzQf,EA4QnB8D,eAAiB,WACf,IAAIlL,EAAM,EAAKzC,MAAMgN,eAAe1K,WAAW,mBAC3CnF,EAAQ,EAAKuQ,wBACjB,IAAIlR,GAAMgB,KAAKL,EAAOsF,IA/QL,EAkRnBmL,WAAa,SAAC1F,GAEI,KADFA,EAAM2F,SAElB,EAAKF,kBArRU,EA0RnBG,cAAgB,SAAC5F,GACf,EAAKuB,kBACL,EAAKqD,eA5RY,EA+RnBhM,UA/RmB,uCA+RP,WAAOjB,GAAP,+BAAA3C,EAAA,6DACN2C,GACFA,EAAEkO,iBAEAnH,EAAO,YAC0C,YAAjD,EAAK5G,MAAMmG,aAAa9H,cAAcwJ,SACxCjB,EAAO,EAAK5G,MAAM0M,IAAEC,UAAF,UAAY,EAAK3M,MAAMmG,aAAa9H,cAAcM,oBAAoB,UAAtE,aAAY,EAA8DoI,SAE9F,EAAKjH,SAAS,CACZkO,iBAAiB,EACjBC,UAAU,EACV9L,SAAU,EAAKnC,MAAMmC,SAAS8B,OAAS,EAAI,EAAKjE,MAAMmC,SAAWyE,EACjEoG,eAAgB,IAAIhL,EAAmB,CACrCG,SAAU,EAAKnC,MAAMmC,SAAS8B,OAAS,EAAI,EAAKjE,MAAMmC,SAAWyE,EACjEnI,QAAS,EAAKuB,MAAM6J,YACpBvB,MAAO,EAAKtI,MAAMsI,MAClBsE,MAAO,EAAK5M,MAAM4M,UAGtB,EAAKjN,MAAMuO,gBAAe,GACtB,EAAKlO,MAAMmG,aAAapH,eAC1B,EAAKqL,6BAEHmC,EAAc,GAEhBA,EADmD,YAAjD,EAAKvM,MAAMmG,aAAa9H,cAAcwJ,OAC1B,EAAK7H,MAAMmG,aAAa9H,cAAcM,oBAAoBoF,KAAI,SAAAyI,GAC1E,MAAO,CAAEC,MAAOD,EAAMzF,MAAOqB,MAAO,EAAKpI,MAAM0M,IAAEC,UAAUH,EAAMzF,YAIrD,CACZ,CAAE0F,MAAO,OAAQrE,MAAOxB,IAGxBjD,EAAS,CACXhB,QAAS,EAAK3C,MAAMmG,aAAatH,eACjC+H,KAAMA,EACN0B,MAAO,EAAKtI,MAAMsI,MAClBsE,MAAO,EAAK5M,MAAM4M,MAClBC,oBAAqBN,EACrBjN,sBAAuB,EAAKU,MAAMmG,aAAa9G,eAG7ClC,EA3CM,eA2CU,EAAK6C,MAAMmG,aAAa/H,eA3ClC,6BA4CM,IAAI5B,GAAMgB,KAAKL,EAAOwG,GA5C5B,QA4CNtG,EA5CM,OA8CN,EAAK2C,MAAMmG,aAAanH,WAAWiF,OAAS,IAC1CxB,EAAM,EAAKzC,MAAMgN,eAAe1K,WAAW,EAAKtC,MAAMmG,aAAanH,WAAY,UAAW,EAAKgB,MAAMmG,aAAatH,eAAgB,EAAKmB,MAAMmG,aAAa9H,cAAc8P,WACxK,EAAKnO,MAAMmG,aAAatH,gBAAkB,EAAKmB,MAAMmG,aAAa9H,cAAc+P,yBAClF3L,EAAI2E,eAAiB,EAAKpH,MAAMmG,aAAa9H,cAAcO,qBAAqBmF,KAAI,SAAAsD,GAAQ,MAAM,CAAEjD,KAAMiD,EAAIN,WAE5GsH,EAAU3G,IACdjF,EAAIkF,UAAY0G,IAAUzG,QAAQC,UAC9ByG,EAAO,EAAKtO,MAAM+L,UACjBE,KAAKxJ,GACV,EAAK3C,SAAS,CAAEiM,SAAUuC,KAE5B,EAAK3O,MAAM4O,iBACX,EAAKhF,sBAAsBlM,GA1DjB,4CA/RO,wDA4VnBoM,gBAAkB,SAACvB,GAAW,IAAD,EAC6C,GAAnE,EAAKlI,MAAMwJ,eAAZ,UAA4B,EAAKxJ,MAAMmG,oBAAvC,aAA4B,EAAyBpH,gBACvD,EAAKe,SAAS,CAAE0O,yBAAyB,KACpC,EAAKxO,MAAMwJ,eAAZ,UAA4B,EAAKxJ,MAAMmG,oBAAvC,aAA4B,EAAyBpH,gBACvD,EAAKe,SAAS,CAAE0O,yBAAyB,KAI3C,EAAK1O,SAAS,CAAE0O,yBAAyB,KApW1B,EAqXnBC,iBAAmB,aArXA,EAwXnBxG,aAAe,SAACC,EAAOC,GACrB,IAAInI,EAAQ,EAAKA,MAEjBA,EADgBkI,EAAMhI,OAAO0G,MACVsB,EAAMhI,OAAOkI,MAChC,EAAKtI,SAAL,eAAmBE,KA5XF,EA8XnB0O,WAAa,WACX,EAAKC,UAAUC,SA/XE,EAiYnBC,iBAjYmB,uCAiYA,WAAOhP,GAAP,uBAAA3C,EAAA,6DAGb8H,EAAOnF,EAAEK,OAAOyG,MAAM,IAGtBmI,EAAW,IAAIC,UACVC,OAAO,SAAUhK,EAAMA,EAAK4B,MAPpB,UASI,IAAIpK,GAAMwB,SAAS,kBAAmB8Q,GAT1C,OASb/Q,EATa,OAUjB,EAAKiC,MAAMiP,iBAAiBhD,KAAKlO,EAASgF,UACtCN,EAAM,EAAKzC,MAAMgN,eAAelK,YAAY/E,EAASgF,SAAUhF,EAASiF,WACxE7F,EAAQ,EAAK8P,eACjB,IAAIzQ,GAAMgB,KAAKL,EAAOsF,GAbL,4CAjYA,wDAkZnByM,oBAAsB,WACpB,EAAKpP,SAAS,CAAEqP,yBAAyB,KAnZxB,EAqZnBjD,kBAAoB,WAClB,IAAIxD,EAAa,GA+BjB,OA9BA,EAAK1I,MAAM+L,SAASlI,SAAQ,SAAAtB,GAC1B,IAAI6M,EAAYnM,EAoBhB,GAnBGV,GAAWA,EAAQA,UACtBmG,GAAc0G,EAAU5L,kBAAV,OAA4BjB,QAA5B,IAA4BA,OAA5B,EAA4BA,EAASA,SACnDmG,GAAc,MAEVnG,GAAWA,EAAQoE,OACrBpE,EAAQoE,MAAM9C,SAAQ,SAAAmB,GACpB0D,GAAc1D,EAAK5B,IACnBsF,GAAc,QAGdnG,GAAWA,EAAQ6E,gBACrB7E,EAAQ6E,eAAevD,SAAQ,SAAAwD,GAC7BqB,GAAcrB,EAAIjD,KACfiD,EAAIE,YAAcF,EAAIE,WAAWtD,OAAS,IAC3CyE,GAAU,YAAUrB,EAAIE,WAAd,OAEZmB,GAAc,QAGdnG,GAA4B,SAAjBA,EAAQH,KAAiB,CACtC,IAAIiN,EAAU3H,IACdgB,GAAc2G,EAAQ9M,EAAQoF,UAAYpF,EAAQoF,UAAY,IAAIC,QAAQC,OAAO,kBACjFa,GAAc,KACdA,GAAcnG,EAAQL,KACtBwG,GAAc,KAEhBA,GAAc,QAETA,GArbU,EAwbnB3H,aAAe,WACb,EAAKuO,aAAaV,SAzbD,EA4bnBW,aA5bmB,sBA4bJ,sDAAArS,EAAA,6DAAOsS,EAAP,gCAA2B3I,EAA3B,+BAAsC,GAAI4I,EAA1C,+BAAgD,GAAI1I,EAApD,+BAA0D,IACjE2I,EAAY,IACT,WAAiB,EAAK1P,MAAM6J,YACrC6F,EAAS,iBAAuB,EAAK1P,MAAMmG,aAAa/H,eACxDsR,EAAS,oBAA0B,GACnCA,EAAS,oBAAwB,GAAK,GACtCA,EAAS,oBAAwB,GAAjC,MAA+C3I,EAC/C2I,EAAS,oBAAwB,GAAjC,aAAsD,OAClD,EAAK1P,MAAMsM,wBAAwBrI,OAAS,GAAsB,IAAjB8C,EAAM9C,SACzDyL,EAAS,oBAAwB,GAAjC,MAA+C,EAAK1P,MAAMsM,yBAE5DoD,EAAS,oBAAwB,GAAjC,GAA4C,WAC5CA,EAAS,oBAAwB,GAAjC,KAA8C,EAAK1P,MAAMmC,SACzDuN,EAAS,wBAA8B,EAAK1P,MAAMiP,iBAC9C,EAAKjP,MAAMsI,MAAMrE,OAAS,IAAGyL,EAAS,oBAAwB,GAAjC,KAA8C,EAAK1P,MAAMsI,OACtFI,EAAa,GACoC,YAAjD,EAAK1I,MAAMmG,aAAa9H,cAAcwJ,OACxC,EAAK7H,MAAMmG,aAAa9H,cAAcM,oBAAoBkF,SAAQ,SAAA2I,GAChE9D,GAAU,UAAO8D,EAAMzF,MAAb,cAAwB,EAAK/G,MAAM0M,IAAEC,UAAUH,EAAMzF,QAArD,SAIZ2B,GAAU,iBAAc,EAAK1I,MAAMmC,SAAzB,MAEZuG,GAAU,KACP,EAAK1I,MAAMsC,WAAW2B,OAAS,IAC5BxB,EAAM,EAAKzC,MAAMgN,eAAe1K,WAAW,EAAKtC,MAAMsC,YACzC,EAAKtC,MAAjB+L,SACIE,KAAKxJ,IAEhBiG,GAAc,EAAKwD,qBACD,IAAfsD,IACD9G,GAAU,UAAQ,EAAK1I,MAAMmG,aAAa1G,aAAa8B,eAAeoO,cAAcC,cAA1E,QACV/I,EAAShD,SAAQ,SAAAiD,GACf4B,GAAU,UAAO5B,EAAQC,MAAf,oCAAgDD,EAAQ+I,SAAxD,0CAAkG/I,EAAQgJ,UAA1G,OAAqHhJ,EAAQiJ,MAA7H,SAEZrH,GAAU,mBAAgB7B,EAAS,GAAGiJ,UAA5B,OAAuCL,EAAvC,OAIZC,EAAS,oBAAwB,GAAjC,YAAqDhH,EACrDgH,EAAS,KAAW,OACdtM,EAAM,8BA1CC,WA2CP,IAAI5G,GAAMgB,KAAK4F,EAAKsM,GA3Cb,QA4Cb,EAAK5P,SAAS,CAAEuM,yBAAyB,EAAOC,wBAAyB,KACzE,EAAK9D,YACa,IAAfgH,GACD,EAAK7P,MAAMa,OA/CA,4CA5bI,EA+enBwP,gBAAkB,WAChB,EAAKlQ,SAAS,CAAEmQ,cAAe,KA9e/B,EAAKjQ,MAAQ,CACX6J,YAAa,KACbC,WAAY,KACZoG,iBAAkBzT,SAASqO,eAAe,aAC1C3I,SAAU,GACVmG,MAAO,GACPsE,MAAO,GACPI,eAAgB,IAAIhL,EAAmB,CAAEG,SAAU,EAAKA,SAAU1D,QAAS,EAAKoL,YAAavB,MAAO,EAAKA,MAAOsE,MAAO,EAAKA,QAC5HY,UAAU,EACVzC,aAAa,EACbvB,cAAc,EACd8B,YAAa,EACbd,eAAgB,EAChB2F,SAAS,EACTpE,SAAU,GACVqE,gBAAiB,GACjBjK,aAAc,GACd6H,iBAAiB,EACjBC,UAAU,EACV3L,WAAY,GACZkM,yBAAyB,EACzB6B,qBAAqB,EACrB3F,mBAAmB,EACnBgB,UAAW,GACXyD,yBAAyB,EACzBnD,gBAAiB,GACjBK,yBAAyB,EACzBC,wBAAyB,GACzB2C,iBAAkB,GAClBgB,cAAc,GA/BC,E,qDAkCnB,WAAqB,IAAD,OAClB,GAAKpT,KAAK8C,MAAMwG,gBAAiBtJ,KAAK8C,MAAMwG,cAAgE,IAAhDmK,OAAOC,KAAK1T,KAAK8C,MAAMwG,cAAclC,QAAjG,CAGA,IAAIuM,EAAO3T,KAAK8C,MAAMwG,aAEtBtJ,KAAKiD,SAAS,CAAEoQ,iBAAkBzT,SAASqO,eAAe,eAC1DjO,KAAKiD,SAAS,CAAEqG,aAAcqK,GAA9B,sBAAsC,sBAAAtT,EAAA,yDACiB,YAAjD,EAAK8C,MAAMmG,aAAa9H,cAAcwJ,QAA6F,IAArE,EAAK7H,MAAMmG,aAAa9H,cAAcM,oBAAoBsF,OADxF,gCAE5B,EAAKnD,YAFuB,4CAMtCjE,KAAK4M,qB,yBA8JP,SAAY7C,GACLA,IACHA,EAAO,aAET/J,KAAKiD,SAAS,CAAEqC,SAAUyE,IAC1B,IAAI6J,EAAa5T,KAAKmD,MAAMgN,eAC5ByD,EAAWvO,KAAO0E,EAClB/J,KAAKiD,SAAS,CAAEkN,eAAgByD,M,sBAoJlC,WACEhU,SAASqO,eAAe,oBAAoB3K,MAAMuQ,OAAS,MAChCjU,SAASqO,eAAe,0BACvBrO,SAASkU,uBAAuB,iBAAiB1M,OAAS,IACpFxH,SAASqO,eAAe,yBAAyB3K,MAAMsB,QAAU,SAEnEhF,SAASqO,eAAe,yBAAyB8F,UAAUC,OAAO,QACjDpU,SAASqO,eAAe,0BAC9BgG,QAAUjU,KAAKkU,eAAeC,KAAKnU,MAC9CA,KAAKiD,SAAS,CAAEoQ,iBAAkBzT,SAASqO,eAAe,uBAC1DjO,KAAKiD,SAAS,CAAEmR,WAAW,M,oBAiI7B,WAAU,IAAD,mBACP,IAAKpU,KAAKmD,MAAMmG,aACd,OAAO,KAFF,MAI2CtJ,KAAKmD,MAA/CmG,EAJD,EAICA,aAAcqI,EAJf,EAIeA,wBACdzC,EAAalP,KAAKmD,MAAlB+L,SAEJmF,EAAc,GAWlB,MAV2C,aAAvC,UAAA/K,EAAa9H,qBAAb,eAA4BwJ,SAC9B1B,EAAa9H,cAAcM,oBAAoBkF,SAAQ,SAAC2I,EAAOhI,GACzDA,EAAQ,GACV0M,EAAYjF,KAAK,EAAKjM,MAAM0M,IAAEC,UAAUH,EAAMzF,YASlD,sBAAK7F,GAAG,yBAAyBD,UAAU,iBAA3C,UACKpE,KAAKmD,MAAMiQ,aAAgB,sBAAK9P,MAAO,CAACgR,UAAW,SAAUC,SAAU,OAAQC,WAAY,OAAhE,cAAyE,cAAC,EAAD,CAAMjN,KAAM+B,EAAa1G,aAAa8B,eAAeoO,cAAc2B,mBAA5I,OAA4K,gCAC1M,qBAAKpQ,GAAG,8BAA8BD,UAAU,YAAYd,MAAO,CAAEsB,QAAkC,KAAzB5E,KAAKmD,MAAM0L,UAAmB,OAAS,QAASxM,MAAOrC,KAAK8C,MAAMwG,aAAahH,WAAYkB,gBAAiBxD,KAAK8C,MAAMwG,aAAajH,OAAlN,SACE,qBAAK+B,UAAU,iBAAiBC,GAAG,2BAAnC,SAA+DrE,KAAKmD,MAAM0L,cAGlC,aAA5B,OAAZvF,QAAY,IAAZA,GAAA,UAAAA,EAAc9H,qBAAd,eAA6BwJ,UAAoC,OAAZ1B,QAAY,IAAZA,OAAA,EAAAA,EAAc9H,cAAcM,oBAAoBsF,QAAS,EAC5G,qBAAK/C,GAAG,wBAAwBD,UAAU,aAAad,MAAO,CAAEsB,QAAS5E,KAAKmD,MAAMgO,gBAAkB,QAAU,QAAhH,SACE,uBAAM/M,UAAU,mDAAmDsQ,SAAQ,uCAAE,WAAOrJ,GAAP,SAAAhL,EAAA,sEAAyB,EAAK4D,UAAUoH,GAAxC,2CAAF,sDAA3E,UACE,qBAAK/H,MAAO,CAAEqR,UAAW,QAASC,SAAU,OAAQC,UAAW,SAA/D,gBACGvL,QADH,IACGA,OADH,EACGA,EAAc9H,cAAcM,oBAAoBoF,KAAI,SAACyI,EAAOhI,GAC3D,OAAQ,gCAAqC,gCAAQgI,EAAMzF,QACzD,uBAAO3E,KAAMoK,EAAMmF,WAAYC,UAAQ,EAAC3Q,UAAU,qBAAqBmH,MAAO,EAAKpI,MAAM0M,IAAEC,UAAUH,EAAMzF,SAAW,GAAIH,KAAM8F,IAAEC,UAAUH,EAAMzF,OAAQ8B,SAAU,EAAKZ,aAAc/G,GAAG,0BADpL,yBAA4BsD,SAMxC,sBAAKrE,MAAO,CAAEgR,UAAW,SAAUU,aAAc,QAAjD,UACE,8BACE,uBAAOzP,KAAK,SAASlB,GAAG,gCAAgCD,UAAU,4BAA4BmH,MAAOjC,EAAa1G,aAAa8B,eAAeuQ,WAAY3R,MAAO,CAAEE,gBAAiBxD,KAAK8C,MAAMwG,aAAajH,MAAOA,MAAOrC,KAAK8C,MAAMwG,aAAahH,gBAEpP,8CACa,mBAAGoH,KAAK,sBAAsBrG,OAAO,SAASoG,IAAI,aAAlD,qCAKjB,KAELzJ,KAAKmD,MAAMmP,wBAA2B,cAAC,EAAD,CAAiBhJ,aAAcA,EAAcwC,QAASxC,EAAajH,MAAOwJ,WAAY7L,KAAKmD,MAAMgM,gBAAiBxD,SAAU,WAAQ,EAAK7I,MAAMa,OAAQ,EAAKgI,YAAe1H,UAAW,kBAAM,EAAKnB,MAAMmB,eAC5O,sBAAKG,WAA0C,IAA/BpE,KAAKmD,MAAMgO,gBAA4B,GAAK,SAA5D,UAEE,sBAAK9M,GAAG,oBAAoBD,UAAU,iBAAtC,UAC2C,aAA5B,OAAZkF,QAAY,IAAZA,GAAA,UAAAA,EAAc9H,qBAAd,eAA6BwJ,UAAoC,OAAZ1B,QAAY,IAAZA,OAAA,EAAAA,EAAc9H,cAAcM,oBAAoBsF,QAAS,EAC7G,KACE,GACJ,qBAAK9D,MAAO,CAAEsB,QAAS5E,KAAKmD,MAAMiO,SAAW,QAAU,QAAU/M,GAAG,YAAY6Q,IAAK,SAACC,GAAS,EAAK9E,sBAAwB8E,GAA5H,SAEInV,KAAKmD,MAAM0K,kBACT,sBAAKzJ,UAAU,QAAf,UAAwBkF,EAAa1G,aAAa8B,eAAe0Q,mBAAmB,oBAAG1L,KAAK,IAAIpF,QAAStE,KAAK8C,MAAM4K,wBAAyBrJ,GAAG,mCAA5D,cAAiGiF,EAAa1G,aAAa8B,eAAe2Q,gCAG9N,8BAEInG,EAAShI,KAAI,SAACxB,EAASiC,GACrB,OACE,cAAC,EAAD,CACEyB,SAAU1D,EACV2E,kBAAmB,EAAKvH,MAAMuH,kBAC9Bd,QAAS7D,EAAQL,OAAS,EAAKlC,MAAMmC,SAAW,QAAU,QAC1D4D,SAAU,EAAK/F,MAAMmC,SACrBsF,wBAAyB,EAAKA,wBAC9BT,UAAW,SAACF,GAAc,EAAKnH,MAAMqH,UAAUF,IAC/CX,aAAcA,EACd2B,SAAUoJ,GARE1M,aAmB9B,qBAAKtD,GAAG,yBAAyBD,UAAU,eAA3C,eACA,sBAAKC,GAAG,sBAAsBD,UAAU,aAAad,MAAO,CAAEsB,QAAS5E,KAAKmD,MAAMiO,SAAW,QAAU,QAAvG,UACE,sBAAKhN,UAAU,YAAf,UACE,qBAAKA,UAAU,cAAf,SACE,6BACEC,GAAG,2BACHkH,MAAOvL,KAAKmD,MAAMsC,WAClB6P,SAAU3D,EACV5H,KAAK,aACLiC,SAAUhM,KAAKoL,aACfhH,UAAU,yBACV6H,YAAW,OAAE3C,QAAF,IAAEA,GAAF,UAAEA,EAAc1G,oBAAhB,aAAE,EAA4B8B,eAAe6Q,aACxDxE,WAAY,SAAC1F,GACY,KAAnBA,EAAMmK,UACRnK,EAAM6F,iBACN,EAAKD,iBAGL,EAAKF,WAAW1F,KAdtB,2BAiBYrL,KAAKmD,MAAMwO,yBAjBvB,qBAkBO,KAlBP,MAoBF,qBAAKvN,UAAU,eAAf,SACE,mBACEA,UAAS,iCAA4BpE,KAAKmD,MAAMsC,WAAW2B,OAAS,EAAI,GAAK,YAC7E9C,QAAStE,KAAKiR,cACd3N,MAAO,CAAEE,gBAAiBxD,KAAK8C,MAAMwG,aAAajH,MAAOA,MAAOrC,KAAK8C,MAAMwG,aAAahH,YAH1F,SAIE,sBAAM8B,UAAU,sBAItB,qBAAKA,UAAU,iBAAf,SACE,qBAAKA,UAAU,YAAf,SACE,yBAAQC,GAAG,uBAAuBC,QAAStE,KAAK0S,aAAcpP,MAAO,CAAEmS,WAAYzV,KAAKmD,MAAMqM,wBAA0B,UAAY,UAApI,cAAkJxP,KAAKmD,MAAMsM,+BAGjK,sBAAKrL,UAAU,kBAAf,UACE,qBAAKA,UAAU,YAAf,SACE,mBAAGE,QAAStE,KAAK6R,WAAYxN,GAAG,qBAAhC,mBAAsDiF,EAAa1G,oBAAnE,aAAsD,EAA2B8B,eAAegR,oBAElG,sBAAKtR,UAAU,aAAf,wBACa,mBAAGsF,KAAK,sBAAsBrG,OAAO,SAASoG,IAAI,aAAanG,MAAO,CAAEqS,YAAa,QAArF,gCAGf,sBAAMtR,GAAG,4BAA4Bf,MAAO,CAAEsB,QAAS,QAAvD,SACE,uBAAOW,KAAK,OAAOlB,GAAG,6BAA6B6Q,IAAK,SAAAU,GAAc,EAAK9D,UAAY8D,GAAa7L,KAAK,SAASiC,SAAUhM,KAAKgS,8BAQzI,mBAAGkD,IAAK,SAAAU,GAAc,EAAKnD,aAAemD,GAAatS,MAAO,CAAEsB,QAAS,QAAU8E,KAAI,wCAAmCkH,mBAAmB5Q,KAAKmD,MAAMgM,kBAAoB3F,SAAS,4B,GAhoBvKxE,aC8FP6Q,E,kDAnGb,WAAY/S,GAAQ,IAAD,8BACjB,cAAMA,IAYRgT,eAAiB,WACf,IAAIC,EAAS,EAAK5S,MAAM4M,MACpBiG,EAAO,EAAK7S,MAAM6S,KAClBC,EAAO,EAAK9S,MAAM8S,KAClBC,EAAW,GACXF,EAAK5O,OAAS,IAChB8O,EAAW,IAAIC,KAAJ,UAAYH,IACnBC,EAAK7O,OAAS,IAChB8O,EAAW,IAAIC,KAAJ,UAAYH,EAAZ,YAAoBC,MAGnC,IAAIxK,EAAQ,EAAKtI,MAAMsI,MACnB/F,EAAU,EAAKvC,MAAMuC,QACrBa,EAAM,SAAW,EAAKzD,MAAMwG,aAAa/H,eAAiB,oBAC9D,IAAI5B,GAAMgB,KAAK4F,EAAK,CAAEwP,OAAQA,EAAQG,SAAUA,EAAUzK,MAAOA,EAAO/F,QAASA,IACjF9F,SAASqO,eAAe,sBAAsBK,UAAY,EAAKxL,MAAMwG,aAAa1G,aAAa8B,eAAe0R,YAC9G,EAAKnT,SAAS,CAACoT,cAAc,KA7BZ,EAiCnBjL,aAAe,SAACC,EAAOC,GACrB,IAAInI,EAAQ,EAAKA,MAEjBA,EADgBkI,EAAMhI,OAAO0G,MACVsB,EAAMhI,OAAOkI,MAChC,EAAKtI,SAAL,eAAmBE,KAnCnB,EAAKA,MAAQ,CACX4M,MAAO,GACPiG,KAAM,GACNC,KAAM,GACNxK,MAAO,GACP/F,QAAS,GACT2Q,cAAc,GARC,E,0CAuCnB,WACE,OACE,qBAAKjS,UAAU,sBAAf,SACEpE,KAAKmD,MAAMkT,aAAe,sBAAK/S,MAAO,CAACgR,UAAW,SAAUC,SAAU,OAAQC,WAAY,OAAhE,cAAyE,cAAC,EAAD,CAAMjN,KAAMvH,KAAK8C,MAAMwG,aAAa1G,aAAa8B,eAAe4R,mBAAzI,OAC5B,uBAAMjS,GAAG,wBAAwBqQ,SAAU1U,KAAK8V,eAAgB1R,UAAU,mDAA1E,UACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,cAAf,SACE,gCAAQpE,KAAK8C,MAAMwG,aAAa1G,aAAa8B,eAAe6R,kBAG9D,sBAAKnS,UAAU,cAAf,UACE,gCACE,qBAAKA,UAAU,mBAAf,SAAmCpE,KAAK8C,MAAMwG,aAAa1G,aAAa8B,eAAe8R,gBACvF,uBAAOjR,KAAK,OAAOyG,SAAUhM,KAAKoL,aAAca,YAAajM,KAAK8C,MAAMwG,aAAa1G,aAAa8B,eAAe8R,cAAezM,KAAK,QAAQ3F,UAAU,gCAAgCmH,MAAOvL,KAAKmD,MAAM4M,MAAO1L,GAAG,6BAA6B0Q,UAAQ,OAE1P,qBAAKzR,MAAO,CAACmT,MAAO,aAGtB,sBAAKrS,UAAU,SAAf,UACE,qBAAKA,UAAU,mBAAf,SAAmCpE,KAAK8C,MAAMwG,aAAa1G,aAAa8B,eAAegS,YACvF,qBAAKpT,MAAO,CAACmT,MAAO,UAEpB,qBAAKnT,MAAO,CAACqT,MAAO,MAAOC,MAAO,OAAQC,UAAW,aAAeC,aAAc,QAAlF,SACE,uBAAOvR,KAAK,OAAOlB,GAAG,wBAAwB0F,KAAK,OAAOwB,MAAOvL,KAAKmD,MAAM6S,KAAMhK,SAAUhM,KAAKoL,iBAGnG,qBAAK9H,MAAO,CAACqT,MAAO,MAAOC,MAAO,OAAQC,UAAW,aAAeC,aAAc,QAAlF,SACE,uBAAOvR,KAAK,OAAOlB,GAAG,wBAAwB0F,KAAK,OAAOwB,MAAOvL,KAAKmD,MAAM8S,KAAMjK,SAAUhM,KAAKoL,iBAInG,qBAAK9H,MAAO,CAACmT,MAAO,aAEtB,sBAAKrS,UAAU,cAAf,UACE,gCAAQpE,KAAK8C,MAAMwG,aAAa1G,aAAa8B,eAAeqS,eAC5D,uBAAOxR,KAAK,QAAQwE,KAAK,QAAQwB,MAAOvL,KAAKmD,MAAMsI,MAAOO,SAAUhM,KAAKoL,aAAca,YAAajM,KAAK8C,MAAMwG,aAAa1G,aAAa8B,eAAewH,kBAAmB9H,UAAU,gCAAgCC,GAAG,mBAAmB0Q,UAAQ,IACnP,uBACA,0BAAUhL,KAAK,UAAUwB,MAAOvL,KAAKmD,MAAMuC,QAASsG,SAAUhM,KAAKoL,aAAca,YAAajM,KAAK8C,MAAMwG,aAAa1G,aAAa8B,eAAeyH,gBAAiB/H,UAAU,eAAegI,KAAK,IAAI/H,GAAG,6BAI1M,sBAAKD,UAAU,aAAf,UACE,qBAAKA,UAAU,kCAAf,SACE,wBAASmB,KAAK,SAASlB,GAAG,kBAAkBD,UAAS,eAAUpE,KAAKmD,MAAM4M,MAAM3I,OAAS,GAAKpH,KAAKmD,MAAMsI,MAAMrE,OAAS,EAAK,GAAK,YAAc9D,MAAO,CAACE,gBAAiBxD,KAAK8C,MAAMwG,aAAajH,OAAjM,SAA2M,sBAAM+B,UAAU,mBAE7N,sBAAKA,UAAU,aAAf,wBACa,mBAAGsF,KAAK,sBAAsBrG,OAAO,SAASoG,IAAI,aAAanG,MAAO,CAACkJ,SAAU,YAAjF,0BACX,qBAAKpI,UAAU,mD,GAvFHY,a,iBCwEXgS,E,kDAzEb,WAAYlU,GAAQ,IAAD,8BACjB,cAAMA,IAMRmU,gBAAkB,SAACC,GACjB,EAAKpU,MAAMmU,gBAAgBC,IARV,EAWnBC,iBAAmB,SAAClN,GAClB,EAAKnH,MAAMqU,iBAAiBlN,IAZX,EAenBmN,iBAAmB,SAACnN,GACdA,EAAQ+I,SAAW,IACrB/I,EAAQ+I,UAAY,EACpB,EAAKlQ,MAAMuU,eAAepN,KAhB5B,EAAK9G,MAAQ,GAFI,E,0CAuBnB,WAAU,IAAD,OACD6G,EAAahK,KAAK8C,MAAlBkH,SACCpH,EAAgB5C,KAAK8C,MAArBF,aAEP,OACE,wBAAOwB,UAAU,uCAAjB,UACE,gCACE,+BACE,oBAAIA,UAAU,WAAd,SAA0BxB,EAAa0U,gBACvC,oBAAIlT,UAAU,uBAAd,SAAsCxB,EAAaoQ,WACnD,oBAAI5O,UAAU,uBAAd,SAAsCxB,EAAasQ,QACnD,oBAAI9O,UAAU,uBAAd,SAAsCxB,EAAa2U,cAIvD,wBAAOlT,GAAG,YAAV,UAEI2F,EAAS9C,KAAI,SAAC+C,EAAStC,GACrB,OAAO,+BACL,oBAAIvD,UAAU,gBAAd,SAA8B,mBAAGsF,KAAK,IAAIpF,QAAS,WAAO,EAAKxB,MAAM0U,WAAWvN,IAAlD,gBAA+DA,QAA/D,IAA+DA,OAA/D,EAA+DA,EAASC,UACtG,oBAAI9F,UAAU,gBAAd,SACE,sBAAKA,UAAU,SAASd,MAAO,CAAEkJ,SAAU,YAA3C,UACE,uBAAMlI,QAAS,kBAAM,EAAK6S,iBAAiBlN,IAA3C,cAAsD,mBAAG7F,UAAU,eAAnE,OACA,uBAAOmB,KAAK,OAAOnB,UAAU,eAAed,MAAO,CAAEqT,MAAO,OAAQtK,OAAQ,WAAad,MAAK,OAAEtB,QAAF,IAAEA,OAAF,EAAEA,EAAS+I,SAAUyE,UAAQ,IAC3H,uBAAMnT,QAAS,kBAAM,EAAK8S,iBAAiBnN,IAA3C,cAAuD,mBAAG7F,UAAU,wBAGxE,qBAAIA,UAAU,4BAAd,iBAA2C6F,QAA3C,IAA2CA,OAA3C,EAA2CA,EAASgJ,SAApD,WAA+DhJ,QAA/D,IAA+DA,OAA/D,EAA+DA,EAASiJ,SACxE,oBAAI9O,UAAU,uBAAd,SACE,wBACEE,QAAS,kBAAM,EAAK2S,gBAAgBhN,IACpC7F,UAAU,kBAFZ,SAE+B,mBAAGA,UAAU,cAAckR,UAAQ,UAbtD3N,MAmBpB,qBAAIvD,UAAU,eAAd,UACE,oBAAIA,UAAU,yBAAyBsT,QAAQ,IAA/C,SACE,mCAAS9U,EAAa+U,MAAtB,KAA+B3X,KAAK8C,MAAM6U,WAE3C,oBAAIvT,UAAU,gC,GAjELY,aCmJP4S,E,kDA/Ib,WAAY9U,GAAQ,IAAD,8BACjB,cAAMA,IAiBRmU,gBAAkB,SAAChN,GAAa,IACxBD,EAAa,EAAK7G,MAAlB6G,SACNA,EAAW6F,IAAEgI,OAAO7N,GAAU,SAACkN,GAC7B,OAAOA,EAAE7S,KAAO4F,EAAQ5F,MAE1B,EAAKpB,SAAS,CAAE+G,aAAY,WACS,IAA/B,EAAK7G,MAAM6G,SAAS5C,QACtB,EAAKtE,MAAMgV,cAEb,EAAKC,eA3BU,EAgCnBC,WAAa,SAACd,GAAO,IACblN,EAAa,EAAK7G,MAAlB6G,SACFC,EAAU4F,IAAEoI,KAAKjO,EAAU,CAAE3F,GAAI6S,EAAE7S,KACvC,GAAI4F,EACFA,EAAQ+I,UAAY,EACpB,EAAKqE,eAAepN,OAEjB,CACHiN,EAAElE,SAAW,EACb,IAAIC,EAAWiE,EAAEjE,SACjBjJ,EAASoF,KAAK8H,GACd,EAAKjU,SAAS,CAAE+G,WAAUiJ,aAAY,kBAAM,EAAK8E,gBA3ClC,EAiDnBA,SAAW,WACT,IAAInF,EAAM,EACJ5I,EAAa,EAAK7G,MAAlB6G,SACN6F,IAAEqI,KAAKlO,GAAU,SAACC,GAChB2I,GAAQ3I,EAAQiJ,MAAQjJ,EAAQ+I,YAElC,EAAK/P,SAAS,CAAE2P,SAvDC,EA0DnByE,eAAiB,SAACpN,GAAa,IACvBD,EAAa,EAAK7G,MAAlB6G,SACFrC,EAAQkI,IAAEsI,UAAUnO,EAAU,CAAE3F,GAAI4F,EAAQ5F,KAChD2F,EAASoO,OAAOzQ,EAAO,EAAGsC,GAC1B,EAAKhH,SAAS,CAAE+G,aAChB,EAAK+N,YA/DY,EAiEnB3M,aAAe,SAACC,GACd,EAAKpI,SAAS,CAAEoV,sBAAuBhN,EAAMhI,OAAOkI,SAhEpD,EAAKpI,MAAQ,CACX6G,SAAU,GACVsO,eAAgB,GAChB1F,IAAK,EACLK,SAAU,MACVvK,WAAW,EACX6P,gBAAiB,GACjBF,sBAAuB,IATR,E,qDAYnB,WACErY,KAAK+X,WADa,IAEZzO,EAAiBtJ,KAAK8C,MAAtBwG,aACNtJ,KAAKmD,MAAMmV,eAAiBhP,EAAa3G,kB,oBAsD3C,WAAU,IAAD,OACDqH,EAAahK,KAAKmD,MAAlB6G,SACEV,EAAiBtJ,KAAK8C,MAAtBwG,aACJjH,EAAQiH,EAAajH,MACrBC,EAAagH,EAAahH,WACtBM,EAAiB0G,EAAjB1G,aACR,OACE,sBAAKyB,GAAG,oBAAoBD,UAAU,WAAtC,UACE,sBAAKA,UAAU,WAAWd,MAAO,CAAEE,gBAAiBnB,GAApD,UACE,uBAAMgC,GAAG,qBAAqBf,MAAO,CAAEjB,MAAOC,GAA9C,cAA8DM,EAAa8B,eAAeoO,cAAc0F,cACxG,sBAAMnU,GAAG,kBAAkBD,UAAU,iDAAiDE,QAAStE,KAAK8C,MAAM2V,WAA1G,SAAsH,mBAAGrU,UAAU,qBAGrI,sBAAKA,UAAU,uDAAf,UACE,qBAAKd,MAAO,CAAEqR,UAAW,QAASC,SAAU,QAA5C,SACE,cAAC,EAAD,CACE5K,SAAUA,EACViN,gBAAiBjX,KAAKiX,gBACtBE,iBAAkBnX,KAAKgY,WACvBX,eAAgBrX,KAAKqX,eACrBM,MAAK,UAAK3X,KAAKmD,MAAM8P,SAAhB,YAA4BjT,KAAKmD,MAAMyP,KAC5ChQ,aAAcA,EAAa8B,eAAeoO,cAC1C0E,WAAYxX,KAAK8C,MAAM0U,eAG3B,sBAAKpT,UAAU,cAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,QAAf,UACE,sCAASxB,EAAaD,gBAAgBuH,SACtC,qBAAK9F,UAAU,UAAUC,GAAG,yBAA5B,SACE,yBAAQD,UAAU,4BAA4B4H,SAAUhM,KAAKoL,aAC3DG,MAAOvL,KAAKmD,MAAMkV,sBADpB,UAEE,wBAAQK,UAAQ,EAACpD,UAAQ,EAAzB,wBACGtV,KAAKmD,MAAMmV,eAAepR,KAAI,SAACtG,EAAQ+G,GACtC,OAAQ,uCAAsB/G,EAAOmJ,OAAhBpC,cAK/B,uBAEA,sBAAKvD,UAAU,QAAf,UACE,sCAASxB,EAAa8B,eAAeoO,cAAc6F,mBACnD,qBAAKvU,UAAU,UAAUC,GAAG,yBAA5B,SACE,yBAAQD,UAAU,4BAAlB,UACE,0CACA,qDAMR,8BACkD,aAA/CkF,EAAa9H,cAAcoX,gBAC1B,yBAAQxU,UAAU,WAAWd,MAAO,CAClCjB,MAAOC,EACPkB,gBAAiBnB,GAFnB,cAGKO,EAAa8B,eAAeoO,cAAc+F,YAE/C,yBAAQzU,UAAU,WAAWd,MAAO,CAClCjB,MAAOC,EACPkB,gBAAiBnB,GAEjBiC,QAAS,kBAAM,EAAKxB,MAAMgW,YAAY,EAAK3V,MAAM6G,SAAU,EAAK7G,MAAMyP,MAJxE,cAKGhQ,EAAa8B,eAAeoO,cAAciG,wB,GAtI1C/T,a,QC6DJgU,E,kDA5DX,WAAYlW,GAAQ,IAAD,8BACf,cAAMA,IAMVyF,YAAc,WACV,EAAKzF,MAAMyF,eANX,EAAKpF,MAAQ,CACTsF,MAAM,GAHK,E,0CAUnB,WAAU,IAAD,OACCwB,EAAYjK,KAAK8C,MAAjBmH,QACN,OACI,mCACI,eAACzB,EAAA,EAAD,CAAOC,KAAMzI,KAAK8C,MAAM2F,KAAME,OAAQ3I,KAAKuI,YAA3C,UACI,cAACC,EAAA,EAAMyQ,OAAP,CAAcC,aAAW,EAAzB,SACI,cAAC1Q,EAAA,EAAM2Q,MAAP,UAAcnZ,KAAK8C,MAAMoH,UAE7B,eAAC1B,EAAA,EAAMI,KAAP,WACI,sBAAKxE,UAAU,sCAAf,UACI,sBAAMA,UAAU,cAAhB,SAA+B6F,EAAQC,QACvC,uBAAM9F,UAAU,YAAhB,UAA6B6F,EAAQgJ,SAArC,IAAgDhJ,EAAQiJ,YAE5D,uBACCjJ,EAAQlC,QAAUkC,EAAQlC,OAAOX,OAAS,GACvC,gCACI,cAAC,EAAD,CACAW,OAAQkC,EAAQlC,OAChBjI,OAAQE,KAAK8C,MAAMhD,SAEnB,0BAIR,sBAAMsE,UAAU,0BAAhB,UACI,8BAAM6F,EAAQmP,cACbnP,EAAQoP,aAAepP,EAAQoP,YAAYjS,OAAS,GAAK,8BACrD6C,EAAQoP,YAAYnS,KAAI,SAACoS,EAAG3R,GACzB,OACI,sBAAMvD,UAAU,OAAhB,SACI,mBAAGA,UAAU,uBAAuBsF,KAAI,UAAK,EAAK5G,MAAMhD,QAAhB,OAAyBwZ,EAAEnR,KAAK5B,KAAOiD,UAAQ,EAAvF,SAA0F8P,EAAEjR,yBASpH,cAACG,EAAA,EAAM+Q,OAAP,UACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYnW,MAAO,CAAEoW,WAAY1Z,KAAK8C,MAAM6W,aAAgBC,KAAK,KAAKtV,QAAStE,KAAKuI,YAApG,SACKvI,KAAK8C,MAAM+W,qB,GApDT7U,aCiNhB8U,E,kDA1Mb,WAAYhX,GAAQ,IAAD,8BACjB,cAAMA,IAmBRiX,wBAA0B,WACxB,EAAK9W,SAAS,CAAE+W,kBAAkB,KArBjB,EAuBnBC,uBAAyB,SAAC/C,GACxB,EAAKjU,SAAS,CAAE+W,kBAAkB,EAAMzB,gBAAiBrB,KAxBxC,EA+CnB7F,eAAiB,SAAC6I,GAChB,EAAKjX,SAAS,CAAEkX,aAAcD,KAhDb,EAkDnBxI,eAAiB,WACV,EAAKvO,MAAMiX,aACd,EAAKnX,SAAS,CAAEmX,aAAa,KApDd,EAuDnB1M,wBAA0B,SAAC1K,GACzB,EAAKC,SAAS,CAAEoX,mBAAmB,IAC/BrX,GAAGA,EAAEkO,kBAzDQ,EA2DnBoJ,eA3DmB,sBA2DF,4BAAAja,EAAA,yDACV,EAAK8C,MAAMoX,iBACd,EAAKtX,SAAS,CAAEsX,iBAAiB,IAE9B,EAAKpX,MAAMqX,WAJD,uBAKTC,EAAY,EAAKtX,MAAMmG,aALd,SAMPmR,EAAUC,cANH,OAOb,EAAKzX,SAAS,CAAEuX,YAAY,EAAMG,cAAc,EAAMrR,aAAcmR,IAEhE,EAAKtX,MAAMiX,aACb,EAAKnX,SAAS,CAAEkX,cAAc,IAE3B,EAAKhX,MAAMyX,WACd,EAAK3X,SAAS,CAAE4X,cAAc,IAbnB,2CA3DE,EA8EnBC,eAAiB,SAAC9X,GAChBA,EAAE+X,kBACE,EAAK5X,MAAMqX,YACb,EAAKvX,SAAS,CAAEuX,YAAY,EAAOG,cAAc,EAAOR,cAAc,EAAOa,UAAU,EAAOH,cAAc,KAjF7F,EAoFnBI,YAAc,WACZ,EAAKhY,SAAS,CAAEsX,iBAAiB,EAAOC,YAAY,EAAOG,cAAc,EAAOR,cAAc,EAAOU,cAAc,EAAOD,WAAW,KArFpH,EAuFnBM,SAAW,SAACvE,EAAOwE,GAQjBhO,OAAOiO,OAAOC,YAAY,CAAE9V,KAAM,iBAAkBoR,QAAOwE,UAAU,MA/FpD,EAiGnB1C,WAAa,WACX,EAAKxV,SAAS,CAAE+X,UAAW,EAAK7X,MAAM6X,YAlGrB,EAoGnB7Q,UAAY,SAACF,GACX,EAAKhH,SAAS,CAAE4X,cAAc,EAAMD,WAAW,IAAS,kBAAM,EAAKU,KAAKtD,WAAW/N,OArGlE,EAuGnBsR,aAAe,WACb,EAAKtY,SAAS,CAAE4X,cAAc,EAAOG,UAAU,EAAOJ,WAAW,KAxGhD,EA0GnBY,iBAAmB,SAACxR,EAAU4I,GAC5B,EAAK6I,QAAQ/I,cAAa,EAAM1I,EAAU4I,EAAK,EAAKzP,MAAMmG,aAAa1G,aAAa8B,eAAeoO,cAAc4I,gBACjH,EAAKD,QAAQtI,kBACb,EAAKlQ,SAAS,CAAE+X,UAAU,EAAOH,cAAc,KA3G/C,EAAK1X,MAAQ,CACXG,MAAO,GACPgG,aAAc,GACd1G,aAAc,GACd+Y,SAAS,EACTxB,cAAc,EACdE,mBAAmB,EACnBG,YAAY,EACZG,cAAc,EACdP,aAAa,EACbG,iBAAiB,EACjBM,cAAc,EACdG,UAAU,EACVJ,WAAW,EACXZ,kBAAkB,EAClBzB,gBAAiB,IAjBF,E,4FA2BnB,gCAAAlY,EAAA,6DACMoN,EAAgB,IAAIpM,EAEpBua,EADYxV,EACUS,aAAasG,OAAOtN,SAAS6J,MACnDmS,EAAmBD,EAAUvX,GACjCoJ,EAAcqO,kBAAkBD,GALlC,SAMQpO,EAAciN,cANtB,uBAOQjN,EAAcsO,kBAPtB,wBAQQtO,EAAcuO,oBARtB,QAUEhc,KAAKiD,SAAS,CACZqG,aAAcmE,EACdkO,SAAS,EACTrY,MAAO,CACLjB,MAAOoL,EAAcnL,WACrBkB,gBAAiBiK,EAAcpL,SAfrC,iD,0EAsFA,WAAU,IAAD,SAC2BrC,KAAKmD,MAA/BmG,EADD,EACCA,aAAcqS,EADf,EACeA,QAClBM,EAAqB,GAQzB,OANI9O,OAAOiO,QACLjO,OAAO+O,YAAc,MACvBD,GAAsB,mBAItBN,EACK,KAGP,qBAAKtX,GAAG,qBAAqBD,UAAW6X,EAAxC,SACE,cAAC,IAAD,CAAqBE,aAAW,EAACC,cAAY,EAAClB,SAAUlb,KAAKkb,SAA7D,SACE,sBAAK7W,GAAG,mBACND,UAAS,mEAE0B,IAA5BpE,KAAKmD,MAAMwX,aAAwB,OAAS,GAF1C,oBADX,UAME,cAAC,EAAD,CACEzQ,MAAOZ,EAAa1G,aAAa8B,eAAeoO,cAAcuJ,gBAC9DxC,QAASvQ,EAAa1G,aAAa8B,eAAeoO,cAAcwJ,MAChE3C,YAAarQ,EAAajH,MAC1B4H,QAASjK,KAAKmD,MAAMoV,gBACpBf,WAAYxX,KAAKia,uBACjB1R,YAAavI,KAAK+Z,wBAClBtR,KAAMzI,KAAKmD,MAAM6W,iBACjBla,OAAQwJ,EAAaxJ,SAEvB,qBAAKsE,UAAU,cAAcd,MAAO,CAAEsB,QAAS5E,KAAKmD,MAAM6X,SAAW,QAAU,QAA/E,UACKhb,KAAKmD,MAAMyX,WAActR,EAAa9H,cAAc+a,YACrD,cAAC,EAAD,CAAMrH,IAAK,SAAAU,GAAc,EAAK0F,KAAO1F,GACjC4B,WAAYxX,KAAKia,uBACjB3Q,aAAcA,EACdwO,YAAa9X,KAAKub,aAClB9C,WAAYzY,KAAKyY,WACjBK,YAAa9Y,KAAKwb,mBACpB,KAGN,sBAAKpX,UAAU,iCAAf,UACE,sBAAKC,GAAG,oBAAoBC,QAAStE,KAAKsa,eAAgBlW,UAAU,WAAWd,MAAOtD,KAAKmD,MAAMG,MAAjG,UACE,8BACE,qBAAKe,GAAG,0BAAR,SACE,qBAAK+D,IAAI,OAAOF,IAAG,UAAKoB,EAAaxJ,OAAlB,YAA4BwJ,EAAa9H,cAAc2G,KAAK5B,WAInF,sBAAMlC,GAAG,qBAAqBf,MAAO,CAAEjB,MAAOiH,EAAahH,YAA3D,SAA0EgH,EAAa9H,cAAcgb,aAErG,sBAAMnY,GAAG,mBAAmBC,QAAStE,KAAKyY,WAAYnV,MAAO,CAAEsB,QAAS5E,KAAKmD,MAAM0X,aAAe,QAAU,OAAQxO,OAAQ,cAAehK,MAAOiH,EAAahH,YAA/J,SACE,mBAAG8B,UAAU,+BAEf,+BACGpE,KAAKmD,MAAMgX,aAAgB,cAAC,EAAD,CAAU5W,SAAUvD,KAAKmD,MAAMG,MAAOV,aAAc0G,EAAa1G,aAAc6Z,aAAczc,KAAKmD,MAAMgX,aAAcxW,KAAM,WAAQ,EAAK8X,QAAQ9P,WAAY,EAAKsP,eAAiBnX,gBAAiB,kBAAM,EAAK2X,QAAQpJ,uBAAuBlO,oBAAqB,WAAQ,EAAKsX,QAAQvX,gBAAmBD,UAAW,kBAAM,EAAKqW,oBAAwB,KAGvX,qBAAKjW,GAAG,wBAAR,SACGrE,KAAKmD,MAAMwX,aACV,sBAAMvW,UAAU,WAAWE,QAAStE,KAAK8a,eAAgBxX,MAAO,CAAEjB,MAAOiH,EAAahH,YAAtF,SAAoG,mBAAG8B,UAAU,+BAA+Bd,MAAO,CAAEoZ,IAAK,MAAOC,KAAM,WACzK,QAGP3c,KAAKmD,MAAMoX,gBACV,qBAAMjX,MAAO,CAAEsB,QAAS5E,KAAKmD,MAAMqX,WAAa,QAAU,QAA1D,SACGxa,KAAKmD,MAAMkX,kBAAqB,cAAC,EAAD,CAAa/Q,aAAcA,EAAcoE,wBAAyB1N,KAAK0N,0BACtG,cAAC,EAAD,CAASwH,IAAK,SAAAU,GAAc,EAAK6F,QAAU7F,GACzCtM,aAAcA,EACde,kBAAmBrK,KAAKia,uBACxB5I,eAAgBrR,KAAKqR,eACrB3D,wBAAyB1N,KAAK0N,wBAC9B/J,KAAM,WAAQ,EAAKsX,eACnBvJ,eAAgB1R,KAAK0R,eACrBzN,UAAW,kBAAM,EAAKqW,kBACtBnQ,UAAW,SAACF,GAAc,EAAKE,UAAUF,QAG7C,iB,GAlMOjF,aCYV4X,E,kDAZb,WAAY9Z,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,GAFI,E,0CAKnB,WACE,OACE,cAAC,EAAD,Q,GARY6B,aCGH6X,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF5d,SAASqO,eAAe,SAM1B4O,M","file":"static/js/main.37f00875.chunk.js","sourcesContent":["const Api = function (options= {}) {\n    \n    // this.serverUrl = process.env.HOST_NAME\n    // this.serverProtocol = process.env.PROTOCOL\n    // this.origin = options.host || 'http://localhost:3000'\n\n    if (document.location.origin.includes(\":300\"))\n    {\n        this.origin = 'http://localhost:3000'\n    }\n    else{\n        this.origin = document.location.origin\n    }\n    \n    this.serverUrl = this.origin + '/api/v1'\n    this.baseUrl = this.serverUrl;\n}\n\nApi.prototype.origin = \"ASdas\"\n\nApi.prototype.get = async function (route = '') {\n    const res = await fetch(`${this.baseUrl}/${route}`)\n    const data = await res.json()\n    if (!data) {\n        return null\n    }\n    else {\n        return data\n    }\n}\nApi.prototype.post = async function (route = '', data = {}) {\n    const response = await fetch(`${this.baseUrl}/${route}`, {\n        method: 'POST',\n        cache: 'no-cache',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data) \n    });\n    return await response.json();\n}\n\nApi.prototype.postFile = async function (route = '', file_data = {}) {\n    const response = await fetch(`${this.baseUrl}/${route}`, {\n        method: 'POST',\n        cache: 'no-cache',\n        body: file_data \n    });\n    return await response.json();\n}\nexport default Api\n\n\n","import Api from \"./Api\";\n\nclass ContaktiChat {\n    constructor(options = {}) {\n        // this.serverProtocol = process.env.PROTOCOL\n        if (document.location.origin.includes(\":300\"))\n        {\n            this.origin = 'http://localhost:3000'\n        }\n        else{\n            this.origin = document.location.origin\n        }\n\n        this.serverUrl = this.origin + '/api/v1'\n        this.locale = 'en';\n        this.serviceChannel = null;\n        this.chat_settings = {};\n        this.url_obj = {\n            serverUrl: this.serverUrl,\n            serverProtocol: this.serverProtocol\n        };\n        this.api = new Api(this.url_obj);\n    }\n    setServiceChannel(channel){\n        this.serviceChannel = channel;\n    }\n\n    async setSettings() {\n        let res = await this.api.get(`chat/${this.serviceChannel}/get_chat_settings`);\n        this.chat_settings = res.settings;\n        this.chat_settings.chat_inquiry_fields = res.chat_inquiry_fields;\n        this.chat_settings.chat_initial_buttons = res.chat_initial_buttons;\n        this.chatBotEnabled = this.chat_settings.enable_chatbot;\n        this.chatWithHuman = !(this.chat_settings.enable_chatbot);\n        this.initialMsg = this.chat_settings.initial_msg;\n        this.color = this.chat_settings.color;\n        this.text_color = this.chat_settings.text_color;\n        this.agents_online = res.agents_online;\n        this.is_ad_finland = res.is_ad_finland_company\n    }\n\n    async setPaymentMethods() {\n        let result = await this.api.get(`chat/${this.serviceChannel}/get_payment_methods`);\n        this.payment_methods = result.payment_methods\n    }\n\n    async setTranslations() {\n        this.translations = await this.api.get(`chat/get_translations`);\n    }\n}\n\nexport default ContaktiChat\n","import React, { Component } from 'react';\n\nclass Dropdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: false,\n      showSendEmail: true,\n      showStart: false,\n      showEndChat: true,\n    }\n  }\n\n\n  // document.onclick = (event){\n  // \tif(!event.target.classList.contains('dropdown-toggle') && !event.target.classList.contains('fa-cog')){\n  // \t\tif(document.querySelector('.dropdown')){\n  // \t\t\tdocument.querySelector('.dropdown').classList.remove(\"open\");\n  // \t\t}\n  // \t}\n  // }\n\n  toggle_dropdown = (e) => {\n    // ele.parentElement.classList.remove(\"close-force\");\n    // e.target.parentNode.classList.toggle(\"open\");\n    this.setState({ expanded: !this.state.expanded });\n  }\n   mouseover = (e) => {\n    e.target.style.color = this.props.styleObj.color;\n    e.target.style.backgroundColor = this.props.styleObj.backgroundColor;\n  }\n  mouseout = (e) => {\n    e.target.style.color = this.props.styleObj.backgroundColor;\n    e.target.style.backgroundColor = this.props.styleObj.color;\n  }\n\n  end = () => {\n    this.props.quit();\n    this.setState({showEndChat: false});\n  }\n\n  sendchatHistory = () =>{\n    this.toggle_dropdown();\n    this.props.sendChatHistory();\n    this.setState({showSendEmail: false, showStart: true});\n  }\n\n  startChat =  async() =>{\n    this.setState({showStart: false});\n    await this.props.quit();\n    await this.props.startChat();\n  }\n\n  downloadChat = () => {\n    this.props.downloadChatHistory();\n  }\n\n\n  // mouseoverdownload(e) {\n  //   var x = document.getElementById(\"download_chat_history\");\n  //   x.style.color = document.getElementById('contakti-user-name').style.color;\n  //   x.style.backgroundColor = document.getElementById('contakti-msg-head').style.backgroundColor;\n  // }\n\n  // mouseoutdownload(e) {\n  //   var x = document.getElementById(\"download_chat_history\");\n  //   x.style.color = document.getElementById('contakti-msg-head').style.backgroundColor;\n  //   x.style.backgroundColor = document.getElementById('contakti-user-name').style.color;\n  // }\n\n  // mouseoversend(e) {\n  //   var y = document.getElementById(\"send_chat_history\");\n  //   y.style.color = document.getElementById('contakti-user-name').style.color;\n  //   y.style.backgroundColor = document.getElementById('contakti-msg-head').style.backgroundColor;\n  // }\n\n  // mouseoutsend(e) {\n  //   var y = document.getElementById(\"send_chat_history\");\n  //   y.style.color = document.getElementById('contakti-msg-head').style.backgroundColor;\n  //   y.style.backgroundColor = document.getElementById('contakti-user-name').style.color;\n  // }\n\n  // mouseovercancel(e) {\n  //   var z = document.getElementById(\"contakti-msg-close-chat\");\n  //   z.style.color = document.getElementById('contakti-user-name').style.color;\n  //   z.style.backgroundColor = document.getElementById('contakti-msg-head').style.backgroundColor;\n  // }\n\n  // mouseoutcancel(e) {\n  //   var z = document.getElementById(\"contakti-msg-close-chat\");\n  //   z.style.color = document.getElementById('contakti-msg-head').style.backgroundColor;\n  //   z.style.backgroundColor = document.getElementById('contakti-user-name').style.color;\n  // }\n\n  // mouseoverstart(e) {\n  //   var z = document.getElementById(\"contakti-msg-start-chat\");\n  //   z.style.color = document.getElementById('contakti-user-name').style.color;\n  //   z.style.backgroundColor = document.getElementById('contakti-msg-head').style.backgroundColor;\n  // }\n\n  // mouseoutstart(e) {\n  //   var z = document.getElementById(\"contakti-msg-start-chat\");\n  //   z.style.color = document.getElementById('contakti-msg-head').style.backgroundColor;\n  //   z.style.backgroundColor = document.getElementById('contakti-user-name').style.color;\n  // }\n\n\n\n\n\n  render() {\n    const {translations} = this.props\n    return (\n      <div className=\"dropdown chat-setting d--inline-block\" id=\"chat-setting-dropdown\" >\n        <button\n         style={{ color: this.props.styleObj.color }}\n          className=\"dropdown-toggle\"\n          onClick={this.toggle_dropdown}\n        >\n          <i className=\"fa fa-cog\"></i></button>\n\n        <ul className=\"chatsetting-dropdown-menu\" hidden={this.state.expanded ? false : true } id=\"chat-setting-dropdown-menu\">\n          <li>\n            <a id=\"download_chat_history\" style={{color: this.props.styleObj.backgroundColor, backgroundColor: this.props.styleObj.color }} onClick={this.downloadChat}  onMouseOver={this.mouseover} onMouseOut={this.mouseout}>\n             {translations.user_dashboard.download_txt_file}\n            </a>\n          </li>\n          <li>\n            <a id=\"send_chat_history\" style={{ display:this.state.showSendEmail? \"block\": \"none\", color: this.props.styleObj.backgroundColor, backgroundColor: this.props.styleObj.color }} onClick={this.sendchatHistory} onMouseOver={this.mouseover} onMouseOut={this.mouseout}>\n            {translations.user_dashboard.send_to_email}\n            </a>\n          </li>\n          <li>\n            <a id=\"contakti-msg-close-chat\" onClick={this.end} style={{ display:this.state.showEndChat? \"block\": \"none\" , color: this.props.styleObj.backgroundColor, backgroundColor: this.props.styleObj.color }} onMouseOver={this.mouseover} onMouseOut={this.mouseout}>\n            {translations.user_dashboard.end_chat}\n            </a>\n            <a id=\"contakti-msg-start-chat\" style={{ display:this.state.showStart? \"block\": \"none\", color: this.props.styleObj.backgroundColor, backgroundColor: this.props.styleObj.color }} onClick={this.startChat} onMouseOver={this.mouseover} onMouseOut={this.mouseout}>\n            {translations.user_dashboard.start_new_chat}\n            </a>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Dropdown;","const ChatMessage = function() {\n\n};\n\nChatMessage.prototype.asJSON = function() {\n    return JSON.stringify(this);\n};\nconst ChatMessageFactory = function(options) {\n    this.from = options.username;\n    this.channel = options.channel;\n    this.type = 'message';\n\n};\n\nChatMessageFactory.prototype.initialise = function() {\n\n}\nChatMessageFactory.prototype.newMessage = function(message, type, chatBot = false, from) {\n    var msg = new ChatMessage();\n    msg.from = from || this.from;\n    msg.channel_id = this.channel;\n    msg.type = type || this.type;\n    msg.chatbot = chatBot;\n    msg.message = message;\n    return msg;\n};\n\nChatMessageFactory.prototype.quitMessage = function() {\n    var msg = new ChatMessage();\n    msg.from = this.from;\n    msg.channel_id = this.channel;\n    msg.type = 'quit';\n    msg.message = 'Quitting.';\n    return msg;\n};\n\nChatMessageFactory.prototype.botToHumanSwitchMessage = function() {\n    var msg = new ChatMessage();\n    msg.from = this.from;\n    msg.channel_id = this.channel;\n    msg.type = 'botToHuman';\n    msg.message = 'Requesting human..';\n    return msg;\n};\n\n\nChatMessageFactory.prototype.fileMessage = function(file_url, file_path) {\n    var msg = new ChatMessage();\n    msg.from = this.from;\n    msg.channel_id = this.channel;\n    msg.type = 'file';\n    msg.message = file_url;\n    msg.file_path = file_path;\n    return msg;\n};\n\n\nexport default ChatMessageFactory","class ChatUtils {\n  static replaceURLs = (message) => {\n    if (!message) return '';\n    var urlRegex = /(((https?:\\/\\/)|(www\\.))[^\\s]+)/g;\n    let new_message = message.replace(urlRegex, function (url) {\n      var hyperlink = url;\n      if (!hyperlink.match('^https?:\\/\\/')) {\n        hyperlink = 'http://' + hyperlink;\n      }\n      return '<a href=\"' + hyperlink + '\" target=\"_blank\" rel=\"noopener noreferrer\">' + url + '</a>'\n    });\n\n    return new_message;\n  }\n\n  static replaceAllNewLines = (message) => {\n    if (!message) return '';\n    return message.replace(/\\n/g, '<br/>');\n  }\n\n  static convertHtmlToText = (html) => {\n    html = html.replace(/<style([\\s\\S]*?)<\\/style>/gi, '');\n    html = html.replace(/<script([\\s\\S]*?)<\\/script>/gi, '');\n    html = html.replace(/<\\/div>/ig, '\\n');\n    html = html.replace(/<\\/li>/ig, '\\n');\n    html = html.replace(/<li>/ig, '  *  ');\n    html = html.replace(/<\\/ul>/ig, '\\n');\n    html = html.replace(/<\\/p>/ig, '\\n');\n    html = html.replace(/<br\\s*[\\/]?>/gi, \"\\n\");\n    html = html.replace(/<[^>]+>/ig, '');\n    return html\n  }\n\n  static getUrlParams = (url) => {\n    var params = {};\n    (url + '?').split('?')[1].split('&').forEach(\n      function (pair) {\n        pair = (pair + '=').split('=').map(decodeURIComponent);\n        if (pair[0].length) {\n          params[pair[0]] = pair[1];\n        }\n      });\n\n    return params;\n  }\n};\n\nexport default ChatUtils","import parse from 'html-react-parser';\n\nconst Text = (props) => {\n    return parse(props.text)\n}\n \nexport default Text;","import React, { Component } from 'react';\nimport { Carousel } from 'react-bootstrap';\nclass CarouselWrapper extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { index: 0}\n    }\n    componentDidMount(){\n        let activeIndex = this.props.activeIndex ;\n        this.setState({ index: activeIndex});\n    }\n    handleSelect= (selectedIndex, e) => {\n        this.setState({ index: selectedIndex  });\n    }\n    render() { \n        \n        return ( <> \n        <Carousel activeIndex={this.state.index} onSelect={this.handleSelect}>\n            {this.props.images.map((image, index) => {\n                return (\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src={`${this.props.origin}${image.file.url}`}\n                            alt={image.file_name}\n                        />\n                    </Carousel.Item>\n                )\n            })}\n\n        </Carousel></> );\n    }\n}\n \nexport default CarouselWrapper;","import React, { Component } from 'react';\nimport { Button, Modal, } from 'react-bootstrap'\nimport CarouselWrapper from '../modules/utils/CarouselWrapper';\nclass MessageImagesModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    handleClose = () => {\n        this.props.handleClose()\n    }\n    render() {\n        return (\n            <>\n                <Modal show={this.props.showModal} onHide={this.handleClose}>\n                    <Modal.Body>\n                        <CarouselWrapper\n                            images={this.props.images}\n                            origin={this.props.origin}\n                            activeIndex={this.props.activeIndex}\n                        />\n                    </Modal.Body>\n                </Modal>\n            </>\n        );\n    }\n}\n\nexport default MessageImagesModal;","import React, { Component } from 'react';\nimport moment from 'moment';\nimport ChatUtils from '../../classes/ChatUtils';\nimport Text from '../modules/utils/Text';\nimport MessageImagesModal from './MessageImagesModal';\nclass Message extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.userName,\n      fromTime: this.props.envelope.from === this.username ? 'time_b' : 'time_a',\n      fromColor: this.props.from === this.username ? 'from_b' : 'from_a',\n      imageIndex: null,\n      showModal: false,\n      modalImages: []\n    }\n  }\n  handleMessageImageShow = (index, images) => {\n    this.setState({ imageIndex: index, showModal: true, modalImages: images});\n  }\n  handleMessageImageClose = () => {\n    this.setState({ showModal: false  });\n  }\n\n  render() {\n    var { contaktiChat } = this.props;\n\n    return (\n      <div className={this.props.bgClass} >\n        <MessageImagesModal\n         showModal={this.state.showModal}\n         activeIndex={this.state.imageIndex}\n         images={this.state.modalImages}\n         handleClose={this.handleMessageImageClose}\n         origin={contaktiChat.origin}/>\n        {this.props.envelope.type === 'file' ? (\n          <a download target=\"_blank\" rel=\"noreferrer\" href={ChatUtils.replaceAllNewLines(this.props.envelope.message)}>{`${this.props.envelope.from} ${contaktiChat.translations.user_dashboard.upload_chat}`}</a>\n\n        ) : (\n          <Text text={ChatUtils.replaceAllNewLines(ChatUtils.replaceURLs(this.props.envelope.message))} />\n        )}\n        { this.props.envelope.images ? (<div style={{gridTemplateColumns: \"auto auto auto auto\"}} className=\"d-grid mt-1\">\n          { this.props.envelope.images.map((image, index) => {\n            return(<div className=\"me-1 mb-1\">\n              <img src={`${contaktiChat.origin}${image.file.url}`} onClick={() => { this.handleMessageImageShow(index, this.props.envelope.images)}} style={{borderColor: contaktiChat.color}} className=\"img-thumbnail\"></img>\n            </div>)\n          })}\n\n        </div>) : \"\"\n        }\n        {\n          this.props.envelope.files ? (this.props.envelope.files.map((file) => {\n            return (\n              <div>\n                <a download target=\"_blank\" rel=\"noreferrer\" href={file.url}>{file.name}</a>\n              </div>)\n\n          })) : \"\"\n        }\n        {this.props.envelope.products ? (\n          <div id=\"chat-answer-products-wrapper\" className=\"mt-1\">\n            {this.props.envelope.products.map(product => {\n              return (<div className=\"answer_product\" key={`product-item-${product.id}`}>\n                <div className=\"child1\"><strong>{product.title}</strong> </div>\n                <div className=\"child2\">\n                  <a href=\"#\" onClick={() => this.props.addToCart(product)} className=\"add-to-cart-btn\" data-product-id={product.id} style={{ color: contaktiChat.text_color, backgroundColor: contaktiChat.color }}>\n                    <i className=\"fa fa-shopping-cart\"></i>\n                  </a>\n                </div>\n                <span onClick={() => {this.props.handleProductShow(product)}}> <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i> </span>\n              </div>)\n            })\n            }\n          </div>\n        ) : \"\"}\n\n        {this.props.envelope.action_buttons ? (\n          <div>\n               {this.props.envelope.action_buttons.map((btn, i) => {\n              return (\n                <div key={`action-buttons-${i}`}>\n                  <br />\n                  {btn.hyper_link && btn.hyper_link.length > 0 ? <a href={((!/^https?:\\/\\//i.test(btn.hyper_link))?'http://': \"\") + btn.hyper_link} className=\"action-button\" target=\"_blank\" style={{ backgroundColor: contaktiChat.color, color: contaktiChat.text_color }}><Text text={btn.text} /></a> :\n                    <button className=\"action-button\" style={{ backgroundColor: contaktiChat.color, color: contaktiChat.text_color }} onClick={this.props.sendCustomActionMessage}><Text text={btn?.text} /> </button>\n                  }\n                  <br />\n                </div>\n              )\n\n            })\n            }\n          </div>\n\n        ) : \"\"}\n        {\n          this.props.envelope.type !== 'quit' && this.props.envelope.type !== 'initial' ? (\n            <div>\n              <br />\n              <div className={`msg_time${this.state.fromTime}`}> {moment(this.props.envelope.timestamp ? this.props.envelope.timestamp : \"\").local().format('D.M.YYYY HH.mm')}</div>\n              <div className={`msg_from${this.state.fromColor}`}>{this.props.envelope.from} </div>\n              {this.props.envelope.from === this.props.userName ? (\n                <div>\n                  {this.props.userInfo.map((info, i) => {\n                    return (<div key={`user-info-${i}`} className={`msg_from${this.state.fromColor}`}>{info} </div>)\n                  })}\n                </div>\n              ) : \"\"}\n            </div>\n          ) : \"\"}\n      </div>);\n  }\n}\n\nexport default Message;\n","import React, { Component } from 'react';\nimport Api from '../../classes/Api';\nclass SendChatHistory extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            chat_history: \"\"\n        }\n    }\n    componentDidMount() {\n        this.setState({ chat_history: this.props.transcript });\n    }\n\n    handleChange = (event, key) => {\n        let state = this.state;\n        let inputName = event.target.name;\n        state[inputName] = event.target.value;\n        this.setState({ ...state });\n    }\n\n    sendEmail = () => {\n        let email = this.state.email;\n        let message = this.state.chat_history;\n        var url = 'chat/' + this.props.contaktiChat.serviceChannel + '/send_email_chat_history';\n        let data = { email: email, message: message };\n        new Api().post(url, data);\n        this.props.quitChat();\n    }\n\n    cancel = async () => {\n       await this.props.quitChat();\n        this.props.startChat();\n    }\n\n    render() {\n        const translations = this.props.contaktiChat.translations.user_dashboard\n        const color = this.props.bgColor\n        return (\n            <div id=\"contakti-user-details\" className=\"flex-column justify-content-between d-flex pt-2 px-1\">\n                <div>\n                  <label>{translations.send_chat_history_title}</label>\n                  <input type=\"email\" name=\"email\" onChange={this.handleChange} value={this.state.email} placeholder={translations.messageemail_chat} className=\"form-control callback-control\" id=\"send-chat-history-email\" />\n                  <br /><br />\n                  <textarea placeholder={translations.messagemsg_chat} className=\"form-control sendchat--history\" rows=\"4\" id=\"send-chat-history-message\" name=\"chat_history\" onChange={this.handleChange} value={this.state.chat_history} ></textarea>\n                  <br />\n                  <input type=\"hidden\" id=\"chat-client-container\" name=\"chat-client-container\" />\n                </div>\n                <div className=\"pb-2\">\n                  <div className=\"send-button-container pull-left\">\n                      <button id=\"send-chat-history-send\" className=\"send\" style={{ backgroundColor: color, margin: \"5px\" }}    onClick={this.sendEmail}>{translations.messagesend_chat}  </button>\n                      <span></span>\n                      <button id=\"send-chat-history-cancel\" className=\"send\" style={{ backgroundColor: color, margin: \"5px\" }}  onClick={this.cancel} >{translations.messagesend_cancel}</button>\n                  </div>\n                  <div className=\"pull-right\">\n                      Powered by <a href=\"http://contakti.com\" target=\"_blank\" rel=\"noreferrer\" style={{ position: \"relative\" }}>contakti.com</a>\n                      <div className=\"send-button-container pull-left\">\n\n                      </div>\n                  </div>\n                </div>\n            </div>);\n    }\n}\n\nexport default SendChatHistory;","import React, { Component } from 'react';\nimport ChatMessageFactory from '../../classes/MessageFactory';\nimport Message from './Message';\nimport Api from '../../classes/Api';\nimport moment from 'moment';\nimport SendChatHistory from '../others/SendChatHistory';\nimport _ from 'lodash';\nimport Text from '../modules/utils/Text';\nimport ChatUtils from '../../classes/ChatUtils';\nclass ChatBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chatChannel: null,\n      fayeServer: null,\n      messageContainer: document.getElementById('chat_area'),\n      username: '',\n      email: '',\n      phone: '',\n      messageFactory: new ChatMessageFactory({ username: this.username, channel: this.chatChannel, email: this.email, phone: this.phone }),\n      quitSent: false,\n      messageCame: false,\n      agentPresent: false,\n      agentsCount: 0,\n      connectTimeout: 0,\n      started: false,\n      messages: [],\n      messagEnvelopes: [],\n      contaktiChat: {},\n      showDetailInput: true,\n      showChat: false,\n      newMessage: \"\",\n      disableChatSendDisabled: false,\n      disableMessageInput: false,\n      showNoAgentOnline: false,\n      agentName: \"\",\n      showSendChatHistoryFlag: false,\n      chat_transcript: \"\",\n      showCustomActionButtion: false,\n      customActionButtionText: \"\",\n      uploadedFileUrls: [],\n      orderCreated: false\n    }\n  }\n  componentDidMount() {\n    if (!this.props.contaktiChat || (this.props.contaktiChat && Object.keys(this.props.contaktiChat).length === 0)) {\n      return;\n    }\n    let chat = this.props.contaktiChat\n\n    this.setState({ messageContainer: document.getElementById('chat_area') });\n    this.setState({ contaktiChat: chat }, async () => {\n      if (this.state.contaktiChat.chat_settings.format !== \"inquiry\" || this.state.contaktiChat.chat_settings.chat_inquiry_fields.length === 0) {\n        await this.startChat();\n      }\n      // window.onbeforeunload = this.quitChat;\n    });\n    this.setSendDisabled();\n  }\n\n  onStartClientResponse = (response) => {\n    if ((!this.state.agentPresent) && this.state.contaktiChat.chatWithHuman) {\n      this.setSendDisabled()\n    }\n\n    response.callback = this.onMessageReceived;\n    response.connect = true;\n\n    this.setState({ chatChannel: response.channel });\n    this.setState({ fayeServer: response.server });\n    window.Danthes.sign(response);\n    // Set client info in redis to use when client closes or reloads the chat.\n    setTimeout(() => {\n      const url = this.state.contaktiChat.serverUrl + `/chat/set_client_info?channel_id=${this.state.chatChannel}`\n      fetch(url, {\n        \"Content-Type\": \"application/json\"\n      });\n    }, 2000);\n\n  };\n\n\n\n  displayNoAgentOnlineScreen = (timeOut = 60000) => {\n    let contakti_chat = this.state.contaktiChat;\n    if (contakti_chat.agents_online == false && contakti_chat.chatWithHuman == true)\n    {\n      this.props.showNoAgentOnlineScreen();\n    }\n    else{\n      this.setState({\n        connectTimeout: setTimeout(() => {\n          this.scrollDown();\n          this.setState({ showNoAgentOnline: true });\n        }, timeOut)\n      });\n    }\n\n  };\n\n  successCallback = (data) => {\n    let contakti_chat = this.state.contaktiChat;\n    if (data.agent_online == false)\n    {\n      this.displayNoAgentOnlineScreen(0);\n    }\n    else\n    {\n      contakti_chat.chatWithHuman = true;\n      contakti_chat.chatBotEnabled = false;\n      this.setState({ contaktiChat: contakti_chat }, () => {\n        this.setSendDisabled();\n        this.displayNoAgentOnlineScreen();\n      });\n    }\n  }\n  onMessageReceived = (envelope) => {\n    if (envelope.type === 'indicator') {\n      return\n    }\n    //TODO indicators\n    var indicators = document.getElementById('contakti-msg-indicator');\n    this.setState({ messageCame: true });\n    if (envelope.type === 'agent_indicator') {\n      indicators = document.getElementById('contakti-msg-indicator');\n      var has_cookies = localStorage.getItem('indicator_state')\n      if (!has_cookies) {\n        // setCookies\n        localStorage.setItem('indicator_state', 'true')\n        indicators.innerHTML = envelope.from + this.state.contaktiChat.translations.user_dashboard.typing_text + '<div id=\"wave\"> <span class=\"dot\"></span> <span class=\"dot\"></span> <span class=\"dot\"></span> </div>';\n        this.setState({\n          connectTimeout: setTimeout(function () {\n            var indicators = document.getElementById('contakti-msg-indicator');\n            indicators.innerHTML = '';\n            // remove cookie\n            localStorage.removeItem('indicator_state')\n          }, 5000)\n        });\n      }\n    }\n    else {\n      if (envelope.type === 'quit') {\n        this.setState({ agentsCount: this.state.agentsCount - 1 });\n        envelope.message = `${envelope.from} ${this.state.contaktiChat.translations.user_dashboard.quit_chat}`;\n        if (this.state.agentsCount < 1) {\n          // Disable send button. Do stuff!\n          this.setState({ agentPresent: false });\n          this.setSendDisabled();\n        }\n      }\n      else if (envelope.type === 'join') {\n        this.setState({ agentsCount: this.state.agentsCount + 1 });\n        if (this.state.agentPresent) {\n          envelope.message = `${envelope.from} ${this.state.contaktiChat.translations.user_dashboard.join_chat}`;\n        } else {\n          envelope.message = `${envelope.from} ${this.state.contaktiChat.chat_settings.welcome_message}`;\n        }\n        this.setState({ agentPresent: true, agentName: envelope.from });\n        clearTimeout(this.state.connectTimeout);\n        this.setSendDisabled();\n      }\n      else if (envelope.type === 'switch_to_human') {\n        envelope.message = `${this.state.contaktiChat.translations.user_dashboard.ask_human_to_help}`;\n        if (envelope.from !== this.username) {\n          indicators.innerText = \"\";\n        }\n        this.changeFromBotToHumanChat(this.successCallback);\n      }\n      let { messages, chat_transcript } = this.state;\n      if (envelope) messages.push(envelope);\n      chat_transcript = this.getChatTranscript()\n      this.setState({ messages, chat_transcript })\n      if (envelope.has_custom_action && envelope.custom_action_text) {\n        this.setState({ showCustomActionButtion: true, customActionButtionText: envelope.custom_action_text });\n      }\n      if (envelope.from !== this.state.username) {\n        indicators.innerText = \"\";\n      }\n\n    }\n    this.scrollDown();\n  };\n\n\n\n\n  changeFromBotToHumanChat = async (successCallback) => {\n\n    let client_data = [];\n    if (this.state.contaktiChat.chat_settings.format === 'inquiry') {\n      client_data = this.state.contaktiChat.chat_settings.chat_inquiry_fields.map(field => {\n        return { label: field.title, value: this.state[_.camelCase(field.title)] }\n      })\n    }\n    else {\n      client_data = [\n        { label: \"Name\", value: this.state.username }\n      ]\n    }\n    let params = {\n      chatbot: false,\n      channel_id: this.state.chatChannel,\n      name: this.state.username,\n      email: this.state.email,\n      phone: this.state.phone,\n      chat_display_fields: client_data,\n      is_ad_finland_company: this.state.contaktiChat.is_ad_finland\n        }\n    // var options = \"chatbot=\" + false + \"&name=\" + this.state.username + \"&email=\" + this.state.email + \"&phone=\" + this.state.phone + \"&channel_id=\" + encodeURIComponent(this.state.chatChannel);\n    let route = `/chat/${this.state.contaktiChat.serviceChannel}/bot_initiate_human_chat`;\n    let res = await new Api().post(route, params);\n    successCallback(res);\n  }\n\n\n  setUsername(name) {\n    if (!name) {\n      name = 'Anonymous';\n    }\n    this.setState({ username: name });\n    let msgFactory = this.state.messageFactory\n    msgFactory.from = name;\n    this.setState({ messageFactory: msgFactory });\n  };\n\n  sendCustomActionMessage = (e) => {\n    this.sendMessage(e.target.innerText);\n  }\n\n  sendMessage = (msg_text = \"\") => {\n    if (msg_text.length === 0) {\n      msg_text = this.state.newMessage;\n    }\n    if (msg_text.length > 0) {\n      var msg = this.state.messageFactory.newMessage(msg_text, null, this.state.contaktiChat.chatBotEnabled);\n      let route = this._channelUrl();\n      new Api().post(route, msg);\n      this.setState({ newMessage: \"\" })\n    }\n  };\n\n\n\n  _channelUrl = () => {\n    return this.state.chatChannel + '/send_msg';\n  };\n\n  scrollDown = () => {\n    if (this.messagesListContainer) {\n      this.messagesListContainer.scrollIntoView({ behavior: \"smooth\", block: \"end\", inline: \"nearest\" });\n    }\n  };\n\n  sendQuitNotify = () => {\n    if (this.state.quitSent) return;\n    this.setState({ quitSent: true });\n    var msg = this.state.messageFactory.quitMessage();\n    let route = this._channelUrl();\n    new Api().post(route, msg);\n    var ret = true ? null : ':D'; // Some browsers need fooling to evaluate onbeforeunload\n    return ret;\n  };\n\n  quitChat = async () => {\n    if (this.state.agentPresent) {\n      this.sendQuitNotify();\n    } else {\n      if (this.state.chatChannel) {\n        let route = `/chat/${this.state.contaktiChat.serviceChannel}/abort_chat?channel_id=${encodeURIComponent(this.state.chatChannel)}`;\n        await new Api().get(route);\n      }\n    }\n  };\n  _channelIndicatorUrl = () => {\n\n    return this.state.chatChannel + \"/send_indicator\";\n  };\n\n  onKeyIndicator = () => {\n    var msg = this.state.messageFactory.newMessage(\"Customer typing\");\n    let route = this._channelIndicatorUrl();\n    new Api().post(route, msg);\n  };\n\n  onKeyPress = (event) => {\n    var keyCode = event.keyCode;\n    if (keyCode !== 13) {\n      this.onKeyIndicator();\n    }\n\n  };\n\n  onSendClicked = (event) => {\n    this.setSendDisabled();\n    this.sendMessage();\n  };\n\n  startChat = async (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    let name = \"Anonymous\";\n    if (this.state.contaktiChat.chat_settings.format === 'inquiry') {\n      name = this.state[_.camelCase(this.state.contaktiChat.chat_settings.chat_inquiry_fields[0]?.title)]\n    }\n    this.setState({\n      showDetailInput: false,\n      showChat: true,\n      username: this.state.username.length > 0 ? this.state.username : name,\n      messageFactory: new ChatMessageFactory({\n        username: this.state.username.length > 0 ? this.state.username : name,\n        channel: this.state.chatChannel,\n        email: this.state.email,\n        phone: this.state.phone\n      })\n    });\n    this.props.toggleDropDown(true);\n    if (this.state.contaktiChat.chatWithHuman) {\n      this.displayNoAgentOnlineScreen();\n    }\n    let client_data = [];\n    if (this.state.contaktiChat.chat_settings.format === 'inquiry') {\n      client_data = this.state.contaktiChat.chat_settings.chat_inquiry_fields.map(field => {\n        return { label: field.title, value: this.state[_.camelCase(field.title)] }\n      })\n    }\n    else {\n      client_data = [\n        { label: \"Name\", value: name }\n      ]\n    }\n    let params = {\n      chatbot: this.state.contaktiChat.chatBotEnabled,\n      name: name,\n      email: this.state.email,\n      phone: this.state.phone,\n      chat_display_fields: client_data,\n      is_ad_finland_company: this.state.contaktiChat.is_ad_finland\n    }\n\n    let route = `chat/${this.state.contaktiChat.serviceChannel}/initiate_chat`;\n    let res = await new Api().post(route, params);\n\n    if (this.state.contaktiChat.initialMsg.length > 0) {\n      var msg = this.state.messageFactory.newMessage(this.state.contaktiChat.initialMsg, \"initial\", this.state.contaktiChat.chatBotEnabled, this.state.contaktiChat.chat_settings.bot_alias);\n      if (this.state.contaktiChat.chatBotEnabled && this.state.contaktiChat.chat_settings.enable_initial_buttons) {\n        msg.action_buttons = this.state.contaktiChat.chat_settings.chat_initial_buttons.map(btn => {return{ text: btn.title}});\n      }\n      let moment1 = moment;\n      msg.timestamp = moment1().local().format();\n      let msgs = this.state.messages\n      msgs.push(msg);\n      this.setState({ messages: msgs });\n    }\n    this.props.setChatStarted();\n    this.onStartClientResponse(res);\n  };\n\n  setSendDisabled = (event) => {\n    if (!this.state.agentPresent && this.state.contaktiChat?.chatWithHuman) {\n      this.setState({ disableChatSendDisabled: true })\n      if (!this.state.agentPresent && this.state.contaktiChat?.chatWithHuman) {\n        this.setState({ disableChatSendDisabled: true })\n\n      }\n    } else {\n      this.setState({ disableChatSendDisabled: false })\n    }\n  };\n\n  maximize() {\n    document.getElementById('contakti-msg-box').style.bottom = '0px';\n    var chatSettingDrowpdown = document.getElementById('chat-setting-dropdown')\n    if (chatSettingDrowpdown && document.getElementsByClassName('show-dropdown').length > 0) {\n      document.getElementById('chat-setting-dropdown').style.display = \"block\";\n    }\n    document.getElementById('contakti-msg-minimize').classList.remove('hide');\n    var sendButton = document.getElementById('contakti-chat-send-btn');\n    sendButton.onclick = this._onSendClicked.bind(this);\n    this.setState({ messageContainer: document.getElementById('contakti-msg-body') });\n    this.setState({ minimized: false });\n  };\n\n  updateUserDetail = () => {\n  }\n\n  handleChange = (event, key) => {\n    let state = this.state;\n    let inputName = event.target.name;\n    state[inputName] = event.target.value;\n    this.setState({ ...state });\n  }\n  uploadFile = () => {\n    this.fileInput.click();\n  }\n  handleFileChange = async (e) => {\n    // const fileData = e.target.files[0];\n\n    let file = e.target.files[0];\n\n\n    var formdata = new FormData();\n    formdata.append(\"upload\", file, file.name);\n\n    let response = await new Api().postFile('chat/uploadfile', formdata);\n    this.state.uploadedFileUrls.push(response.file_url)\n    var msg = this.state.messageFactory.fileMessage(response.file_url, response.file_path);\n    let route = this._channelUrl();\n    new Api().post(route, msg);\n\n  }\n\n  showSendChatHistory = () => {\n    this.setState({ showSendChatHistoryFlag: true });\n  }\n  getChatTranscript = () => {\n    let transcript = \"\";\n    this.state.messages.forEach(message => {\n      let chatUtils = ChatUtils\n      if(message && message.message){\n      transcript += chatUtils.convertHtmlToText(message?.message)\n      transcript += '\\n'\n      }\n      if (message && message.files) {\n        message.files.forEach(file => {\n          transcript += file.url;\n          transcript += '\\n'\n        })\n      }\n      if (message && message.action_buttons) {\n        message.action_buttons.forEach(btn => {\n          transcript += btn.text;\n          if(btn.hyper_link && btn.hyper_link.length > 0 ){\n            transcript +=  `( ${btn.hyper_link} )`\n          }\n          transcript += '\\n';\n        })\n      }\n      if (message && message.type !== 'quit') {\n        let _moment = moment;\n        transcript += _moment(message.timestamp ? message.timestamp : []).local().format('D.M.YYYY HH.mm')\n        transcript += '\\n';\n        transcript += message.from;\n        transcript += '\\n';\n      }\n      transcript += '\\n';\n    })\n    return transcript;\n  }\n\n  downloadChat = () => {\n    this.fileDownload.click();\n  }\n\n  createTicket = async (isFromCart = false, products = [], sum = \"\", title=\"\" ) => {\n    const task_data = {};\n    task_data['channel_id'] = this.state.chatChannel\n    task_data['media_channel_id'] = this.state.contaktiChat.serviceChannel;\n    task_data['messages_attributes'] = [];\n    task_data['messages_attributes'][0] = {};\n    task_data['messages_attributes'][0]['title'] = title;\n    task_data['messages_attributes'][0][\"channel_type\"] = 'chat';\n    if (this.state.customActionButtionText.length > 0 && title.length === 0) {\n      task_data['messages_attributes'][0]['title'] = this.state.customActionButtionText;\n    }\n    task_data['messages_attributes'][0]['to'] = 'Internal';\n    task_data['messages_attributes'][0]['from'] = this.state.username;\n    task_data['user_uploaded_file_urls'] = this.state.uploadedFileUrls;\n    if (this.state.email.length > 0) task_data['messages_attributes'][0]['from'] = this.state.email;\n    let transcript = \"\";\n    if (this.state.contaktiChat.chat_settings.format === 'inquiry') {\n      this.state.contaktiChat.chat_settings.chat_inquiry_fields.forEach(field => {\n        transcript += `${field.title} : ${this.state[_.camelCase(field.title)]}\\n`;\n      })\n    }\n    else {\n      transcript += `Name : ${this.state.username}\\n`;\n    }\n    transcript += `\\n`;\n    if(this.state.newMessage.length > 0){\n      var msg = this.state.messageFactory.newMessage(this.state.newMessage);\n      let {messages} = this.state;\n      messages.push(msg);\n    }\n    transcript += this.getChatTranscript();\n    if(isFromCart === true){\n      transcript +=  `${this.state.contaktiChat.translations.user_dashboard.shopping_cart.order_details}: \\n`\n      products.forEach(product => {\n        transcript += `${product.title}&nbsp&nbsp&nbsp&nbsp&nbsp${product.quantity}-items&nbsp&nbsp&nbsp&nbsp&nbsp${product.currency}${product.price}\\n` \n      })\n      transcript += `\\ntotal: ${products[0].currency}${sum}\\n`\n\n    }\n\n    task_data['messages_attributes'][0]['description'] = transcript;\n    task_data['type'] = 'chat';\n    const url = 'tasks/create_task_from_chat'\n    await new Api().post(url, task_data);\n    this.setState({ showCustomActionButtion: false, customActionButtionText: \"\" });\n    this.quitChat();\n    if(isFromCart === false){\n      this.props.quit();\n    }\n  }\n\n  setOrderCreated = () => {\n    this.setState({ orderCreated:  true});\n  }\n\n  render() {\n    if (!this.state.contaktiChat) {\n      return null;\n    }\n    const { contaktiChat, disableChatSendDisabled } = this.state;\n    const { messages } = this.state;\n\n    let inquiryData = [];\n    if (contaktiChat.chat_settings?.format === 'inquiry') {\n      contaktiChat.chat_settings.chat_inquiry_fields.forEach((field, index) => {\n        if (index > 0) {\n          inquiryData.push(this.state[_.camelCase(field.title)]);\n        }\n      })\n    }\n\n\n\n    return (\n\n      <div id=\"contakti-msg-container\" className=\"msg_wrap h-100\">\n         { this.state.orderCreated ? (<div style={{textAlign: \"center\", fontSize: \"110%\", paddingTop: \"3em\"}}> <Text text={contaktiChat.translations.user_dashboard.shopping_cart.thanks_for_order} /> </div>) : (<div>\n        <div id=\"contakti-chat-agent-details\" className=\"msg_agent\" style={{ display: this.state.agentName === \"\" ? \"none\" : \"block\", color: this.props.contaktiChat.text_color, backgroundColor: this.props.contaktiChat.color }}>\n          <div className=\"msg_agent_name\" id=\"contakti-chat-agent-name\">{this.state.agentName}</div>\n        </div>\n        {\n          contaktiChat?.chat_settings?.format === \"inquiry\" && contaktiChat?.chat_settings.chat_inquiry_fields.length > 0 ?\n            <div id=\"contakti-user-details\" className=\"h-100 px-1\" style={{ display: this.state.showDetailInput ? 'block' : 'none' }} >\n              <form className=\"flex-column justify-content-between d-flex h-100\" onSubmit={async (event) => { await this.startChat(event); }}>\n                <div style={{ maxHeight: \"330px\", overflow: \"auto\", marginTop: \"115px\" }} >\n                  {contaktiChat?.chat_settings.chat_inquiry_fields.map((field, index) => {\n                    return (<div key={`inquiry-fields-${index}`}><label>{field.title}</label>\n                      <input type={field.input_type} required className=\"form-control-start\" value={this.state[_.camelCase(field.title)] || \"\"} name={_.camelCase(field.title)} onChange={this.handleChange} id=\"contakti-input-name\" />\n                    </div>\n                    )\n                  })}\n                </div>\n                <div style={{ textAlign: 'center', marginBottom: \"20px\" }} >\n                  <div>\n                    <input type=\"submit\" id=\"contakti-input-details-submit\" className=\"btn btn-default btn-block\" value={contaktiChat.translations.user_dashboard.start_chat} style={{ backgroundColor: this.props.contaktiChat.color, color: this.props.contaktiChat.text_color }} />\n                  </div>\n                  <div >\n                    Powered by <a href=\"http://contakti.com\" target=\"_blank\" rel=\"noreferrer\">contakti.com</a>\n                  </div>\n                </div>\n              </form>\n            </div>\n            : null\n        }\n        {this.state.showSendChatHistoryFlag ? (<SendChatHistory contaktiChat={contaktiChat} bgColor={contaktiChat.color} transcript={this.state.chat_transcript} quitChat={() => { this.props.quit(); this.quitChat(); }} startChat={() => this.props.startChat()} />) : (\n          <div className={this.state.showDetailInput === false ? '' : 'd-none'}>\n\n            <div id=\"contakti-msg-body\" className=\"msg_bodyclient\">\n              {contaktiChat?.chat_settings?.format === \"inquiry\" && contaktiChat?.chat_settings.chat_inquiry_fields.length > 0 ? (\n                null\n              ) : \"\"}\n              <div style={{ display: this.state.showChat ? 'block' : 'none' }} id=\"chat_area\" ref={(el) => { this.messagesListContainer = el; }}>\n                {\n                  this.state.showNoAgentOnline ? (\n                    <div className=\"msg_n\">{contaktiChat.translations.user_dashboard.chat_not_available}<a href=\"#\" onClick={this.props.showNoAgentOnlineScreen} id=\"contakti_chat_not_available_link\"> {contaktiChat.translations.user_dashboard.chat_leave_a_message_link}</a></div>\n                  ) : (\n\n                    <div>\n                      {\n                        messages.map((message, index) => {\n                          return (\n                            <Message key={index}\n                              envelope={message}\n                              handleProductShow={this.props.handleProductShow}\n                              bgClass={message.from === this.state.username ? 'msg_b' : 'msg_a'}\n                              userName={this.state.username}\n                              sendCustomActionMessage={this.sendCustomActionMessage}\n                              addToCart={(product) => { this.props.addToCart(product) }}\n                              contaktiChat={contaktiChat}\n                              userInfo={inquiryData}\n                            />\n                          );\n\n                        })\n                      }\n                    </div>\n\n                  )}\n              </div>\n            </div>\n            <div id=\"contakti-msg-indicator\" className=\"msg_indictor\"> </div>\n            <div id=\"contakti-msg-footer\" className=\"msg_footer\" style={{ display: this.state.showChat ? 'block' : 'none' }}>\n              <div className=\"block-row\">\n                <div className=\"input-block\">\n                  <textarea\n                    id=\"contakti-chat-text-input\"\n                    value={this.state.newMessage}\n                    disabled={disableChatSendDisabled}\n                    name='newMessage'\n                    onChange={this.handleChange}\n                    className=\"msg_input form-control\"\n                    placeholder={contaktiChat?.translations?.user_dashboard.type_message}\n                    onKeyPress={(event) => {\n                      if (event.charCode === 13) {\n                        event.preventDefault();\n                        this.onSendClicked();\n                      }\n                      else {\n                        this.onKeyPress(event);\n                      }\n                    }}\n                    disabled={this.state.disableChatSendDisabled ? true : false}\n                    rows=\"3\" />\n                </div>\n                <div className=\"button-block\">\n                  <a\n                    className={`contakti-chat-send-btn ${this.state.newMessage.length > 0 ? \"\" : \"disabled\"}`}\n                    onClick={this.onSendClicked}\n                    style={{ backgroundColor: this.props.contaktiChat.color, color: this.props.contaktiChat.text_color }}>\n                    <span className=\"fa fa-send\"></span>\n                  </a>\n                </div>\n              </div>\n              <div className=\"block-row mb-1\">\n                <div className=\"pull-left\">\n                  <button id=\"custom_action_button\" onClick={this.createTicket} style={{ visibility: this.state.showCustomActionButtion ? 'visible' : 'hidden' }}> {this.state.customActionButtionText}</button>\n                </div>\n              </div>\n              <div className=\"block-row mb-10\">\n                <div className=\"pull-left\">\n                  <a onClick={this.uploadFile} id=\"contakti-open-file\">{contaktiChat.translations?.user_dashboard.attachment_chat}</a>\n                </div>\n                <div className=\"pull-right\">\n                  Powered by <a href=\"http://contakti.com\" target=\"_blank\" rel=\"noreferrer\" style={{ marginRight: '10px' }}>contakti.com</a>\n                </div>\n              </div>\n              <form id=\"contakti-file-upload-form\" style={{ display: 'none' }}>\n                <input type=\"file\" id=\"contakti-file-upload-input\" ref={instance => { this.fileInput = instance; }} name=\"upload\" onChange={this.handleFileChange} />\n              </form>\n            </div>\n          </div>\n        )}\n        </div>\n        )}\n        \n        <a ref={instance => { this.fileDownload = instance; }} style={{ display: \"none\" }} href={`data:text/plain;charset=utf-8,${encodeURIComponent(this.state.chat_transcript)}`} download=\"chat_history.txt\"></a>\n      </div>\n    );\n  }\n}\n\nexport default ChatBox;\n","import React, { Component } from 'react';\nimport Api from '../../classes/Api';\nimport Text from '../modules/utils/Text';\nclass CallBackBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      phone: \"\",\n      date: \"\",\n      time: \"\",\n      email: \"\",\n      message: \"\",\n      callBackSent: false\n\n    }\n  }\n\n  createCallBack = () => {\n    let number = this.state.phone\n    let date = this.state.date\n    let time = this.state.time\n    let datetime = '';\n    if (date.length > 0) {\n      datetime = new Date(`${date}`);\n      if (time.length > 0) {\n        datetime = new Date(`${date}T${time}`);\n      }\n    }\n    let email = this.state.email\n    let message = this.state.message\n    let url = '/chat/' + this.props.contaktiChat.serviceChannel + '/create_callback'\n    new Api().post(url, { number: number, datetime: datetime, email: email, message: message });\n    document.getElementById('contakti-user-name').innerHTML = this.props.contaktiChat.translations.user_dashboard.thanks_chat;\n    this.setState({callBackSent: true})\n  }\n\n\n  handleChange = (event, key) => {\n    let state = this.state;\n    let inputName = event.target.name;\n    state[inputName] = event.target.value;\n    this.setState({ ...state });\n  }\n  render() {\n    return (\n      <div className=\"call_back_box h-100\">\n      { this.state.callBackSent? (<div style={{textAlign: \"center\", fontSize: \"110%\", paddingTop: \"3em\"}}> <Text text={this.props.contaktiChat.translations.user_dashboard.sentmessage_chat} /> </div>) : (\n      <form id=\"contakti-user-details\" onSubmit={this.createCallBack} className=\"h-100 flex-column justify-content-between d-flex\">\n        <div className=\"row\">\n          <div className=\"col-12 pb-2\">\n            <label>{this.props.contaktiChat.translations.user_dashboard.callback_chat}</label>\n          </div>\n\n          <div className=\"col-12 pb-2\">\n            <div>\n              <div className=\"small-label pb-2\">{this.props.contaktiChat.translations.user_dashboard.cbnumber_chat}</div>\n              <input type=\"text\" onChange={this.handleChange} placeholder={this.props.contaktiChat.translations.user_dashboard.cbnumber_chat} name=\"phone\" className=\"form-control callback-control\" value={this.state.phone} id=\"messagebox-callback-number\" required />\n            </div>\n            <div style={{clear: \"both\"}}></div>\n          </div>\n\n          <div className=\"col-12\">\n            <div className=\"small-label pb-2\">{this.props.contaktiChat.translations.user_dashboard.time_chat}</div>\n            <div style={{clear: \"both\"}}></div>\n\n            <div style={{width: \"50%\", float: \"left\", boxSizing: \"border-box\",  paddingRight: \"20px\"}}>\n              <input type=\"date\" id=\"messagebox-date-field\" name=\"date\" value={this.state.date} onChange={this.handleChange} />\n            </div>\n\n            <div style={{width: \"50%\", float: \"left\", boxSizing: \"border-box\",  paddingRight: \"20px\"}}>\n              <input type=\"time\" id=\"messagebox-time-field\" name=\"time\" value={this.state.time} onChange={this.handleChange} />\n            </div>\n\n\n            <div style={{clear: \"both\"}}></div>\n          </div>\n          <div className=\"col-12 pb-2\">\n            <label>{this.props.contaktiChat.translations.user_dashboard.message_chat}</label>\n            <input type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} placeholder={this.props.contaktiChat.translations.user_dashboard.messageemail_chat} className=\"form-control callback-control\" id=\"messagebox-email\" required />\n            <br />\n            <textarea name=\"message\" value={this.state.message} onChange={this.handleChange} placeholder={this.props.contaktiChat.translations.user_dashboard.messagemsg_chat} className=\"form-control\" rows=\"8\" id=\"messagebox-message\"></textarea>\n\n          </div>\n        </div>\n          <div className=\"footer-sec\">\n            <div className=\"send-button-container pull-left\">\n              <button  type=\"submit\" id=\"messagebox-send\" className={`send ${this.state.phone.length > 0 && this.state.email.length > 0  ? \"\" : \"disabled\"}`} style={{backgroundColor: this.props.contaktiChat.color }} ><span className=\"fa fa-send\"></span></button>\n            </div>\n            <div className=\"pull-right\">\n              Powered by <a href=\"http://contakti.com\" target=\"_blank\" rel=\"noreferrer\" style={{position: \"relative\"}}>contakti.com</a>\n              <div className=\"send-button-container pull-left\">\n\n              </div>\n            </div>\n          </div>\n      </form>\n      )}\n      </div>\n\n    );\n  }\n}\n\nexport default CallBackBox;","import React, { Component } from 'react';\nclass Product extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n\n\n  onProductRemove = (p) => {\n    this.props.onProductRemove(p);\n  }\n\n  increaseQuantity = (product) => {\n    this.props.increaseQuantity(product)\n  }\n\n  decreaseQuantity = (product) => {\n    if (product.quantity > 1) {\n      product.quantity -= 1;\n      this.props.replaceProduct(product)\n    }\n  }\n\n\n  render() {\n    let { products } = this.props;\n    const {translations} = this.props\n\n    return (\n      <table className=\"table table-condensed table-striped \">\n        <thead>\n          <tr>\n            <th className=\"border-0\">{translations.product_title}</th>\n            <th className=\"border-0 text-center\">{translations.quantity}</th>\n            <th className=\"border-0 text-center\">{translations.price}</th>\n            <th className=\"border-0 text-center\">{translations.action}</th>\n          </tr>\n        </thead>\n\n        <tbody id=\"cart_body\">\n          {\n            products.map((product, index) => {\n              return <tr key={index}>\n                <td className=\"px-1 border-0\"><a href=\"#\" onClick={()=> { this.props.handleShow(product) }}>{product?.title}</a></td>\n                <td className=\"px-1 border-0\">\n                  <div className=\"center\" style={{ position: \"relative\" }}>\n                    <span onClick={() => this.increaseQuantity(product)}> <i className=\"fa fa-plus\"></i> </span>\n                    <input type=\"text\" className=\"form-control\" style={{ width: \"50px\", margin: \"0px 5px\" }} value={product?.quantity} readOnly />\n                    <span onClick={() => this.decreaseQuantity(product)} > <i className=\"fa fa-minus\" ></i></span>\n                  </div>\n                </td>\n                <td className=\"px-1 border-0 text-center\">{product?.currency} {product?.price}</td>\n                <td className=\"px-1 border-0 center\">\n                  <button\n                    onClick={() => this.onProductRemove(product)}\n                    className=\"btn btn-danger \" ><i className=\"fa fa-times\" disabled ></i></button>\n                </td>\n              </tr>\n\n            })\n          }\n          <tr className=\"table-active\">\n            <td className=\"px-1 border-0 text-end\" colSpan=\"3\">\n              <strong>{translations.total}: {this.props.total}</strong>\n             </td>\n             <td className=\"px-1 border-0 \"/>\n          </tr>\n        </tbody>\n\n      </table>\n\n    );\n  }\n}\nexport default Product;","import React, { Component } from 'react';\nimport Product from './Product';\nimport _ from 'lodash';\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      paymentMethods: [],\n      sum: 0,\n      currency: \"USD\",\n      showModal: false,\n      selectedProduct: {},\n      selectedPaymentMethod: {}\n    }\n  }\n  componentDidMount() {\n    this.countSum();\n    let { contaktiChat } = this.props;\n    this.state.paymentMethods = contaktiChat.payment_methods\n  }\n\n  onProductRemove = (product) => {\n    let { products } = this.state;\n    products = _.reject(products, (p) => {\n      return p.id === product.id;\n    });\n    this.setState({ products }, () => {\n      if (this.state.products.length === 0) {\n        this.props.onCartEmpty();\n      }\n      this.countSum();\n    });\n\n  }\n\n  addProduct = (p) => {\n    let { products } = this.state;\n    var product = _.find(products, { id: p.id });\n    if (product) {\n      product.quantity += 1;\n      this.replaceProduct(product);\n    }\n    else {\n      p.quantity = 1;\n      let currency = p.currency;\n      products.push(p)\n      this.setState({ products, currency }, () => this.countSum());\n\n    }\n  }\n\n\n  countSum = () => {\n    let sum = 0;\n    let { products } = this.state;\n    _.each(products, (product) => {\n      sum += (product.price * product.quantity);\n    });\n    this.setState({ sum });\n  }\n\n  replaceProduct = (product) => {\n    let { products } = this.state;\n    var index = _.findIndex(products, { id: product.id });\n    products.splice(index, 1, product);\n    this.setState({ products });\n    this.countSum();\n  }\n  handleChange = (event) => {\n    this.setState({ selectedPaymentMethod: event.target.value });\n  }\n\n  render() {\n    let { products } = this.state;\n    const { contaktiChat } = this.props\n    let color = contaktiChat.color;\n    let text_color = contaktiChat.text_color;\n    const { translations } = contaktiChat\n    return (\n      <div id=\"contakti_cart_box\" className=\"cart_box\">\n        <div className=\"msg_head\" style={{ backgroundColor: color }}>\n          <span id=\"contakti-user-name\" style={{ color: text_color }}> {translations.user_dashboard.shopping_cart.cart_title}</span>\n          <span id=\"close-cart-icon\" className=\"float-end p-1 mr-2 d-none d-sm-block d-md-none\" onClick={this.props.toggleCart}><i className=\"fa fa-times\"></i></span>\n        </div>\n\n        <div className=\"cart_body d-flex flex-column justify-content-between\">\n          <div style={{ maxHeight: \"270px\", overflow: \"auto\" }}>\n            <Product\n              products={products}\n              onProductRemove={this.onProductRemove}\n              increaseQuantity={this.addProduct}\n              replaceProduct={this.replaceProduct}\n              total={`${this.state.currency} ${this.state.sum}`}\n              translations={translations.user_dashboard.shopping_cart}\n              handleShow={this.props.handleShow}\n            />\n          </div>\n          <div className=\"text-center\">\n            <div className=\"row form-group\">\n              <div className=\"col-6\">\n                <label> {translations.payment_methods.title}</label>\n                <div className=\"centera\" id=\"paymenst_method_select\">\n                  <select className=\"form-control w-100 m-auto\" onChange={this.handleChange}\n                    value={this.state.selectedPaymentMethod}>\n                    <option selected disabled>Choose one</option>\n                      {this.state.paymentMethods.map((method, index) => {\n                        return (<option key={index}> {method.name}</option>)\n                      })}\n                  </select>\n                </div>\n              </div>\n              <br />\n\n              <div className=\"col-6\">\n                <label> {translations.user_dashboard.shopping_cart.shipment_method}</label>\n                <div className=\"centera\" id=\"payments_method_select\">\n                  <select className=\"form-control w-100 m-auto\">\n                    <option> ABC</option>\n                    <option> DEF</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n\n            <div>\n              {contaktiChat.chat_settings.checkout_format === \"paytrail\" ? (\n                <button className=\"btn w-50\" style={{\n                  color: text_color,\n                  backgroundColor: color\n                }}> {translations.user_dashboard.shopping_cart.checkout}</button>\n              ) : (\n                <button className=\"btn w-50\" style={{\n                  color: text_color,\n                  backgroundColor: color\n                }}\n                  onClick={() => this.props.handleOrder(this.state.products, this.state.sum)}\n                > {translations.user_dashboard.shopping_cart.order}</button>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Cart;\n","import React, { Component } from 'react';\nimport { Button, Modal, } from 'react-bootstrap'\nimport CarouselWrapper from '../modules/utils/CarouselWrapper';\n\nclass ProductInfoModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: false,\n\n        }\n    }\n    handleClose = () => {\n        this.props.handleClose();\n    }\n    render() {\n        let { product } = this.props\n        return (\n            <>\n                <Modal show={this.props.show} onHide={this.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>{this.props.title}</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"d-flex justify-content-between px-2\">\n                            <span className=\"float-start\">{product.title}</span>\n                            <span className=\"float-end\">{product.currency} {product.price}</span>\n                        </div>\n                        <hr />\n                        {product.images && product.images.length > 0 &&\n                            <div>\n                                <CarouselWrapper \n                                images={product.images}\n                                origin={this.props.origin}\n                                 />    \n                                <hr />\n                            </div>\n                        }\n\n                        <div  className=\"overflow-auto mt-1 px-2\" >\n                            <div>{product.description}</div>\n                            {product.attachments && product.attachments.length > 0 && <div>\n                                {product.attachments.map((f, index) => {\n                                    return (\n                                        <span className=\"mx-1\">\n                                            <a className=\"text-decoration-none\" href={`${this.props.origin}${f.file.url}`} download >{f.file_name}</a>\n                                        </span>\n                                    )\n                                })}\n                            </div>\n                            }\n\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" style={{ background: this.props.buttonColor }}  size=\"sm\" onClick={this.handleClose}>\n                            {this.props.btnText}\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default ProductInfoModal;\n","import React, { Component } from 'react';\nimport ContaktiChat from '../../classes/ContaktiChat';\nimport Dropdown from './Dropdown';\nimport ChatBox from '../chat_box/ChatBox';\nimport CallBackBox from '../others/CallBackBox';\nimport ChatUtils from '../../classes/ChatUtils';\nimport ReactResizeDetector from 'react-resize-detector/build/withPolyfill';\nimport Cart from '../shopping_cart/Cart';\nimport ProductInfoModal from '../shopping_cart/ProductInfoModal';\n\nclass ChatPlugin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      style: {},\n      contaktiChat: {},\n      translations: {},\n      loading: true,\n      showDropDown: false,\n      showNoAgentScreen: false,\n      showPlugin: false,\n      showMinimize: false,\n      chatStarted: false,\n      chatInitialized: false,\n      showCartIcon: false,\n      showCart: false,\n      cartEmpty: true,\n      showProductModal: false,\n      selectedProduct: {}\n    }\n  }\n  handleProductModalClose = () => {\n    this.setState({ showProductModal: false })\n  };\n  handleProductModalShow = (p) => {\n    this.setState({ showProductModal: true, selectedProduct: p });\n  }\n\n  async componentDidMount() {\n    let contakti_chat = new ContaktiChat();\n    let chatUtils = ChatUtils\n    let urlParams = chatUtils.getUrlParams(window.location.href)\n    let serviceChannelId = urlParams.id;\n    contakti_chat.setServiceChannel(serviceChannelId);\n    await contakti_chat.setSettings();\n    await contakti_chat.setTranslations();\n    await contakti_chat.setPaymentMethods();\n\n    this.setState({\n      contaktiChat: contakti_chat,\n      loading: false,\n      style: {\n        color: contakti_chat.text_color,\n        backgroundColor: contakti_chat.color\n      }\n    });\n  }\n\n  toggleDropDown = (flag) => {\n    this.setState({ showDropDown: flag });\n  }\n  setChatStarted = () => {\n    if (!this.state.chatStarted) {\n      this.setState({ chatStarted: true });\n    }\n  }\n  showNoAgentOnlineScreen = (e) => {\n    this.setState({ showNoAgentScreen: true });\n    if (e) e.preventDefault();\n  }\n  showChatPlugin = async () => {\n    if (!this.state.chatInitialized) {\n      this.setState({ chatInitialized: true });\n    }\n    if (!this.state.showPlugin) {\n      let cont_chat = this.state.contaktiChat\n      await cont_chat.setSettings();\n      this.setState({ showPlugin: true, showMinimize: true, contaktiChat: cont_chat });\n\n      if (this.state.chatStarted) {\n        this.setState({ showDropDown: true });\n      }\n      if (!this.state.cartEmpty) {\n        this.setState({ showCartIcon: true });\n      }\n\n    }\n\n  }\n  hideChatPlugin = (e) => {\n    e.stopPropagation();\n    if (this.state.showPlugin) {\n      this.setState({ showPlugin: false, showMinimize: false, showDropDown: false, showCart: false, showCartIcon: false });\n    }\n  }\n  destroyChat = () => {\n    this.setState({ chatInitialized: false, showPlugin: false, showMinimize: false, showDropDown: false, showCartIcon: false, cartEmpty: true });\n  }\n  onResize = (width, height) => {\n    // if (width < 350){\n    //   // width = 350;\n    // }\n    // if ( height < 535)\n    // {\n    //   // height = 535;\n    // }\n    window.parent.postMessage({ type: 'set_dimensions', width, height }, \"*\");\n  }\n  toggleCart = () => {\n    this.setState({ showCart: !this.state.showCart });\n  }\n  addToCart = (product) => {\n    this.setState({ showCartIcon: true, cartEmpty: false }, () => this.cart.addProduct(product));\n  }\n  hideCartIcon = () => {\n    this.setState({ showCartIcon: false, showCart: false, cartEmpty: true });\n  }\n  createCartTicket = (products, sum) => {\n    this.chatBox.createTicket(true, products, sum, this.state.contaktiChat.translations.user_dashboard.shopping_cart.order_products);\n    this.chatBox.setOrderCreated();\n    this.setState({ showCart: false, showCartIcon: false});\n  }\n\n\n  render() {\n    const { contaktiChat, loading } = this.state;\n    let parent_width_class = '';\n\n    if (window.parent) {\n      if (window.outerWidth <= 600) {\n        parent_width_class += ' max-600-width '\n      }\n    }\n\n    if (loading) {\n      return null;\n    }\n    return (\n      <div id=\"contakti-chat-main\" className={parent_width_class}>\n        <ReactResizeDetector handleWidth handleHeight onResize={this.onResize} >\n          <div id=\"contakti-msg-box\"\n            className={`\n                 chat-plugin-parent\n                 ${this.state.showMinimize === true ? \"open\" : \"\"}\n              `}\n          >\n            <ProductInfoModal\n              title={contaktiChat.translations.user_dashboard.shopping_cart.product_details}\n              btnText={contaktiChat.translations.user_dashboard.shopping_cart.close}\n              buttonColor={contaktiChat.color}\n              product={this.state.selectedProduct}\n              handleShow={this.handleProductModalShow}\n              handleClose={this.handleProductModalClose}\n              show={this.state.showProductModal}\n              origin={contaktiChat.origin}\n            />\n            <div className=\"cart-parent\" style={{ display: this.state.showCart ? \"block\" : \"none\" }}>\n              {(!this.state.cartEmpty) && contaktiChat.chat_settings.enable_cart ? (\n                <Cart ref={instance => { this.cart = instance; }}\n                    handleShow={this.handleProductModalShow} \n                    contaktiChat={contaktiChat} \n                    onCartEmpty={this.hideCartIcon} \n                    toggleCart={this.toggleCart} \n                    handleOrder={this.createCartTicket}/>\n              ) : \"\"}\n            </div>\n\n            <div className=\"chat-parent flex-column d-flex\">\n              <div id=\"contakti-msg-head\" onClick={this.showChatPlugin} className=\"msg_head\" style={this.state.style}>\n                <div>\n                  <div id=\"contakti-logo-container\">\n                    <img alt=\"logo\" src={`${contaktiChat.origin}/${contaktiChat.chat_settings.file.url}`} />\n                  </div>\n                </div>\n\n                <span id=\"contakti-user-name\" style={{ color: contaktiChat.text_color }}>{contaktiChat.chat_settings.chat_title}</span>\n\n                <span id=\"cart_show_button\" onClick={this.toggleCart} style={{ display: this.state.showCartIcon ? \"block\" : \"none\", margin: '5px 5px 0 0', color: contaktiChat.text_color }}>\n                  <i className=\"fa fa-shopping-cart mt-1\"></i>\n                </span>\n                <span>\n                  {this.state.showDropDown ? (<Dropdown styleObj={this.state.style} translations={contaktiChat.translations} showDropdown={this.state.showDropDown} quit={() => { this.chatBox.quitChat(); this.destroyChat() }} sendChatHistory={() => this.chatBox.showSendChatHistory()} downloadChatHistory={() => { this.chatBox.downloadChat(); }} startChat={() => this.showChatPlugin()} />) : \"\"}\n                </span>\n\n                <div id=\"contakti-msg-minimize\" >\n                  {this.state.showMinimize ? (\n                    <span className=\"fa-stack\" onClick={this.hideChatPlugin} style={{ color: contaktiChat.text_color }}><i className=\"fa fa-stack-2x fa-angle-down\" style={{ top: '3px', left: '0px' }}></i></span>\n                  ) : \"\"}\n                </div>\n              </div>\n              {this.state.chatInitialized ? (\n                <div  style={{ display: this.state.showPlugin ? \"block\" : \"none\" }}>\n                  {this.state.showNoAgentScreen ? (<CallBackBox contaktiChat={contaktiChat} showNoAgentOnlineScreen={this.showNoAgentOnlineScreen} ></CallBackBox>) : (\n                    <ChatBox ref={instance => { this.chatBox = instance; }}\n                      contaktiChat={contaktiChat}\n                      handleProductShow={this.handleProductModalShow}\n                      toggleDropDown={this.toggleDropDown}\n                      showNoAgentOnlineScreen={this.showNoAgentOnlineScreen}\n                      quit={() => { this.destroyChat() }}\n                      setChatStarted={this.setChatStarted}\n                      startChat={() => this.showChatPlugin()}\n                      addToCart={(product) => { this.addToCart(product) }}\n                    ></ChatBox>)}\n                </div>\n              ) : \"\"}\n            </div>\n          </div>\n        </ReactResizeDetector>\n      </div>\n    );\n  }\n}\n\nexport default ChatPlugin;\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.scss';\nimport './components/chat_plugin/ChatPlugin'\nimport ChatPlugin from './components/chat_plugin/ChatPlugin';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <ChatPlugin />\n    );\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './style.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}