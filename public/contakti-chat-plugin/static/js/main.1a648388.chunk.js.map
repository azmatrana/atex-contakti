{"version":3,"sources":["classes/Api.js","classes/ContaktiChat.js","components/chat_plugin/Dropdown.jsx","classes/MessageFactory.js","classes/ChatUtils.js","components/modules/utils/Text.jsx","components/modules/utils/CarouselWrapper.jsx","components/chat_box/MessageImagesModal.jsx","components/chat_box/Message.jsx","components/others/SendChatHistory.jsx","components/chat_box/ChatBox.jsx","components/others/CallBackBox.jsx","components/shopping_cart/Product.jsx","components/shopping_cart/CustomerFormModal.jsx","components/shopping_cart/Cart.jsx","components/shopping_cart/ProductInfoModal.jsx","components/chat_plugin/ChatPlugin.jsx","App.js","reportWebVitals.js","index.js"],"names":["Api","document","location","origin","includes","this","serverUrl","baseUrl","prototype","get","a","route","fetch","res","json","data","post","method","cache","headers","body","JSON","stringify","response","postFile","file_data","ContaktiChat","locale","serviceChannel","chat_settings","url_obj","serverProtocol","api","channel","settings","chat_inquiry_fields","chat_initial_buttons","chatBotEnabled","enable_chatbot","chatWithHuman","initialMsg","initial_msg","color","text_color","agents_online","is_ad_finland","is_ad_finland_company","shipment_methods","currency","checkout_methods","checkout_paytrail","push","checkout_ticket","translations","Dropdown","props","toggle_dropdown","e","setState","expanded","state","mouseover","target","style","styleObj","backgroundColor","mouseout","end","quit","showEndChat","sendchatHistory","sendChatHistory","showSendEmail","showStart","startChat","downloadChat","downloadChatHistory","className","id","onClick","hidden","onMouseOver","onMouseOut","user_dashboard","download_txt_file","display","send_to_email","end_chat","start_new_chat","Component","ChatMessage","asJSON","ChatMessageFactory","options","from","username","type","initialise","newMessage","message","chatBot","msg","channel_id","chatbot","quitMessage","botToHumanSwitchMessage","fileMessage","file_url","file_path","ChatUtils","price","Number","toFixed","replaceURLs","replace","url","hyperlink","match","replaceAllNewLines","convertHtmlToText","html","getUrlParams","params","split","forEach","pair","map","decodeURIComponent","length","Text","parse","text","CarouselWrapper","handleSelect","selectedIndex","index","activeIndex","Carousel","onSelect","images","image","Item","src","file","alt","file_name","MessageImagesModal","handleClose","Modal","show","showModal","onHide","Body","Message","handleMessageImageShow","imageIndex","modalImages","handleMessageImageClose","userName","fromTime","envelope","fromColor","contaktiChat","bgClass","download","rel","href","upload_chat","gridTemplateColumns","borderColor","files","name","products","product","title","addToCart","handleProductShow","action_buttons","btn","i","hyper_link","test","sendCustomActionMessage","moment","timestamp","local","format","userInfo","info","SendChatHistory","handleChange","event","key","value","sendEmail","email","chat_history","quitChat","cancel","transcript","bgColor","send_chat_history_title","onChange","placeholder","messageemail_chat","messagemsg_chat","rows","margin","messagesend_chat","messagesend_cancel","position","ChatBox","onStartClientResponse","agentPresent","setSendDisabled","callback","onMessageReceived","connect","chatChannel","fayeServer","server","window","Danthes","sign","setTimeout","displayNoAgentOnlineScreen","timeOut","contakti_chat","showNoAgentOnlineScreen","connectTimeout","scrollDown","showNoAgentOnline","successCallback","agent_online","indicators","getElementById","messageCame","localStorage","getItem","setItem","innerHTML","typing_text","removeItem","agentsCount","quit_chat","join_chat","welcome_message","agentName","clearTimeout","ask_human_to_help","innerText","changeFromBotToHumanChat","messages","chat_transcript","getChatTranscript","has_custom_action","custom_action_text","showCustomActionButtion","customActionButtionText","client_data","field","label","_","camelCase","phone","chat_display_fields","sendMessage","msg_text","messageFactory","_channelUrl","messagesListContainer","scrollIntoView","behavior","block","inline","sendQuitNotify","quitSent","encodeURIComponent","_channelIndicatorUrl","onKeyIndicator","onKeyPress","keyCode","onSendClicked","preventDefault","showDetailInput","showChat","toggleDropDown","bot_alias","enable_initial_buttons","moment1","msgs","setChatStarted","disableChatSendDisabled","updateUserDetail","uploadFile","fileInput","click","handleFileChange","formdata","FormData","append","uploadedFileUrls","showSendChatHistory","showSendChatHistoryFlag","chatUtils","_moment","fileDownload","createTicket","isFromCart","sum","task_data","service_channels","shopping_cart","order_details","quantity","items","displayPrice","total","setPluginDisabledState","createdTask","createOrder","task_id","customerId","checkout_method","shipment_method","p","chatbot_product_id","orderCheckoutMethod","setOrderCreated","orderCreated","messageContainer","started","messagEnvelopes","disableMessageInput","Object","keys","chat","msgFactory","bottom","getElementsByClassName","classList","remove","onclick","_onSendClicked","bind","minimized","inquiryData","order_success_msg","note_for_order_payment","thanks_for_order","onSubmit","maxHeight","overflow","marginTop","input_type","required","textAlign","marginBottom","start_chat","ref","el","chat_not_available","chat_leave_a_message_link","disabled","type_message","charCode","visibility","attachment_chat","marginRight","instance","CallBackBox","createCallBack","number","date","time","datetime","Date","thanks_chat","callBackSent","fontSize","paddingTop","sentmessage_chat","callback_chat","cbnumber_chat","clear","time_chat","width","float","boxSizing","paddingRight","message_chat","Product","onProductRemove","increaseQuantity","decreaseQuantity","replaceProduct","product_title","action","handleShow","readOnly","CustomerFormModal","errors","submitForm","form","dispatchEvent","Event","cancelable","bubbles","disabledFormContent","handleShipmentChange","selectedId","selected_method","selectedShipmentMethod","each","handleCheckoutMethodChange","selectedCheckoutMethod","handleSubmit","customerData","full_name","phone_number","street_address","city","zip_code","createdCustomer","handleCartOrder","customerFormInputs","addEventListener","customer","cartTranslations","customerTranslations","backdrop","Header","closeButton","Title","f","field_name","Footer","Button","variant","background","buttonColor","size","checkout_button_paytrail","checkout_button_ticket","Cart","handleCustomerFormModalClose","showCustomerFormModal","handleCustomerFormModalShow","disableChatboxContent","reject","onCartEmpty","countSum","addProduct","find","findIndex","splice","checkoutMethod","shipmentMethod","handleOrder","shipmentMethods","selectedProduct","cart_title","toggleCart","colSpan","checkout","ProductInfoModal","description","attachments","btnText","ChatPlugin","handleProductModalClose","showProductModal","handleProductModalShow","flag","showDropDown","chatStarted","showNoAgentScreen","showChatPlugin","chatInitialized","showPlugin","cont_chat","setSettings","showMinimize","cartEmpty","showCartIcon","hideChatPlugin","stopPropagation","showCart","destroyChat","onResize","height","parent","postMessage","cart","hideCartIcon","createCartTicket","chatBox","order_products","taskId","loading","urlParams","serviceChannelId","setServiceChannel","setTranslations","parent_width_class","outerWidth","handleWidth","handleHeight","product_details","close","enable_cart","chat_title","showDropdown","top","left","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"ySAAMA,EAAM,WAMJC,SAASC,SAASC,OAAOC,SAAS,QAElCC,KAAKF,OAAS,wBAGdE,KAAKF,OAASF,SAASC,SAASC,OAGpCE,KAAKC,UAAYD,KAAKF,OAAS,UAC/BE,KAAKE,QAAUF,KAAKC,WAGxBN,EAAIQ,UAAUL,OAAS,QAEvBH,EAAIQ,UAAUC,IAAd,sBAAoB,4CAAAC,EAAA,6DAAgBC,EAAhB,+BAAwB,GAAxB,SACEC,MAAM,GAAD,OAAIP,KAAKE,QAAT,YAAoBI,IAD3B,cACVE,EADU,gBAEGA,EAAIC,OAFP,UAEVC,EAFU,iDAIL,MAJK,iCAOLA,GAPK,iDAUpBf,EAAIQ,UAAUQ,KAAd,sBAAqB,4CAAAN,EAAA,6DAAgBC,EAAhB,+BAAwB,GAAII,EAA5B,+BAAmC,GAAnC,SACMH,MAAM,GAAD,OAAIP,KAAKE,QAAT,YAAoBI,GAAS,CACrDM,OAAQ,OACRC,MAAO,WACPC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUP,KAPR,cACXQ,EADW,gBASJA,EAAST,OATL,wFAYrBd,EAAIQ,UAAUgB,SAAd,sBAAyB,4CAAAd,EAAA,6DAAgBC,EAAhB,+BAAwB,GAAIc,EAA5B,+BAAwC,GAAxC,SACEb,MAAM,GAAD,OAAIP,KAAKE,QAAT,YAAoBI,GAAS,CACrDM,OAAQ,OACRC,MAAO,WACPE,KAAMK,IAJW,cACfF,EADe,gBAMRA,EAAST,OAND,wFAQVd,QChDT0B,E,WACF,aAA0B,oBAElBzB,SAASC,SAASC,OAAOC,SAAS,QAElCC,KAAKF,OAAS,wBAGdE,KAAKF,OAASF,SAASC,SAASC,OAGpCE,KAAKC,UAAYD,KAAKF,OAAS,UAC/BE,KAAKsB,OAAS,KACdtB,KAAKuB,eAAiB,KACtBvB,KAAKwB,cAAgB,GACrBxB,KAAKyB,QAAU,CACXxB,UAAWD,KAAKC,UAChByB,eAAgB1B,KAAK0B,gBAEzB1B,KAAK2B,IAAM,IAAIhC,EAAIK,KAAKyB,S,qDAE5B,SAAkBG,GACd5B,KAAKuB,eAAiBK,I,gEAG1B,4BAAAvB,EAAA,sEACoBL,KAAK2B,IAAIvB,IAAT,eAAqBJ,KAAKuB,eAA1B,uBADpB,OACQf,EADR,OAEIR,KAAKwB,cAAgBhB,EAAIqB,SACzB7B,KAAKwB,cAAcM,oBAAsBtB,EAAIsB,oBAC7C9B,KAAKwB,cAAcO,qBAAuBvB,EAAIuB,qBAC9C/B,KAAKgC,eAAiBhC,KAAKwB,cAAcS,eACzCjC,KAAKkC,eAAkBlC,KAAKwB,cAAcS,eAC1CjC,KAAKmC,WAAanC,KAAKwB,cAAcY,YACrCpC,KAAKqC,MAAQrC,KAAKwB,cAAca,MAChCrC,KAAKsC,WAAatC,KAAKwB,cAAcc,WACrCtC,KAAKuC,cAAgB/B,EAAI+B,cACzBvC,KAAKwC,cAAgBhC,EAAIiC,sBACzBzC,KAAK0C,iBAAmBlC,EAAIkC,iBAC5B1C,KAAK2C,SAAWnC,EAAImC,UAAY,SAEhC3C,KAAK4C,iBAAmB,GACpB5C,KAAKwB,cAAcqB,mBAAmB7C,KAAK4C,iBAAiBE,KAAK,qBACjE9C,KAAKwB,cAAcuB,iBAAiB/C,KAAK4C,iBAAiBE,KAAK,mBAjBvE,iD,0HAqBA,sBAAAzC,EAAA,sEAC8BL,KAAK2B,IAAIvB,IAAT,yBAD9B,OACIJ,KAAKgD,aADT,uD,6DAKW3B,I,OC6FA4B,E,kDA/Ib,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAkBRC,gBAAkB,SAACC,GAGjB,EAAKC,SAAS,CAAEC,UAAW,EAAKC,MAAMD,YAtBrB,EAwBlBE,UAAY,SAACJ,GACZA,EAAEK,OAAOC,MAAMrB,MAAQ,EAAKa,MAAMS,SAAStB,MAC3Ce,EAAEK,OAAOC,MAAME,gBAAkB,EAAKV,MAAMS,SAASC,iBA1BpC,EA4BnBC,SAAW,SAACT,GACVA,EAAEK,OAAOC,MAAMrB,MAAQ,EAAKa,MAAMS,SAASC,gBAC3CR,EAAEK,OAAOC,MAAME,gBAAkB,EAAKV,MAAMS,SAAStB,OA9BpC,EAiCnByB,IAAM,WACJ,EAAKZ,MAAMa,OACX,EAAKV,SAAS,CAACW,aAAa,KAnCX,EAsCnBC,gBAAkB,WAChB,EAAKd,kBACL,EAAKD,MAAMgB,kBACX,EAAKb,SAAS,CAACc,eAAe,EAAOC,WAAW,KAzC/B,EA4CnBC,UA5CmB,sBA4CN,sBAAAhE,EAAA,6DACX,EAAKgD,SAAS,CAACe,WAAW,IADf,SAEL,EAAKlB,MAAMa,OAFN,uBAGL,EAAKb,MAAMmB,YAHN,2CA5CM,EAkDnBC,aAAe,WACb,EAAKpB,MAAMqB,uBAjDX,EAAKhB,MAAQ,CACXD,UAAU,EACVa,eAAe,EACfC,WAAW,EACXJ,aAAa,GANE,E,0CA2GnB,WACE,IAAOhB,EAAgBhD,KAAKkD,MAArBF,aACP,OACE,sBAAKwB,UAAU,wCAAwCC,GAAG,wBAA1D,UACE,wBACCf,MAAO,CAAErB,MAAOrC,KAAKkD,MAAMS,SAAStB,OACnCmC,UAAU,kBACVE,QAAS1E,KAAKmD,gBAHhB,SAKE,mBAAGqB,UAAU,gBAEf,qBAAIA,UAAU,4BAA4BG,QAAQ3E,KAAKuD,MAAMD,SAA0BmB,GAAG,6BAA1F,UACE,6BACE,mBAAGA,GAAG,wBAAwBf,MAAO,CAACrB,MAAOrC,KAAKkD,MAAMS,SAASC,gBAAiBA,gBAAiB5D,KAAKkD,MAAMS,SAAStB,OAASqC,QAAS1E,KAAKsE,aAAeM,YAAa5E,KAAKwD,UAAWqB,WAAY7E,KAAK6D,SAA3M,SACEb,EAAa8B,eAAeC,sBAGhC,6BACE,mBAAGN,GAAG,oBAAoBf,MAAO,CAAEsB,QAAQhF,KAAKuD,MAAMY,cAAe,QAAS,OAAQ9B,MAAOrC,KAAKkD,MAAMS,SAASC,gBAAiBA,gBAAiB5D,KAAKkD,MAAMS,SAAStB,OAASqC,QAAS1E,KAAKiE,gBAAiBW,YAAa5E,KAAKwD,UAAWqB,WAAY7E,KAAK6D,SAA7P,SACCb,EAAa8B,eAAeG,kBAG/B,+BACE,mBAAGR,GAAG,0BAA0BC,QAAS1E,KAAK8D,IAAKJ,MAAO,CAAEsB,QAAQhF,KAAKuD,MAAMS,YAAa,QAAS,OAAS3B,MAAOrC,KAAKkD,MAAMS,SAASC,gBAAiBA,gBAAiB5D,KAAKkD,MAAMS,SAAStB,OAASuC,YAAa5E,KAAKwD,UAAWqB,WAAY7E,KAAK6D,SAAtP,SACCb,EAAa8B,eAAeI,WAE7B,mBAAGT,GAAG,0BAA0Bf,MAAO,CAAEsB,QAAQhF,KAAKuD,MAAMa,UAAW,QAAS,OAAQ/B,MAAOrC,KAAKkD,MAAMS,SAASC,gBAAiBA,gBAAiB5D,KAAKkD,MAAMS,SAAStB,OAASqC,QAAS1E,KAAKqE,UAAWO,YAAa5E,KAAKwD,UAAWqB,WAAY7E,KAAK6D,SAAzP,SACCb,EAAa8B,eAAeK,8B,GAvIlBC,a,eCFjBC,EAAc,aAIpBA,EAAYlF,UAAUmF,OAAS,WAC3B,OAAOtE,KAAKC,UAAUjB,OAE1B,IAAMuF,EAAqB,SAASC,GAChCxF,KAAKyF,KAAOD,EAAQE,SACpB1F,KAAK4B,QAAU4D,EAAQ5D,QACvB5B,KAAK2F,KAAO,WAIhBJ,EAAmBpF,UAAUyF,WAAa,aAG1CL,EAAmBpF,UAAU0F,WAAa,SAASC,EAASH,GAA8B,IAAxBI,EAAuB,wDAANN,EAAM,uCACjFO,EAAM,IAAIX,EAMd,OALAW,EAAIP,KAAOA,GAAQzF,KAAKyF,KACxBO,EAAIC,WAAajG,KAAK4B,QACtBoE,EAAIL,KAAOA,GAAQ3F,KAAK2F,KACxBK,EAAIE,QAAUH,EACdC,EAAIF,QAAUA,EACPE,GAGXT,EAAmBpF,UAAUgG,YAAc,WACvC,IAAIH,EAAM,IAAIX,EAKd,OAJAW,EAAIP,KAAOzF,KAAKyF,KAChBO,EAAIC,WAAajG,KAAK4B,QACtBoE,EAAIL,KAAO,OACXK,EAAIF,QAAU,YACPE,GAGXT,EAAmBpF,UAAUiG,wBAA0B,WACnD,IAAIJ,EAAM,IAAIX,EAKd,OAJAW,EAAIP,KAAOzF,KAAKyF,KAChBO,EAAIC,WAAajG,KAAK4B,QACtBoE,EAAIL,KAAO,aACXK,EAAIF,QAAU,qBACPE,GAIXT,EAAmBpF,UAAUkG,YAAc,SAASC,EAAUC,GAC1D,IAAIP,EAAM,IAAIX,EAMd,OALAW,EAAIP,KAAOzF,KAAKyF,KAChBO,EAAIC,WAAajG,KAAK4B,QACtBoE,EAAIL,KAAO,OACXK,EAAIF,QAAUQ,EACdN,EAAIO,UAAYA,EACTP,GAIIT,Q,iBCzDTiB,E,iGA8CJ,SAAoBC,GAClB,OAAOC,OAAOD,GAAOE,QAAQ,O,KA/C3BH,EACGI,YAAc,SAACd,GACpB,IAAKA,EAAS,MAAO,GAUrB,OARkBA,EAAQe,QADX,oCAC6B,SAAUC,GACpD,IAAIC,EAAYD,EAIhB,OAHKC,EAAUC,MAAM,gBACnBD,EAAY,UAAYA,GAEnB,YAAcA,EAAY,+CAAiDD,EAAM,WATxFN,EAeGS,mBAAqB,SAACnB,GAC3B,OAAKA,EACEA,EAAQe,QAAQ,MAAO,SADT,IAhBnBL,EAoBGU,kBAAoB,SAACC,GAU1B,OADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,EAAOA,EAAKN,QAAQ,8BAA+B,KACvCA,QAAQ,gCAAiC,KACzCA,QAAQ,YAAa,OACrBA,QAAQ,WAAY,OACpBA,QAAQ,SAAU,UAClBA,QAAQ,WAAY,OACpBA,QAAQ,UAAW,OACnBA,QAAQ,iBAAkB,OAC1BA,QAAQ,YAAa,KA7B/BL,EAiCGY,aAAe,SAACN,GACrB,IAAIO,EAAS,GASb,OARCP,EAAM,KAAKQ,MAAM,KAAK,GAAGA,MAAM,KAAKC,SACnC,SAAUC,IACRA,GAAQA,EAAO,KAAKF,MAAM,KAAKG,IAAIC,qBAC1B,GAAGC,SACVN,EAAOG,EAAK,IAAMA,EAAK,OAItBH,GAQIb,Q,QC7CAoB,EAJF,SAAC1E,GACV,OAAO2E,YAAM3E,EAAM4E,O,gBC+BRC,E,kDA/BX,WAAY7E,GAAQ,IAAD,8BACf,cAAMA,IAOV8E,aAAc,SAACC,EAAe7E,GAC1B,EAAKC,SAAS,CAAE6E,MAAOD,KAPvB,EAAK1E,MAAQ,CAAE2E,MAAO,GAFP,E,qDAInB,WACI,IAAIC,EAAcnI,KAAKkD,MAAMiF,YAC7BnI,KAAKqD,SAAS,CAAE6E,MAAOC,M,oBAK3B,WAAU,IAAD,OAEL,OAAS,mCACT,cAACC,EAAA,EAAD,CAAUD,YAAanI,KAAKuD,MAAM2E,MAAOG,SAAUrI,KAAKgI,aAAxD,SACKhI,KAAKkD,MAAMoF,OAAOb,KAAI,SAACc,EAAOL,GAC3B,OACI,cAACE,EAAA,EAASI,KAAV,UACI,qBACIhE,UAAU,gBACViE,IAAG,UAAK,EAAKvF,MAAMpD,QAAhB,OAAyByI,EAAMG,KAAK5B,KACvC6B,IAAKJ,EAAMK,yB,GAtBTxD,aC2BfyD,E,kDAzBX,WAAY3F,GAAQ,IAAD,8BACf,cAAMA,IAIV4F,YAAc,WACV,EAAK5F,MAAM4F,eAJX,EAAKvF,MAAQ,GAFE,E,0CAQnB,WACI,OACI,mCACI,cAACwF,EAAA,EAAD,CAAOC,KAAMhJ,KAAKkD,MAAM+F,UAAWC,OAAQlJ,KAAK8I,YAAhD,SACI,cAACC,EAAA,EAAMI,KAAP,UACI,cAAC,EAAD,CACIb,OAAQtI,KAAKkD,MAAMoF,OACnBxI,OAAQE,KAAKkD,MAAMpD,OACnBqI,YAAanI,KAAKkD,MAAMiF,wB,GAjBnB/C,aC8GlBgE,E,kDA3Gb,WAAYlG,GAAQ,IAAD,8BACjB,cAAMA,IAURmG,uBAAyB,SAACnB,EAAOI,GAC/B,EAAKjF,SAAS,CAAEiG,WAAYpB,EAAOe,WAAW,EAAMM,YAAajB,KAZhD,EAcnBkB,wBAA0B,WACxB,EAAKnG,SAAS,CAAE4F,WAAW,KAb3B,EAAK1F,MAAQ,CACXmC,SAAU,EAAKxC,MAAMuG,SACrBC,SAAU,EAAKxG,MAAMyG,SAASlE,OAAS,EAAKC,SAAW,SAAW,SAClEkE,UAAW,EAAK1G,MAAMuC,OAAS,EAAKC,SAAW,SAAW,SAC1D4D,WAAY,KACZL,WAAW,EACXM,YAAa,IARE,E,0CAkBnB,WAAU,IAAD,OACDM,EAAiB7J,KAAKkD,MAAtB2G,aAEN,OACE,sBAAKrF,UAAWxE,KAAKkD,MAAM4G,QAA3B,UACE,cAAC,EAAD,CACCb,UAAWjJ,KAAKuD,MAAM0F,UACtBd,YAAanI,KAAKuD,MAAM+F,WACxBhB,OAAQtI,KAAKuD,MAAMgG,YACnBT,YAAa9I,KAAKwJ,wBAClB1J,OAAQ+J,EAAa/J,SACQ,SAA7BE,KAAKkD,MAAMyG,SAAShE,KACnB,mBAAGoE,UAAQ,EAACtG,OAAO,SAASuG,IAAI,aAAaC,KAAMzD,EAAUS,mBAAmBjH,KAAKkD,MAAMyG,SAAS7D,SAApG,mBAAkH9F,KAAKkD,MAAMyG,SAASlE,KAAtI,YAA8IoE,EAAa7G,aAAa8B,eAAeoF,eAGvL,cAAC,EAAD,CAAMpC,KAAMtB,EAAUS,mBAAmBT,EAAUI,YAAY5G,KAAKkD,MAAMyG,SAAS7D,YAEnF9F,KAAKkD,MAAMyG,SAASrB,OAAU,qBAAK5E,MAAO,CAACyG,oBAAqB,uBAAwB3F,UAAU,cAApE,SAC5BxE,KAAKkD,MAAMyG,SAASrB,OAAOb,KAAI,SAACc,EAAOL,GACvC,OAAO,qBAAK1D,UAAU,YAAf,SACL,qBAAKiE,IAAG,UAAKoB,EAAa/J,QAAlB,OAA2ByI,EAAMG,KAAK5B,KAAOpC,QAAS,WAAQ,EAAK2E,uBAAuBnB,EAAO,EAAKhF,MAAMyG,SAASrB,SAAU5E,MAAO,CAAC0G,YAAaP,EAAaxH,OAAQmC,UAAU,yBAIvL,GAGRxE,KAAKkD,MAAMyG,SAASU,MAASrK,KAAKkD,MAAMyG,SAASU,MAAM5C,KAAI,SAACiB,GAC1D,OACE,8BACE,mBAAGqB,UAAQ,EAACtG,OAAO,SAASuG,IAAI,aAAaC,KAAMvB,EAAK5B,IAAxD,SAA8D4B,EAAK4B,YAGnE,GAEPtK,KAAKkD,MAAMyG,SAASY,SACnB,qBAAK9F,GAAG,+BAA+BD,UAAU,OAAjD,SACGxE,KAAKkD,MAAMyG,SAASY,SAAS9C,KAAI,SAAA+C,GAChC,OAAQ,sBAAKhG,UAAU,iBAAf,UACN,sBAAKA,UAAU,SAAf,UAAwB,iCAASgG,EAAQC,QAAzC,OACA,qBAAKjG,UAAU,SAAf,SACE,mBAAGyF,KAAK,IAAIvF,QAAS,kBAAM,EAAKxB,MAAMwH,UAAUF,IAAUhG,UAAU,kBAAkB,kBAAiBgG,EAAQ/F,GAAIf,MAAO,CAAErB,MAAOwH,EAAavH,WAAYsB,gBAAiBiG,EAAaxH,OAA1L,SACE,mBAAGmC,UAAU,4BAGjB,uBAAME,QAAS,WAAO,EAAKxB,MAAMyH,kBAAkBH,IAAnD,cAA+D,mBAAGhG,UAAU,oBAAoB,cAAY,SAA5G,SAPM,uBAAqDgG,EAAQ/F,UAYvE,GAEHzE,KAAKkD,MAAMyG,SAASiB,eACnB,8BACM5K,KAAKkD,MAAMyG,SAASiB,eAAenD,KAAI,SAACoD,EAAKC,GAC/C,OACE,gCACE,uBACCD,EAAIE,YAAcF,EAAIE,WAAWpD,OAAS,EAAI,mBAAGsC,MAAS,gBAAgBe,KAAKH,EAAIE,YAAwB,GAAX,WAAiBF,EAAIE,WAAYvG,UAAU,gBAAgBf,OAAO,SAASC,MAAO,CAAEE,gBAAiBiG,EAAaxH,MAAOA,MAAOwH,EAAavH,YAA/L,SAA6M,cAAC,EAAD,CAAMwF,KAAM+C,EAAI/C,SAC1Q,yBAAQtD,UAAU,gBAAgBd,MAAO,CAAEE,gBAAiBiG,EAAaxH,MAAOA,MAAOwH,EAAavH,YAAcoC,QAAS,EAAKxB,MAAM+H,wBAAtI,UAA+J,cAAC,EAAD,CAAMnD,KAAI,OAAE+C,QAAF,IAAEA,OAAF,EAAEA,EAAK/C,OAAhL,OAEF,yBALF,yBAA4BgD,SAahC,GAE2B,SAA7B9K,KAAKkD,MAAMyG,SAAShE,MAAgD,YAA7B3F,KAAKkD,MAAMyG,SAAShE,KACzD,gCACE,uBACA,sBAAKnB,UAAS,kBAAaxE,KAAKuD,MAAMmG,UAAtC,cAAoDwB,IAAOlL,KAAKkD,MAAMyG,SAASwB,UAAYnL,KAAKkD,MAAMyG,SAASwB,UAAY,IAAIC,QAAQC,OAAO,qBAC9I,sBAAK7G,UAAS,kBAAaxE,KAAKuD,MAAMqG,WAAtC,UAAoD5J,KAAKkD,MAAMyG,SAASlE,KAAxE,OACCzF,KAAKkD,MAAMyG,SAASlE,OAASzF,KAAKkD,MAAMuG,SACvC,8BACGzJ,KAAKkD,MAAMoI,SAAS7D,KAAI,SAAC8D,EAAMT,GAC9B,OAAQ,sBAA4BtG,UAAS,kBAAa,EAAKjB,MAAMqG,WAA7D,UAA2E2B,EAA3E,0BAAuBT,SAGjC,MAEJ,U,GAvGQ1F,aC6DPoG,E,kDA9DX,WAAYtI,GAAQ,IAAD,8BACf,cAAMA,IAUVuI,aAAe,SAACC,EAAOC,GACnB,IAAIpI,EAAQ,EAAKA,MAEjBA,EADgBmI,EAAMjI,OAAO6G,MACVoB,EAAMjI,OAAOmI,MAChC,EAAKvI,SAAL,eAAmBE,KAfJ,EAkBnBsI,UAAY,WACR,IAAIC,EAAQ,EAAKvI,MAAMuI,MACnBhG,EAAU,EAAKvC,MAAMwI,aACrBjF,EAAM,QAAU,EAAK5D,MAAM2G,aAAatI,eAAiB,2BACzDb,EAAO,CAAEoL,MAAOA,EAAOhG,QAASA,IACpC,IAAInG,GAAMgB,KAAKmG,EAAKpG,GACpB,EAAKwC,MAAM8I,YAxBI,EA2BnBC,OA3BmB,sBA2BV,sBAAA5L,EAAA,sEACA,EAAK6C,MAAM8I,WADX,OAEL,EAAK9I,MAAMmB,YAFN,2CAzBL,EAAKd,MAAQ,CACTuI,MAAO,GACPC,aAAc,IAJH,E,qDAOnB,WACI/L,KAAKqD,SAAS,CAAE0I,aAAc/L,KAAKkD,MAAMgJ,e,oBAwB7C,WACI,IAAMlJ,EAAehD,KAAKkD,MAAM2G,aAAa7G,aAAa8B,eACpDzC,EAAQrC,KAAKkD,MAAMiJ,QACzB,OACI,sBAAK1H,GAAG,wBAAwBD,UAAU,uDAA1C,UACI,gCACE,gCAAQxB,EAAaoJ,0BACrB,uBAAOzG,KAAK,QAAQ2E,KAAK,QAAQ+B,SAAUrM,KAAKyL,aAAcG,MAAO5L,KAAKuD,MAAMuI,MAAOQ,YAAatJ,EAAauJ,kBAAmB/H,UAAU,gCAAgCC,GAAG,4BACjL,uBAAM,uBACN,0BAAU6H,YAAatJ,EAAawJ,gBAAiBhI,UAAU,iCAAiCiI,KAAK,IAAIhI,GAAG,4BAA4B6F,KAAK,eAAe+B,SAAUrM,KAAKyL,aAAcG,MAAO5L,KAAKuD,MAAMwI,eAC3M,uBACA,uBAAOpG,KAAK,SAASlB,GAAG,wBAAwB6F,KAAK,6BAEvD,sBAAK9F,UAAU,OAAf,UACE,sBAAKA,UAAU,kCAAf,UACI,yBAAQC,GAAG,yBAAyBD,UAAU,OAAOd,MAAO,CAAEE,gBAAiBvB,EAAOqK,OAAQ,OAAYhI,QAAS1E,KAAK6L,UAAxH,UAAoI7I,EAAa2J,iBAAjJ,QACA,yBACA,wBAAQlI,GAAG,2BAA2BD,UAAU,OAAOd,MAAO,CAAEE,gBAAiBvB,EAAOqK,OAAQ,OAAUhI,QAAS1E,KAAKiM,OAAxH,SAAkIjJ,EAAa4J,wBAEnJ,sBAAKpI,UAAU,aAAf,wBACe,mBAAGyF,KAAK,sBAAsBxG,OAAO,SAASuG,IAAI,aAAatG,MAAO,CAAEmJ,SAAU,YAAlF,0BACX,qBAAKrI,UAAU,iD,GAvDPY,a,iBCOxB0H,E,kDACJ,WAAY5J,GAAQ,IAAD,8BACjB,cAAMA,IAkDR6J,sBAAwB,SAAC7L,IACjB,EAAKqC,MAAMyJ,cAAiB,EAAKzJ,MAAMsG,aAAa3H,eACxD,EAAK+K,kBAGP/L,EAASgM,SAAW,EAAKC,kBACzBjM,EAASkM,SAAU,EAEnB,EAAK/J,SAAS,CAAEgK,YAAanM,EAASU,UACtC,EAAKyB,SAAS,CAAEiK,WAAYpM,EAASqM,SACrCC,OAAOC,QAAQC,KAAKxM,GAEpByM,YAAW,WACT,IAAM7G,EAAM,EAAKvD,MAAMsG,aAAa5J,UAAxB,2CAAwE,EAAKsD,MAAM8J,aAC/F9M,MAAMuG,EAAK,CACT,eAAgB,uBAEjB,MApEc,EA0EnB8G,2BAA6B,WAAsB,IAArBC,EAAoB,uDAAV,IAClCC,EAAgB,EAAKvK,MAAMsG,aACI,GAA/BiE,EAAcvL,eAAyD,GAA/BuL,EAAc5L,cAExD,EAAKgB,MAAM6K,0BAGX,EAAK1K,SAAS,CACZ2K,eAAgBL,YAAW,WACzB,EAAKM,aACL,EAAK5K,SAAS,CAAE6K,mBAAmB,MAClCL,MArFU,EA2FnBM,gBAAkB,SAACzN,GACjB,IAAIoN,EAAgB,EAAKvK,MAAMsG,aACN,GAArBnJ,EAAK0N,aAEP,EAAKR,2BAA2B,IAIhCE,EAAc5L,eAAgB,EAC9B4L,EAAc9L,gBAAiB,EAC/B,EAAKqB,SAAS,CAAEwG,aAAciE,IAAiB,WAC7C,EAAKb,kBACL,EAAKW,kCAvGQ,EA2GnBT,kBAAoB,SAACxD,GACnB,GAAsB,cAAlBA,EAAShE,KAAb,CAIA,IAAI0I,EAAazO,SAAS0O,eAAe,0BAEzC,GADA,EAAKjL,SAAS,CAAEkL,aAAa,IACP,oBAAlB5E,EAAShE,KAA4B,CACvC0I,EAAazO,SAAS0O,eAAe,0BACnBE,aAAaC,QAAQ,qBAGrCD,aAAaE,QAAQ,kBAAmB,QACxCL,EAAWM,UAAYhF,EAASlE,KAAO,EAAKlC,MAAMsG,aAAa7G,aAAa8B,eAAe8J,YAAc,uGACzG,EAAKvL,SAAS,CACZ2K,eAAgBL,YAAW,WACR/N,SAAS0O,eAAe,0BAC9BK,UAAY,GAEvBH,aAAaK,WAAW,qBACvB,YAIJ,CACmB,SAAlBlF,EAAShE,MACX,EAAKtC,SAAS,CAAEyL,YAAa,EAAKvL,MAAMuL,YAAc,IACtDnF,EAAS7D,QAAT,UAAsB6D,EAASlE,KAA/B,YAAuC,EAAKlC,MAAMsG,aAAa7G,aAAa8B,eAAeiK,WACvF,EAAKxL,MAAMuL,YAAc,IAE3B,EAAKzL,SAAS,CAAE2J,cAAc,IAC9B,EAAKC,oBAGkB,SAAlBtD,EAAShE,MAChB,EAAKtC,SAAS,CAAEyL,YAAa,EAAKvL,MAAMuL,YAAc,IAClD,EAAKvL,MAAMyJ,aACbrD,EAAS7D,QAAT,UAAsB6D,EAASlE,KAA/B,YAAuC,EAAKlC,MAAMsG,aAAa7G,aAAa8B,eAAekK,WAE3FrF,EAAS7D,QAAT,UAAsB6D,EAASlE,KAA/B,YAAuC,EAAKlC,MAAMsG,aAAarI,cAAcyN,iBAE/E,EAAK5L,SAAS,CAAE2J,cAAc,EAAMkC,UAAWvF,EAASlE,OACxD0J,aAAa,EAAK5L,MAAMyK,gBACxB,EAAKf,mBAEoB,oBAAlBtD,EAAShE,OAChBgE,EAAS7D,QAAT,UAAsB,EAAKvC,MAAMsG,aAAa7G,aAAa8B,eAAesK,mBACtEzF,EAASlE,OAAS,EAAKC,WACzB2I,EAAWgB,UAAY,IAEzB,EAAKC,yBAAyB,EAAKnB,kBAErC,MAAoC,EAAK5K,MAAnCgM,EAAN,EAAMA,SAAUC,EAAhB,EAAgBA,gBACZ7F,GAAU4F,EAASzM,KAAK6G,GAC5B6F,EAAkB,EAAKC,oBACvB,EAAKpM,SAAS,CAAEkM,WAAUC,oBACtB7F,EAAS+F,mBAAqB/F,EAASgG,oBACzC,EAAKtM,SAAS,CAAEuM,yBAAyB,EAAMC,wBAAyBlG,EAASgG,qBAE/EhG,EAASlE,OAAS,EAAKlC,MAAMmC,WAC/B2I,EAAWgB,UAAY,IAI3B,EAAKpB,eA3KY,EAiLnBqB,yBAjLmB,uCAiLQ,WAAOnB,GAAP,qBAAA9N,EAAA,6DAErByP,EAAc,GAEhBA,EADmD,YAAjD,EAAKvM,MAAMsG,aAAarI,cAAc6J,OAC1B,EAAK9H,MAAMsG,aAAarI,cAAcM,oBAAoB2F,KAAI,SAAAsI,GAC1E,MAAO,CAAEC,MAAOD,EAAMtF,MAAOmB,MAAO,EAAKrI,MAAM0M,IAAEC,UAAUH,EAAMtF,YAIrD,CACZ,CAAEuF,MAAO,OAAQpE,MAAO,EAAKrI,MAAMmC,WAGnC2B,EAAS,CACXnB,SAAS,EACTD,WAAY,EAAK1C,MAAM8J,YACvB/C,KAAM,EAAK/G,MAAMmC,SACjBoG,MAAO,EAAKvI,MAAMuI,MAClBqE,MAAO,EAAK5M,MAAM4M,MAClBC,oBAAqBN,EACrBrN,sBAAuB,EAAKc,MAAMsG,aAAarH,eAG7ClC,EAvBqB,gBAuBJ,EAAKiD,MAAMsG,aAAatI,eAvBpB,sCAwBT,IAAI5B,GAAMgB,KAAKL,EAAO+G,GAxBb,OAwBrB7G,EAxBqB,OAyBzB2N,EAAgB3N,GAzBS,2CAjLR,wDAwNnByK,wBAA0B,SAAC7H,GACzB,EAAKiN,YAAYjN,EAAEK,OAAO4L,YAzNT,EA4NnBgB,YAAc,WAAoB,IAAnBC,EAAkB,uDAAP,GAIxB,GAHwB,IAApBA,EAAS3I,SACX2I,EAAW,EAAK/M,MAAMsC,YAEpByK,EAAS3I,OAAS,EAAG,CACvB,IAAI3B,EAAM,EAAKzC,MAAMgN,eAAe1K,WAAWyK,EAAU,KAAM,EAAK/M,MAAMsG,aAAa7H,gBACnF1B,EAAQ,EAAKkQ,eACjB,IAAI7Q,GAAMgB,KAAKL,EAAO0F,GACtB,EAAK3C,SAAS,CAAEwC,WAAY,OApOb,EA0OnB2K,YAAc,WACZ,OAAO,EAAKjN,MAAM8J,YAAc,aA3Of,EA8OnBY,WAAa,WACP,EAAKwC,uBACP,EAAKA,sBAAsBC,eAAe,CAAEC,SAAU,SAAUC,MAAO,MAAOC,OAAQ,aAhPvE,EAoPnBC,eAAiB,WACf,IAAI,EAAKvN,MAAMwN,SAAf,CACA,EAAK1N,SAAS,CAAE0N,UAAU,IAC1B,IAAI/K,EAAM,EAAKzC,MAAMgN,eAAepK,cAChC7F,EAAQ,EAAKkQ,eACjB,IAAI7Q,GAAMgB,KAAKL,EAAO0F,GAEtB,OADiB,OA1PA,EA8PnBgG,SA9PmB,sBA8PR,4BAAA3L,EAAA,0DACL,EAAKkD,MAAMyJ,aADN,gBAEP,EAAK8D,iBAFE,0BAIH,EAAKvN,MAAM8J,YAJR,uBAKD/M,EALC,gBAKgB,EAAKiD,MAAMsG,aAAatI,eALxC,kCAKgFyP,mBAAmB,EAAKzN,MAAM8J,cAL9G,UAMC,IAAI1N,GAAMS,IAAIE,GANf,2CA9PQ,EAwQnB2Q,qBAAuB,WAErB,OAAO,EAAK1N,MAAM8J,YAAc,mBA1Qf,EA6QnB6D,eAAiB,WACf,IAAIlL,EAAM,EAAKzC,MAAMgN,eAAe1K,WAAW,mBAC3CvF,EAAQ,EAAK2Q,wBACjB,IAAItR,GAAMgB,KAAKL,EAAO0F,IAhRL,EAmRnBmL,WAAa,SAACzF,GAEI,KADFA,EAAM0F,SAElB,EAAKF,kBAtRU,EA2RnBG,cAAgB,SAAC3F,GACf,EAAKuB,kBACL,EAAKoD,eA7RY,EAgSnBhM,UAhSmB,uCAgSP,WAAOjB,GAAP,+BAAA/C,EAAA,6DACN+C,GACFA,EAAEkO,iBAEAhH,EAAO,YAC0C,YAAjD,EAAK/G,MAAMsG,aAAarI,cAAc6J,SACxCf,EAAO,EAAK/G,MAAM0M,IAAEC,UAAF,UAAY,EAAK3M,MAAMsG,aAAarI,cAAcM,oBAAoB,UAAtE,aAAY,EAA8D2I,SAE9F,EAAKpH,SAAS,CACZkO,iBAAiB,EACjBC,UAAU,EACV9L,SAAU,EAAKnC,MAAMmC,SAASiC,OAAS,EAAI,EAAKpE,MAAMmC,SAAW4E,EACjEiG,eAAgB,IAAIhL,EAAmB,CACrCG,SAAU,EAAKnC,MAAMmC,SAASiC,OAAS,EAAI,EAAKpE,MAAMmC,SAAW4E,EACjE1I,QAAS,EAAK2B,MAAM8J,YACpBvB,MAAO,EAAKvI,MAAMuI,MAClBqE,MAAO,EAAK5M,MAAM4M,UAGtB,EAAKjN,MAAMuO,gBAAe,GACtB,EAAKlO,MAAMsG,aAAa3H,eAC1B,EAAK0L,6BAEHkC,EAAc,GAEhBA,EADmD,YAAjD,EAAKvM,MAAMsG,aAAarI,cAAc6J,OAC1B,EAAK9H,MAAMsG,aAAarI,cAAcM,oBAAoB2F,KAAI,SAAAsI,GAC1E,MAAO,CAAEC,MAAOD,EAAMtF,MAAOmB,MAAO,EAAKrI,MAAM0M,IAAEC,UAAUH,EAAMtF,YAIrD,CACZ,CAAEuF,MAAO,OAAQpE,MAAOtB,IAGxBjD,EAAS,CACXnB,QAAS,EAAK3C,MAAMsG,aAAa7H,eACjCsI,KAAMA,EACNwB,MAAO,EAAKvI,MAAMuI,MAClBqE,MAAO,EAAK5M,MAAM4M,MAClBC,oBAAqBN,EACrBrN,sBAAuB,EAAKc,MAAMsG,aAAarH,eAG7ClC,EA3CM,eA2CU,EAAKiD,MAAMsG,aAAatI,eA3ClC,6BA4CM,IAAI5B,GAAMgB,KAAKL,EAAO+G,GA5C5B,QA4CN7G,EA5CM,OA8CN,EAAK+C,MAAMsG,aAAa1H,WAAWwF,OAAS,IAC1C3B,EAAM,EAAKzC,MAAMgN,eAAe1K,WAAW,EAAKtC,MAAMsG,aAAa1H,WAAY,UAAW,EAAKoB,MAAMsG,aAAa7H,eAAgB,EAAKuB,MAAMsG,aAAarI,cAAckQ,WACxK,EAAKnO,MAAMsG,aAAa7H,gBAAkB,EAAKuB,MAAMsG,aAAarI,cAAcmQ,yBAClF3L,EAAI4E,eAAiB,EAAKrH,MAAMsG,aAAarI,cAAcO,qBAAqB0F,KAAI,SAAAoD,GAAQ,MAAM,CAAE/C,KAAM+C,EAAIJ,WAE5GmH,EAAU1G,IACdlF,EAAImF,UAAYyG,IAAUxG,QAAQC,UAC9BwG,EAAO,EAAKtO,MAAMgM,UACjBzM,KAAKkD,GACV,EAAK3C,SAAS,CAAEkM,SAAUsC,KAE5B,EAAK3O,MAAM4O,iBACX,EAAK/E,sBAAsBvM,GA1DjB,4CAhSO,wDA6VnByM,gBAAkB,SAACvB,GAAW,IAAD,EAC6C,GAAnE,EAAKnI,MAAMyJ,eAAZ,UAA4B,EAAKzJ,MAAMsG,oBAAvC,aAA4B,EAAyB3H,gBACvD,EAAKmB,SAAS,CAAE0O,yBAAyB,KACpC,EAAKxO,MAAMyJ,eAAZ,UAA4B,EAAKzJ,MAAMsG,oBAAvC,aAA4B,EAAyB3H,gBACvD,EAAKmB,SAAS,CAAE0O,yBAAyB,KAI3C,EAAK1O,SAAS,CAAE0O,yBAAyB,KArW1B,EAsXnBC,iBAAmB,aAtXA,EAyXnBvG,aAAe,SAACC,EAAOC,GACrB,IAAIpI,EAAQ,EAAKA,MAEjBA,EADgBmI,EAAMjI,OAAO6G,MACVoB,EAAMjI,OAAOmI,MAChC,EAAKvI,SAAL,eAAmBE,KA7XF,EA+XnB0O,WAAa,WACX,EAAKC,UAAUC,SAhYE,EAkYnBC,iBAlYmB,uCAkYA,WAAOhP,GAAP,uBAAA/C,EAAA,6DAGbqI,EAAOtF,EAAEK,OAAO4G,MAAM,IAGtBgI,EAAW,IAAIC,UACVC,OAAO,SAAU7J,EAAMA,EAAK4B,MAPpB,UASI,IAAI3K,GAAMwB,SAAS,kBAAmBkR,GAT1C,OASbnR,EATa,OAUjB,EAAKqC,MAAMiP,iBAAiB1P,KAAK5B,EAASoF,UACtCN,EAAM,EAAKzC,MAAMgN,eAAelK,YAAYnF,EAASoF,SAAUpF,EAASqF,WACxEjG,EAAQ,EAAKkQ,eACjB,IAAI7Q,GAAMgB,KAAKL,EAAO0F,GAbL,4CAlYA,wDAmZnByM,oBAAsB,WACpB,EAAKpP,SAAS,CAAEqP,yBAAyB,KApZxB,EAsZnBjD,kBAAoB,WAClB,IAAIvD,EAAa,GA+BjB,OA9BA,EAAK3I,MAAMgM,SAAShI,SAAQ,SAAAzB,GAC1B,IAAI6M,EAAYnM,EAoBhB,GAnBGV,GAAWA,EAAQA,UACtBoG,GAAcyG,EAAUzL,kBAAV,OAA4BpB,QAA5B,IAA4BA,OAA5B,EAA4BA,EAASA,SACnDoG,GAAc,MAEVpG,GAAWA,EAAQuE,OACrBvE,EAAQuE,MAAM9C,SAAQ,SAAAmB,GACpBwD,GAAcxD,EAAK5B,IACnBoF,GAAc,QAGdpG,GAAWA,EAAQ8E,gBACrB9E,EAAQ8E,eAAerD,SAAQ,SAAAsD,GAC7BqB,GAAcrB,EAAI/C,KACf+C,EAAIE,YAAcF,EAAIE,WAAWpD,OAAS,IAC3CuE,GAAU,YAAUrB,EAAIE,WAAd,OAEZmB,GAAc,QAGdpG,GAA4B,SAAjBA,EAAQH,KAAiB,CACtC,IAAIiN,EAAU1H,IACdgB,GAAc0G,EAAQ9M,EAAQqF,UAAYrF,EAAQqF,UAAY,IAAIC,QAAQC,OAAO,kBACjFa,GAAc,KACdA,GAAcpG,EAAQL,KACtByG,GAAc,KAEhBA,GAAc,QAETA,GAtbU,EAybnB5H,aAAe,WACb,EAAKuO,aAAaV,SA1bD,EA6bnBW,aA7bmB,sBA6bJ,wDAAAzS,EAAA,6DAAO0S,EAAP,gCAA2BxI,EAA3B,+BAAsC,GAAIyI,EAA1C,+BAAgD,GAAIvI,EAApD,+BAA0D,IACjEwI,EAAY,IACT,WAAiB,EAAK1P,MAAM8J,YACrC4F,EAAS,iBAAuB,EAAK1P,MAAMsG,aAAatI,eACxD0R,EAAS,oBAA0B,GACnCA,EAAS,oBAAwB,GAAK,GACtCA,EAAS,oBAAwB,GAAjC,MAA+CxI,EAC/CwI,EAAS,oBAAwB,GAAjC,aAAsD,OAClD,EAAK1P,MAAMsM,wBAAwBlI,OAAS,GAAsB,IAAjB8C,EAAM9C,SACzDsL,EAAS,oBAAwB,GAAjC,MAA+C,EAAK1P,MAAMsM,yBAE5DoD,EAAS,oBAAwB,GAAjC,GAA4C,WAC5CA,EAAS,oBAAwB,GAAjC,KAA8C,EAAK1P,MAAMmC,SACzDuN,EAAS,wBAA8B,EAAK1P,MAAMiP,iBAC9C,EAAKjP,MAAMuI,MAAMnE,OAAS,IAAGsL,EAAS,oBAAwB,GAAjC,KAA8C,EAAK1P,MAAMuI,OACtFI,EAAa,GACoC,YAAjD,EAAK3I,MAAMsG,aAAarI,cAAc6J,OACxC,EAAK9H,MAAMsG,aAAarI,cAAcM,oBAAoByF,SAAQ,SAAAwI,GAChE7D,GAAU,UAAO6D,EAAMtF,MAAb,cAAwB,EAAKlH,MAAM0M,IAAEC,UAAUH,EAAMtF,QAArD,SAIZyB,GAAU,UAAO,EAAK3I,MAAMsG,aAAa7G,aAAakQ,iBAAiB5I,KAA7D,cAAuE,EAAK/G,MAAMmC,SAAlF,MAEZwG,GAAU,KACP,EAAK3I,MAAMsC,WAAW8B,OAAS,IAC5B3B,EAAM,EAAKzC,MAAMgN,eAAe1K,WAAW,EAAKtC,MAAMsC,YACzC,EAAKtC,MAAjBgM,SACIzM,KAAKkD,IAEhBkG,GAAc,EAAKuD,qBACD,IAAfsD,IACD7G,GAAU,UAAQ,EAAK3I,MAAMsG,aAAa7G,aAAa8B,eAAeqO,cAAcC,cAA1E,QACV7I,EAAShD,SAAQ,SAAAiD,GACf0B,GAAU,UAAO1B,EAAQC,MAAf,oCAAgDD,EAAQ6I,SAAxD,YAAoE,EAAK9P,MAAMsG,aAAa7G,aAAa8B,eAAeqO,cAAcG,MAAtI,oCAAuK9M,EAAU+M,aAAa/I,EAAQ/D,QAAtM,OAA+M,EAAKlD,MAAMsG,aAAalH,SAAvO,SAEZuJ,GAAU,YAAS,EAAK3I,MAAMsG,aAAa7G,aAAa8B,eAAeqO,cAAcK,MAA3E,aAAqFhN,EAAU+M,aAAaP,IAA5G,OAAmH,EAAKzP,MAAMsG,aAAalH,SAA3I,OAIZsQ,EAAS,oBAAwB,GAAjC,YAAqD/G,EACrD+G,EAAS,KAAW,OACdnM,EAAM,8BACZ,EAAK5D,MAAMuQ,wBAAuB,GA3CrB,WA4CW,IAAI9T,GAAMgB,KAAKmG,EAAKmM,GA5C/B,eA4CTS,EA5CS,OA6Cb,EAAKrQ,SAAU,CAAEuM,yBAAyB,EAAOC,wBAAyB,KACrEkD,IACN,EAAK7P,MAAMuQ,wBAAuB,GAClC,EAAKvQ,MAAMa,QAEV,EAAKiI,WAlDQ,kBAqDN0H,EAAYjP,IArDN,4CA7bI,EAqfnBkP,YArfmB,sBAqfL,oDAAAtT,EAAA,6DAAOuT,EAAP,+BAAiB,KAAMC,EAAvB,+BAAoC,KAAMtJ,EAA1C,+BAAqD,GAAIuJ,EAAzD,+BAA2E,GAAIC,EAA/E,+BAA+F,GAAIf,EAAnG,+BAAuG,IAC/GtS,EAAO,IACP,YAAkBmT,EACtBnT,EAAI,gBAAsBoT,EAC1BpT,EAAI,mBAAyBqT,EAAgBtP,GAC7C/D,EAAI,QAAckT,EAClBlT,EAAI,SAAe,EAAK6C,MAAMsG,aAAalH,SAC3CjC,EAAI,MAAYsS,EAChBtS,EAAI,0BAAgC,GACpCA,EAAI,oBAA0B,GAC9BA,EAAI,mBAAyB,EAAK6C,MAAMsG,aAAatI,eAEA,YAAjD,EAAKgC,MAAMsG,aAAarI,cAAc6J,SACxC3K,EAAI,oBAA0B,EAAK6C,MAAMsG,aAAarI,cAAcM,oBAAoB2F,KAAI,SAAAsI,GAC1F,MAAO,CAAEC,MAAOD,EAAMtF,MAAOmB,MAAO,EAAKrI,MAAM0M,IAAEC,UAAUH,EAAMtF,aAIrEF,EAAShD,QAAT,uCAAkB,WAAOiD,GAAP,eAAAnK,EAAA,sDACZ2T,EAAI,CACNC,mBAAoBzJ,EAAQ/F,GAC5B4O,SAAU7I,EAAQ6I,SAClB1Q,SAAU,EAAKY,MAAMsG,aAAalH,SAClC8D,MAAO+D,EAAQ/D,OAEjB/F,EAAI,0BAA8BoC,KAAKkR,GAPvB,2CAAlB,uDAlBY,WA2BN,IAAIrU,GAAMgB,KAAM,SAAUD,GA3BpB,QA6BZ,EAAK2C,SAAS,CAAE6Q,oBAAqBJ,IA7BzB,4CArfK,EAqhBnBK,gBAAkB,WAChB,EAAK9Q,SAAS,CAAE+Q,cAAe,KAphB/B,EAAK7Q,MAAQ,CACX8J,YAAa,KACbC,WAAY,KACZ+G,iBAAkBzU,SAAS0O,eAAe,aAC1C5I,SAAU,GACVoG,MAAO,GACPqE,MAAO,GACPI,eAAgB,IAAIhL,EAAmB,CAAEG,SAAU,EAAKA,SAAU9D,QAAS,EAAKyL,YAAavB,MAAO,EAAKA,MAAOqE,MAAO,EAAKA,QAC5HY,UAAU,EACVxC,aAAa,EACbvB,cAAc,EACd8B,YAAa,EACbd,eAAgB,EAChBsG,SAAS,EACT/E,SAAU,GACVgF,gBAAiB,GACjB1K,aAAc,GACd0H,iBAAiB,EACjBC,UAAU,EACV3L,WAAY,GACZkM,yBAAyB,EACzByC,qBAAqB,EACrBtG,mBAAmB,EACnBgB,UAAW,GACXwD,yBAAyB,EACzBlD,gBAAiB,GACjBI,yBAAyB,EACzBC,wBAAyB,GACzB2C,iBAAkB,GAClB4B,cAAc,EACdF,oBAAqB,IAhCN,E,qDAmCnB,WAAqB,IAAD,OAClB,GAAKlU,KAAKkD,MAAM2G,gBAAiB7J,KAAKkD,MAAM2G,cAAgE,IAAhD4K,OAAOC,KAAK1U,KAAKkD,MAAM2G,cAAclC,QAAjG,CAGA,IAAIgN,EAAO3U,KAAKkD,MAAM2G,aAEtB7J,KAAKqD,SAAS,CAAEgR,iBAAkBzU,SAAS0O,eAAe,eAC1DtO,KAAKqD,SAAS,CAAEwG,aAAc8K,GAA9B,sBAAsC,sBAAAtU,EAAA,yDACiB,YAAjD,EAAKkD,MAAMsG,aAAarI,cAAc6J,QAA6F,IAArE,EAAK9H,MAAMsG,aAAarI,cAAcM,oBAAoB6F,OADxF,gCAE5B,EAAKtD,YAFuB,4CAMtCrE,KAAKiN,qB,yBA8JP,SAAY3C,GACLA,IACHA,EAAO,aAETtK,KAAKqD,SAAS,CAAEqC,SAAU4E,IAC1B,IAAIsK,EAAa5U,KAAKuD,MAAMgN,eAC5BqE,EAAWnP,KAAO6E,EAClBtK,KAAKqD,SAAS,CAAEkN,eAAgBqE,M,sBAoJlC,WACEhV,SAAS0O,eAAe,oBAAoB5K,MAAMmR,OAAS,MAChCjV,SAAS0O,eAAe,0BACvB1O,SAASkV,uBAAuB,iBAAiBnN,OAAS,IACpF/H,SAAS0O,eAAe,yBAAyB5K,MAAMsB,QAAU,SAEnEpF,SAAS0O,eAAe,yBAAyByG,UAAUC,OAAO,QACjDpV,SAAS0O,eAAe,0BAC9B2G,QAAUjV,KAAKkV,eAAeC,KAAKnV,MAC9CA,KAAKqD,SAAS,CAAEgR,iBAAkBzU,SAAS0O,eAAe,uBAC1DtO,KAAKqD,SAAS,CAAE+R,WAAW,M,oBAsK7B,WAAU,IAAD,mBACP,IAAKpV,KAAKuD,MAAMsG,aACd,OAAO,KAET,MAAkD7J,KAAKuD,MAA/CsG,EAAR,EAAQA,aAAckI,EAAtB,EAAsBA,wBACdxC,EAAavP,KAAKuD,MAAlBgM,SAEJ8F,EAAc,GACyB,aAAvC,UAAAxL,EAAarI,qBAAb,eAA4B6J,SAC9BxB,EAAarI,cAAcM,oBAAoByF,SAAQ,SAACwI,EAAO7H,GACzDA,EAAQ,GACVmN,EAAYvS,KAAK,EAAKS,MAAM0M,IAAEC,UAAUH,EAAMtF,YAKpD,IAAI6K,EAAsD,qBAAlCtV,KAAKuD,MAAM2Q,oBAA6ClU,KAAKkD,MAAM2G,aAAa7G,aAAa8B,eAAeqO,cAAcoC,uBAAyBvV,KAAKkD,MAAM2G,aAAa7G,aAAa8B,eAAeqO,cAAcqC,iBAE7O,OAEE,sBAAK/Q,GAAG,yBAAyBD,UAAU,iBAA3C,UACIxE,KAAKuD,MAAM6Q,aACX,qBAAK5P,UAAU,iDAAf,SACE,cAAC,EAAD,CAAMsD,KAAOwN,MAIb,gCACJ,qBAAK7Q,GAAG,8BAA8BD,UAAU,YAAYd,MAAO,CAAEsB,QAAkC,KAAzBhF,KAAKuD,MAAM2L,UAAmB,OAAS,QAAS7M,MAAOrC,KAAKkD,MAAM2G,aAAavH,WAAYsB,gBAAiB5D,KAAKkD,MAAM2G,aAAaxH,OAAlN,SACE,qBAAKmC,UAAU,iBAAiBC,GAAG,2BAAnC,SAA+DzE,KAAKuD,MAAM2L,cAGlC,aAA5B,OAAZrF,QAAY,IAAZA,GAAA,UAAAA,EAAcrI,qBAAd,eAA6B6J,UAAoC,OAAZxB,QAAY,IAAZA,OAAA,EAAAA,EAAcrI,cAAcM,oBAAoB6F,QAAS,EAC5G,qBAAKlD,GAAG,wBAAwBD,UAAU,aAAad,MAAO,CAAEsB,QAAShF,KAAKuD,MAAMgO,gBAAkB,QAAU,QAAhH,SACE,uBAAM/M,UAAU,mDAAmDiR,SAAQ,uCAAE,WAAO/J,GAAP,SAAArL,EAAA,sEAAyB,EAAKgE,UAAUqH,GAAxC,2CAAF,sDAA3E,UACE,qBAAKhI,MAAO,CAAEgS,UAAW,QAASC,SAAU,OAAQC,UAAW,SAA/D,gBACG/L,QADH,IACGA,OADH,EACGA,EAAcrI,cAAcM,oBAAoB2F,KAAI,SAACsI,EAAO7H,GAC3D,OAAQ,gCAAqC,gCAAQ6H,EAAMtF,QACzD,uBAAO9E,KAAMoK,EAAM8F,WAAYC,UAAQ,EAACtR,UAAU,qBAAqBoH,MAAO,EAAKrI,MAAM0M,IAAEC,UAAUH,EAAMtF,SAAW,GAAIH,KAAM2F,IAAEC,UAAUH,EAAMtF,OAAQ4B,SAAU,EAAKZ,aAAchH,GAAG,0BADpL,yBAA4ByD,SAMxC,sBAAKxE,MAAO,CAAEqS,UAAW,SAAUC,aAAc,QAAjD,UACE,8BACE,uBAAOrQ,KAAK,SAASlB,GAAG,gCAAgCD,UAAU,4BAA4BoH,MAAO/B,EAAa7G,aAAa8B,eAAemR,WAAYvS,MAAO,CAAEE,gBAAiB5D,KAAKkD,MAAM2G,aAAaxH,MAAOA,MAAOrC,KAAKkD,MAAM2G,aAAavH,gBAEpP,8CACa,mBAAG2H,KAAK,sBAAsBxG,OAAO,SAASuG,IAAI,aAAlD,qCAKjB,KAELhK,KAAKuD,MAAMmP,wBAA2B,cAAC,EAAD,CAAiB7I,aAAcA,EAAcsC,QAAStC,EAAaxH,MAAO6J,WAAYlM,KAAKuD,MAAMiM,gBAAiBxD,SAAU,WAAQ,EAAK9I,MAAMa,OAAQ,EAAKiI,YAAe3H,UAAW,kBAAM,EAAKnB,MAAMmB,eAC5O,sBAAKG,WAA0C,IAA/BxE,KAAKuD,MAAMgO,gBAA4B,GAAK,SAA5D,UAEE,sBAAK9M,GAAG,oBAAoBD,UAAU,iBAAtC,UAC2C,aAA5B,OAAZqF,QAAY,IAAZA,GAAA,UAAAA,EAAcrI,qBAAd,eAA6B6J,UAAoC,OAAZxB,QAAY,IAAZA,OAAA,EAAAA,EAAcrI,cAAcM,oBAAoB6F,QAAS,EAC7G,KACE,GACJ,qBAAKjE,MAAO,CAAEsB,QAAShF,KAAKuD,MAAMiO,SAAW,QAAU,QAAU/M,GAAG,YAAYyR,IAAK,SAACC,GAAS,EAAK1F,sBAAwB0F,GAA5H,SAEInW,KAAKuD,MAAM2K,kBACT,sBAAK1J,UAAU,QAAf,UAAwBqF,EAAa7G,aAAa8B,eAAesR,mBAAmB,oBAAGnM,KAAK,IAAIvF,QAAS1E,KAAKkD,MAAM6K,wBAAyBtJ,GAAG,mCAA5D,cAAiGoF,EAAa7G,aAAa8B,eAAeuR,gCAG9N,8BAEI9G,EAAS9H,KAAI,SAAC3B,EAASoC,GACrB,OACE,cAAC,EAAD,CACEyB,SAAU7D,EACV6E,kBAAmB,EAAKzH,MAAMyH,kBAC9Bb,QAAShE,EAAQL,OAAS,EAAKlC,MAAMmC,SAAW,QAAU,QAC1D+D,SAAU,EAAKlG,MAAMmC,SACrBuF,wBAAyB,EAAKA,wBAC9BP,UAAW,SAACF,GAAc,EAAKtH,MAAMwH,UAAUF,IAC/CX,aAAcA,EACdyB,SAAU+J,GAREnN,aAmB9B,qBAAKzD,GAAG,yBAAyBD,UAAU,eAA3C,eACA,sBAAKC,GAAG,sBAAsBD,UAAU,aAAad,MAAO,CAAEsB,QAAShF,KAAKuD,MAAMiO,SAAW,QAAU,QAAvG,UACE,sBAAKhN,UAAU,YAAf,UACE,qBAAKA,UAAU,cAAf,SACE,6BACEC,GAAG,2BACHmH,MAAO5L,KAAKuD,MAAMsC,WAClByQ,SAAUvE,EACVzH,KAAK,aACL+B,SAAUrM,KAAKyL,aACfjH,UAAU,yBACV8H,YAAW,OAAEzC,QAAF,IAAEA,GAAF,UAAEA,EAAc7G,oBAAhB,aAAE,EAA4B8B,eAAeyR,aACxDpF,WAAY,SAACzF,GACY,KAAnBA,EAAM8K,UACR9K,EAAM4F,iBACN,EAAKD,iBAGL,EAAKF,WAAWzF,KAdtB,2BAiBY1L,KAAKuD,MAAMwO,yBAjBvB,qBAkBO,KAlBP,MAoBF,qBAAKvN,UAAU,eAAf,SACE,mBACEA,UAAS,iCAA4BxE,KAAKuD,MAAMsC,WAAW8B,OAAS,EAAI,GAAK,YAC7EjD,QAAS1E,KAAKqR,cACd3N,MAAO,CAAEE,gBAAiB5D,KAAKkD,MAAM2G,aAAaxH,MAAOA,MAAOrC,KAAKkD,MAAM2G,aAAavH,YAH1F,SAIE,sBAAMkC,UAAU,sBAItB,qBAAKA,UAAU,iBAAf,SACE,qBAAKA,UAAU,YAAf,SACE,yBAAQC,GAAG,uBAAuBC,QAAS,kBAAM,EAAKoO,gBAAgBpP,MAAO,CAAE+S,WAAYzW,KAAKuD,MAAMqM,wBAA0B,UAAY,UAA5I,cAA0J5P,KAAKuD,MAAMsM,+BAGzK,sBAAKrL,UAAU,kBAAf,UACE,qBAAKA,UAAU,YAAf,SACE,mBAAGE,QAAS1E,KAAKiS,WAAYxN,GAAG,qBAAhC,mBAAsDoF,EAAa7G,oBAAnE,aAAsD,EAA2B8B,eAAe4R,oBAElG,sBAAKlS,UAAU,aAAf,wBACa,mBAAGyF,KAAK,sBAAsBxG,OAAO,SAASuG,IAAI,aAAatG,MAAO,CAAEiT,YAAa,QAArF,gCAGf,sBAAMlS,GAAG,4BAA4Bf,MAAO,CAAEsB,QAAS,QAAvD,SACE,uBAAOW,KAAK,OAAOlB,GAAG,6BAA6ByR,IAAK,SAAAU,GAAc,EAAK1E,UAAY0E,GAAatM,KAAK,SAAS+B,SAAUrM,KAAKoS,8BAQzI,mBAAG8D,IAAK,SAAAU,GAAc,EAAK/D,aAAe+D,GAAalT,MAAO,CAAEsB,QAAS,QAAUiF,KAAI,wCAAmC+G,mBAAmBhR,KAAKuD,MAAMiM,kBAAoBzF,SAAS,4B,GA5qBvK3E,aAkrBP0H,ICplBA+J,E,kDAnGb,WAAY3T,GAAQ,IAAD,8BACjB,cAAMA,IAYR4T,eAAiB,WACf,IAAIC,EAAS,EAAKxT,MAAM4M,MACpB6G,EAAO,EAAKzT,MAAMyT,KAClBC,EAAO,EAAK1T,MAAM0T,KAClBC,EAAW,GACXF,EAAKrP,OAAS,IAChBuP,EAAW,IAAIC,KAAJ,UAAYH,IACnBC,EAAKtP,OAAS,IAChBuP,EAAW,IAAIC,KAAJ,UAAYH,EAAZ,YAAoBC,MAGnC,IAAInL,EAAQ,EAAKvI,MAAMuI,MACnBhG,EAAU,EAAKvC,MAAMuC,QACrBgB,EAAM,SAAW,EAAK5D,MAAM2G,aAAatI,eAAiB,oBAC9D,IAAI5B,GAAMgB,KAAKmG,EAAK,CAAEiQ,OAAQA,EAAQG,SAAUA,EAAUpL,MAAOA,EAAOhG,QAASA,IACjFlG,SAAS0O,eAAe,sBAAsBK,UAAY,EAAKzL,MAAM2G,aAAa7G,aAAa8B,eAAesS,YAC9G,EAAK/T,SAAS,CAACgU,cAAc,KA7BZ,EAiCnB5L,aAAe,SAACC,EAAOC,GACrB,IAAIpI,EAAQ,EAAKA,MAEjBA,EADgBmI,EAAMjI,OAAO6G,MACVoB,EAAMjI,OAAOmI,MAChC,EAAKvI,SAAL,eAAmBE,KAnCnB,EAAKA,MAAQ,CACX4M,MAAO,GACP6G,KAAM,GACNC,KAAM,GACNnL,MAAO,GACPhG,QAAS,GACTuR,cAAc,GARC,E,0CAuCnB,WACE,OACE,qBAAK7S,UAAU,sBAAf,SACExE,KAAKuD,MAAM8T,aAAe,sBAAK3T,MAAO,CAACqS,UAAW,SAAUuB,SAAU,OAAQC,WAAY,OAAhE,cAAyE,cAAC,EAAD,CAAMzP,KAAM9H,KAAKkD,MAAM2G,aAAa7G,aAAa8B,eAAe0S,mBAAzI,OAC5B,uBAAM/S,GAAG,wBAAwBgR,SAAUzV,KAAK8W,eAAgBtS,UAAU,mDAA1E,UACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,cAAf,SACE,gCAAQxE,KAAKkD,MAAM2G,aAAa7G,aAAa8B,eAAe2S,kBAG9D,sBAAKjT,UAAU,cAAf,UACE,gCACE,qBAAKA,UAAU,mBAAf,SAAmCxE,KAAKkD,MAAM2G,aAAa7G,aAAa8B,eAAe4S,gBACvF,uBAAO/R,KAAK,OAAO0G,SAAUrM,KAAKyL,aAAca,YAAatM,KAAKkD,MAAM2G,aAAa7G,aAAa8B,eAAe4S,cAAepN,KAAK,QAAQ9F,UAAU,gCAAgCoH,MAAO5L,KAAKuD,MAAM4M,MAAO1L,GAAG,6BAA6BqR,UAAQ,OAE1P,qBAAKpS,MAAO,CAACiU,MAAO,aAGtB,sBAAKnT,UAAU,SAAf,UACE,qBAAKA,UAAU,mBAAf,SAAmCxE,KAAKkD,MAAM2G,aAAa7G,aAAa8B,eAAe8S,YACvF,qBAAKlU,MAAO,CAACiU,MAAO,UAEpB,qBAAKjU,MAAO,CAACmU,MAAO,MAAOC,MAAO,OAAQC,UAAW,aAAeC,aAAc,QAAlF,SACE,uBAAOrS,KAAK,OAAOlB,GAAG,wBAAwB6F,KAAK,OAAOsB,MAAO5L,KAAKuD,MAAMyT,KAAM3K,SAAUrM,KAAKyL,iBAGnG,qBAAK/H,MAAO,CAACmU,MAAO,MAAOC,MAAO,OAAQC,UAAW,aAAeC,aAAc,QAAlF,SACE,uBAAOrS,KAAK,OAAOlB,GAAG,wBAAwB6F,KAAK,OAAOsB,MAAO5L,KAAKuD,MAAM0T,KAAM5K,SAAUrM,KAAKyL,iBAInG,qBAAK/H,MAAO,CAACiU,MAAO,aAEtB,sBAAKnT,UAAU,cAAf,UACE,gCAAQxE,KAAKkD,MAAM2G,aAAa7G,aAAa8B,eAAemT,eAC5D,uBAAOtS,KAAK,QAAQ2E,KAAK,QAAQsB,MAAO5L,KAAKuD,MAAMuI,MAAOO,SAAUrM,KAAKyL,aAAca,YAAatM,KAAKkD,MAAM2G,aAAa7G,aAAa8B,eAAeyH,kBAAmB/H,UAAU,gCAAgCC,GAAG,mBAAmBqR,UAAQ,IACnP,uBACA,0BAAUxL,KAAK,UAAUsB,MAAO5L,KAAKuD,MAAMuC,QAASuG,SAAUrM,KAAKyL,aAAca,YAAatM,KAAKkD,MAAM2G,aAAa7G,aAAa8B,eAAe0H,gBAAiBhI,UAAU,eAAeiI,KAAK,IAAIhI,GAAG,6BAI1M,sBAAKD,UAAU,aAAf,UACE,qBAAKA,UAAU,kCAAf,SACE,wBAASmB,KAAK,SAASlB,GAAG,kBAAkBD,UAAS,eAAUxE,KAAKuD,MAAM4M,MAAMxI,OAAS,GAAK3H,KAAKuD,MAAMuI,MAAMnE,OAAS,EAAK,GAAK,YAAcjE,MAAO,CAACE,gBAAiB5D,KAAKkD,MAAM2G,aAAaxH,OAAjM,SAA2M,sBAAMmC,UAAU,mBAE7N,sBAAKA,UAAU,aAAf,wBACa,mBAAGyF,KAAK,sBAAsBxG,OAAO,SAASuG,IAAI,aAAatG,MAAO,CAACmJ,SAAU,YAAjF,0BACX,qBAAKrI,UAAU,mD,GAvFHY,a,iBCoEX8S,E,kDAnEb,WAAYhV,GAAQ,IAAD,8BACjB,cAAMA,IAMRiV,gBAAkB,SAACnE,GACjB,EAAK9Q,MAAMiV,gBAAgBnE,IARV,EAWnBoE,iBAAmB,SAAC5N,GAClB,EAAKtH,MAAMkV,iBAAiB5N,IAZX,EAenB6N,iBAAmB,SAAC7N,GACdA,EAAQ6I,SAAW,IACrB7I,EAAQ6I,UAAY,EACpB,EAAKnQ,MAAMoV,eAAe9N,KAhB5B,EAAKjH,MAAQ,GAFI,E,0CAuBnB,WAAU,IAAD,OACP,EAA6BvD,KAAKkD,MAA5BqH,EAAN,EAAMA,SAAU5H,EAAhB,EAAgBA,SACTK,EAAgBhD,KAAKkD,MAArBF,aAEP,OACE,wBAAOwB,UAAU,uCAAjB,UACE,gCACE,+BACE,oBAAIA,UAAU,WAAd,SAA0BxB,EAAauV,gBACvC,oBAAI/T,UAAU,uBAAd,SAAsCxB,EAAaqQ,WACnD,oBAAI7O,UAAU,uBAAd,SAAsCxB,EAAayD,QACnD,oBAAIjC,UAAU,uBAAd,SAAsCxB,EAAawV,cAIvD,uBAAO/T,GAAG,YAAV,SAEI8F,EAAS9C,KAAI,SAAC+C,EAAStC,GACrB,OAAO,+BACL,oBAAI1D,UAAU,gBAAd,SAA8B,mBAAGyF,KAAK,IAAIvF,QAAS,WAAO,EAAKxB,MAAMuV,WAAWjO,IAAlD,gBAA+DA,QAA/D,IAA+DA,OAA/D,EAA+DA,EAASC,UACtG,oBAAIjG,UAAU,gBAAd,SACE,sBAAKA,UAAU,SAASd,MAAO,CAAEmJ,SAAU,YAA3C,UACE,uBAAMnI,QAAS,kBAAM,EAAK0T,iBAAiB5N,IAA3C,cAAsD,mBAAGhG,UAAU,eAAnE,OACA,uBAAOmB,KAAK,OAAOnB,UAAU,eAAed,MAAO,CAAEmU,MAAO,OAAQnL,OAAQ,WAAad,MAAK,OAAEpB,QAAF,IAAEA,OAAF,EAAEA,EAAS6I,SAAUqF,UAAQ,IAC3H,uBAAMhU,QAAS,kBAAM,EAAK2T,iBAAiB7N,IAA3C,cAAuD,mBAAGhG,UAAU,wBAGxE,qBAAIA,UAAU,4BAAd,UAA2CgC,EAAU+M,aAAV,OAAuB/I,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAS/D,OAAQ9D,KACnF,oBAAI6B,UAAU,uBAAd,SACE,wBACEE,QAAS,kBAAM,EAAKyT,gBAAgB3N,IACpChG,UAAU,kBAFZ,SAE+B,mBAAGA,UAAU,cAAc8R,UAAQ,UAbtDpO,e,GA1CR9C,a,QCGhBuT,E,kDACL,WAAYzV,GAAQ,IAAD,8BAClB,cAAMA,IAyBP4F,YAAc,WACb,EAAKzF,SAAS,CAAEuV,OAAQ,KACxB,EAAK1V,MAAM4F,eA5BO,EA+BnB+P,WAAa,WACZ,EAAKC,KAAKC,cACT,IAAIC,MAAM,SAAU,CAAEC,YAAY,EAAMC,SAAS,MAjChC,EAoDnBzF,uBAAyB,SAAC6C,GACzB,EAAKjT,SAAS,CAAE8V,oBAAqB7C,IACrC,EAAKpT,MAAMuQ,uBAAuB6C,IAtDhB,EAyDnB8C,qBAAuB,SAAC1N,GACvB,IAAI2N,EAAa3N,EAAMjI,OAAOmI,MAC1B0N,EAAkB,EAAK/V,MAAMgW,uBACjCtJ,IAAEuJ,KAAK,EAAKtW,MAAM2G,aAAanH,kBAAkB,SAAC9B,GAC7CyY,GAAczY,EAAO6D,KACxB6U,EAAkB1Y,MAGpB,EAAKyC,SAAS,CAAEkW,uBAAwBD,KAjEtB,EAoEnBG,2BAA6B,SAAC/N,GAC7B,EAAKrI,SAAS,CAAEqW,uBAAwBhO,EAAMjI,OAAOmI,SArEnC,EAwEnB+N,aAxEmB,uCAwEJ,WAAOvW,GAAP,mBAAA/C,EAAA,6DACd,EAAKgD,SAAS,CACbuV,OAAQ,KAETxV,EAAEkO,iBACF,EAAKmC,wBAAuB,GACxBmG,EAAe,GACfd,EAAO1V,EAAEK,OACbmW,EAAY,SAAiB,GAC7BA,EAAY,SAAZ,UAAwCd,EAAKe,UAAUjO,MACvDgO,EAAY,SAAZ,MAAoCd,EAAKhN,MAAMF,MAC/CgO,EAAY,SAAZ,aAA2Cd,EAAKgB,aAAalO,MAC7DgO,EAAY,SAAZ,eAA6Cd,EAAKiB,eAAenO,MACjEgO,EAAY,SAAZ,KAAmCd,EAAKkB,KAAKpO,MAC7CgO,EAAY,SAAZ,SAAuCd,EAAKmB,SAASrO,MAEzC,YAhBE,WAiBc,IAAIjM,GAAMgB,KAD1B,YACoCiZ,GAjBlC,SAiBVM,EAjBU,UAkBUA,EAAgBtB,OACvC,EAAK1V,MAAMiX,gBACVD,EAAgBzV,GAChB,EAAKlB,MAAMmW,uBACX,EAAKnW,MAAMgW,wBAEFW,EAAgBtB,QAC1B,EAAKvV,SAAS,CACbuV,OAAQsB,EAAgBtB,SAEzB,EAAKnF,wBAAuB,IAE5B,EAAKA,wBAAuB,GA9Bf,4CAxEI,sDAElB,EAAKlQ,MAAQ,CACZqV,OAAQ,GACRW,uBAAwB,EAAKrW,MAAM2G,aAAanH,iBAAiB,GACjEgX,uBAAwB,EAAKxW,MAAM2G,aAAajH,iBAAiB,GACjEuW,qBAAqB,GAEtB,EAAKiB,mBAAqB,CACzB,YACA,QACA,eACA,iBACA,OACA,YAdiB,E,qDAkBnB,WACCxa,SAASya,iBAAiB,WAAW,SAACjX,GACvB,WAAVA,EAAEuI,KACLvI,EAAEkO,sB,oBAeL,SAAO3F,GACN,GAAI3L,KAAKuD,MAAMqV,OAAOjN,GACrB,OACC,uBACCnH,UAAU,6BACVd,MAAO,CAAE4T,SAAU,WAFpB,oBAIKtX,KAAKkD,MAAMF,aAAa8B,eAAeqO,cAAcmH,SAAS3O,GAJnE,KAKE3L,KAAKuD,MAAMqV,OAAOjN,GAAKlE,KAAI,SAACrE,GAC5B,OAAOA,U,oBA6DZ,WAAU,IAAD,OACFmX,EACLva,KAAKkD,MAAMF,aAAa8B,eAAeqO,cAClCqH,EAAuBD,EAAiBD,SAE9C,OACC,mCACC,cAACvR,EAAA,EAAD,CACCC,KAAMhJ,KAAKkD,MAAM8F,KACjBE,OAAQlJ,KAAK8I,YACb2R,SAAS,SAHV,SAKC,sBACCjW,UACmC,GAAlCxE,KAAKuD,MAAM4V,oBAA8B,mBAAqB,GAFhE,UAKC,cAACpQ,EAAA,EAAM2R,OAAP,CAAcC,aAAW,EAACnW,UAAU,OAApC,SACC,cAACuE,EAAA,EAAM6R,MAAP,UAAcJ,EAAqB/P,UAEpC,eAAC1B,EAAA,EAAMI,KAAP,WACC,sBACC+M,IAAK,SAAC2E,GACL,EAAK/B,KAAO+B,GAEbpF,SAAU,SAACrS,GACV,EAAKuW,aAAavW,IAEnBoB,UAAU,kBAPX,SASExE,KAAKoa,mBAAmB3S,KAAI,SAACqT,GAC7B,OACC,qCACC,sBAAKtW,UAAU,uCAAf,UACC,sBACCA,UAAU,UACVd,MAAO,CAAE4T,SAAU,UAFpB,SAIEkD,EAAqBM,KAEvB,+BAAO,EAAKlC,OAAOkC,QAEpB,uBACCnV,KAAK,OACLmQ,UAAQ,EACRtR,UAAU,oBACVd,MAAO,CAAE4T,SAAU,UACnBhN,KAAMwQ,YAOX,sBAAKtW,UAAU,iBAAf,UACC,sBAAKA,UAAU,QAAf,UACC,uBAAOA,UAAU,UAAUd,MAAO,CAAE4T,SAAU,UAA9C,SACEiD,EAAiBzG,kBAEnB,qBAAKtP,UAAU,UAAUC,GAAG,yBAA5B,SACC,wBACCD,UAAU,0BACVd,MAAO,CAAE4T,SAAU,UACnBjL,SAAUrM,KAAKyZ,2BACf7N,MAAO5L,KAAKuD,MAAMmW,uBAJnB,SAME1Z,KAAKkD,MAAM2G,aAAajH,iBAAiB6E,KACzC,SAAC7G,GACA,OACC,wBAAQgL,MAAOhL,EAAf,SACE,EAAKsC,MAAMF,aAAakQ,iBAAiBtS,eASjD,sBAAK4D,UAAU,QAAf,UACC,uBAAOA,UAAU,UAAUd,MAAO,CAAE4T,SAAU,UAA9C,SACEtX,KAAKkD,MAAMF,aAAaN,iBAAiB+H,QAE3C,qBAAKjG,UAAU,UAAUC,GAAG,yBAA5B,SACC,wBACCD,UAAU,0BACVd,MAAO,CAAE4T,SAAU,UACnBjL,SAAUrM,KAAKoZ,qBACfxN,MAAO5L,KAAKuD,MAAMgW,uBAAuB9U,GAJ1C,SAMEzE,KAAKkD,MAAM2G,aAAanH,iBAAiB+E,KACzC,SAAC7G,EAAQsH,GACR,OACC,wBAAQ0D,MAAOhL,EAAO6D,GAAtB,SACE7D,EAAO0J,MADsBpC,mBAWvC,cAACa,EAAA,EAAMgS,OAAP,CAAcvW,UAAU,OAAxB,SACC,cAACwW,EAAA,EAAD,CACCC,QAAQ,YACRvX,MAAO,CAAEwX,WAAYlb,KAAKkD,MAAMiY,aAChCC,KAAK,KACL1W,QAAS1E,KAAK6Y,WAJf,SAMuC,qBAArC7Y,KAAKuD,MAAMmW,uBACTa,EAAiBc,yBACjBd,EAAiBe,sC,GA5NIlW,aAsOjBuT,IC7DA4C,E,kDAxKb,WAAYrY,GAAQ,IAAD,8BACjB,cAAMA,IAeRsY,6BAA+B,WAC7B,EAAKnY,SAAS,CAAEoY,uBAAuB,KAjBtB,EAmBnBC,4BAA8B,WAC5B,EAAKrY,SAAS,CAAEoY,uBAAuB,KApBtB,EAuBnBhI,uBAAyB,SAAC6C,GACxB,EAAKpT,MAAMuQ,uBAAwB6C,GACnC,EAAKjT,SAAU,CAAEsY,sBAAuBrF,KAzBvB,EA4BnB6B,gBAAkB,SAAC3N,GACjB,IAAMD,EAAa,EAAKhH,MAAlBgH,SACNA,EAAW0F,IAAE2L,OAAOrR,GAAU,SAACyJ,GAC7B,OAAOA,EAAEvP,KAAO+F,EAAQ/F,MAE1B,EAAKpB,SAAS,CAAEkH,aAAY,WACS,IAA/B,EAAKhH,MAAMgH,SAAS5C,QACtB,EAAKzE,MAAM2Y,cAEb,EAAKC,eArCU,EA0CnBC,WAAa,SAAC/H,GACZ,IAAMzJ,EAAa,EAAKhH,MAAlBgH,SACFC,EAAUyF,IAAE+L,KAAKzR,EAAU,CAAE9F,GAAIuP,EAAEvP,KACnC+F,GACFA,EAAQ6I,UAAY,EACpB,EAAKiF,eAAe9N,KAGpBwJ,EAAEX,SAAW,EACb9I,EAASzH,KAAKkR,GACd,EAAK3Q,SAAS,CAAEkH,aAAY,kBAAM,EAAKuR,gBApDxB,EA0DnBA,SAAW,WACT,IAAI9I,EAAM,EACJzI,EAAa,EAAKhH,MAAlBgH,SACN0F,IAAEuJ,KAAKjP,GAAU,SAACC,GAChBwI,GAAQxI,EAAQ/D,MAAQ+D,EAAQ6I,YAElC,EAAKhQ,SAAS,CAAE2P,SAhEC,EAmEnBsF,eAAiB,SAAC9N,GAChB,IAAMD,EAAa,EAAKhH,MAAlBgH,SACFrC,EAAQ+H,IAAEgM,UAAU1R,EAAU,CAAE9F,GAAI+F,EAAQ/F,KAChD8F,EAAS2R,OAAOhU,EAAO,EAAGsC,GAC1B,EAAKnH,SAAS,CAAEkH,aAChB,EAAKuR,YAxEY,EA2EnB3B,gBAAkB,SAAEtG,EAAYsI,EAAgBC,GAC9C,EAAKlZ,MAAMmZ,YACTxI,EACA,EAAKtQ,MAAMgH,SACX4R,EACAC,EACA,EAAK7Y,MAAMyP,MA/Eb,EAAKzP,MAAQ,CACdgH,SAAU,GACV+R,gBAAiB,GACjBtJ,IAAK,EACLrQ,SAAU,EAAKO,MAAM2G,aAAalH,SAClCsG,WAAW,EACXwS,uBAAuB,EACvBc,gBAAiB,IATC,E,qDAYnB,WACEvc,KAAK8b,WACkB9b,KAAKkD,MAAtB2G,e,oBAuER,WACE,IAAMU,EAAavK,KAAKuD,MAAlBgH,SACEV,EAAiB7J,KAAKkD,MAAtB2G,aACJxH,EAAQwH,EAAaxH,MACrBC,EAAauH,EAAavH,WACtBU,EAAiB6G,EAAjB7G,aACFuX,EAAmBvX,EAAa8B,eAAeqO,cAErD,OACD,sBAAK1O,GAAG,oBAAoBD,UAAU,WAAtC,UACC,cAAC,EAAD,CACCqF,aAAcA,EACd7G,aAAcA,EACdmY,YAAatR,EAAaxH,MAC1BoW,WAAYzY,KAAK0b,4BACjB5S,YAAa9I,KAAKwb,6BAClBrB,gBAAiBna,KAAKma,gBACtBnR,KAAMhJ,KAAKuD,MAAMkY,sBACjB3b,OAAQ+J,EAAa/J,OAChB2T,uBAAyBzT,KAAKyT,yBAEpC,sBAAKjP,UAAU,WAAWd,MAAO,CAAEE,gBAAiBvB,GAApD,UACC,uBAAMoC,GAAG,qBAAqBf,MAAO,CAAErB,MAAOC,GAA9C,UACE,IACAiY,EAAiBiC,cAEnB,sBACC/X,GAAG,kBACHD,UAAU,iDACVE,QAAS1E,KAAKkD,MAAMuZ,WAHrB,SAKC,mBAAGjY,UAAU,qBAIf,sBAAKA,UAAU,uDAAf,UACC,gCACC,cAAC,EAAD,CACC+F,SAAUA,EACV4N,gBAAiBnY,KAAKmY,gBACtBC,iBAAkBpY,KAAK+b,WACvBzD,eAAgBtY,KAAKsY,eACrBtV,aAAcuX,EACd9B,WAAYzY,KAAKkD,MAAMuV,WACvB9V,SAAU3C,KAAKuD,MAAMZ,WAEtB,uBAAO6B,UAAU,uCAAjB,SACC,uBAAOC,GAAG,YAAV,SACC,qBAAID,UAAU,eAAd,UACC,oBAAIA,UAAU,yBAAyBkY,QAAQ,IAA/C,SACC,mCACEnC,EAAiB/G,MADnB,IAC2B,IAD3B,UAEKhN,EAAU+M,aAAavT,KAAKuD,MAAMyP,MAFvC,OAGEhT,KAAKuD,MAAMZ,eAId,oBAAI6B,UAAU,6BAMlB,qBAAKA,UAAU,uBAAf,SACC,8BACC,wBACCA,UAAU,WACVd,MAAO,CACNrB,MAAOC,EACPsB,gBAAiBvB,GAElBqC,QAAS1E,KAAK0b,4BANf,SAQEnB,EAAiBoC,yB,GA/JPvX,aC4DJwX,E,kDA5DX,WAAY1Z,GAAQ,IAAD,8BACf,cAAMA,IAMV4F,YAAc,WACV,EAAK5F,MAAM4F,eANX,EAAKvF,MAAQ,CACTyF,MAAM,GAHK,E,0CAUnB,WAAU,IAAD,OACL,EAA4BhJ,KAAKkD,MAA3BsH,EAAN,EAAMA,QAAS7H,EAAf,EAAeA,SACf,OACI,mCACI,eAACoG,EAAA,EAAD,CAAOC,KAAMhJ,KAAKkD,MAAM8F,KAAME,OAAQlJ,KAAK8I,YAA3C,UACI,cAACC,EAAA,EAAM2R,OAAP,CAAcC,aAAW,EAAzB,SACI,cAAC5R,EAAA,EAAM6R,MAAP,UAAc5a,KAAKkD,MAAMuH,UAE7B,eAAC1B,EAAA,EAAMI,KAAP,WACI,sBAAK3E,UAAU,sCAAf,UACI,sBAAMA,UAAU,cAAhB,SAA+BgG,EAAQC,QACvC,uBAAMjG,UAAU,YAAhB,UAA6BgC,EAAU+M,aAAa/I,EAAQ/D,OAAQ9D,QAExE,uBACC6H,EAAQlC,QAAUkC,EAAQlC,OAAOX,OAAS,GACvC,gCACI,cAAC,EAAD,CACAW,OAAQkC,EAAQlC,OAChBxI,OAAQE,KAAKkD,MAAMpD,SAEnB,0BAIR,sBAAM0E,UAAU,0BAAhB,UACI,8BAAMgG,EAAQqS,cACbrS,EAAQsS,aAAetS,EAAQsS,YAAYnV,OAAS,GAAK,8BACrD6C,EAAQsS,YAAYrV,KAAI,SAACoT,EAAG3S,GACzB,OACI,sBAAM1D,UAAU,OAAhB,SACI,mBAAGA,UAAU,uBAAuByF,KAAI,UAAK,EAAK/G,MAAMpD,QAAhB,OAAyB+a,EAAEnS,KAAK5B,KAAOiD,UAAQ,EAAvF,SAA0F8Q,EAAEjS,yBASpH,cAACG,EAAA,EAAMgS,OAAP,UACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYvX,MAAO,CAAEwX,WAAYlb,KAAKkD,MAAMiY,aAAgBC,KAAK,KAAK1W,QAAS1E,KAAK8I,YAApG,SACK9I,KAAKkD,MAAM6Z,qB,GApDT3X,aCKzB4X,E,kDACJ,WAAY9Z,GAAQ,IAAD,8BACjB,cAAMA,IAoBR+Z,wBAA0B,WACxB,EAAK5Z,SAAS,CAAE6Z,kBAAkB,KAtBjB,EAwBnBC,uBAAyB,SAACnJ,GACxB,EAAK3Q,SAAS,CAAE6Z,kBAAkB,EAAMX,gBAAiBvI,KAzBxC,EA+CnBvC,eAAiB,SAAC2L,GAChB,EAAK/Z,SAAS,CAAEga,aAAcD,KAhDb,EAkDnBtL,eAAiB,WACV,EAAKvO,MAAM+Z,aACd,EAAKja,SAAS,CAAEia,aAAa,KApDd,EAuDnBvP,wBAA0B,SAAC3K,GACzB,EAAKC,SAAS,CAAEka,mBAAmB,IAC/Bna,GAAGA,EAAEkO,kBAzDQ,EA2DnBkM,eA3DmB,sBA2DF,4BAAAnd,EAAA,yDACV,EAAKkD,MAAMka,iBACd,EAAKpa,SAAS,CAAEoa,iBAAiB,IAE9B,EAAKla,MAAMma,WAJD,uBAKTC,EAAY,EAAKpa,MAAMsG,aALd,SAMP8T,EAAUC,cANH,OAOb,EAAKva,SAAS,CAAEqa,YAAY,EAAMG,cAAc,EAAMhU,aAAc8T,IAEhE,EAAKpa,MAAM+Z,aACb,EAAKja,SAAS,CAAEga,cAAc,IAE3B,EAAK9Z,MAAMua,WACd,EAAKza,SAAS,CAAE0a,cAAc,IAbnB,2CA3DE,EA8EnBC,eAAiB,SAAC5a,GAChBA,EAAE6a,kBACE,EAAK1a,MAAMma,YACb,EAAKra,SAAS,CAAEqa,YAAY,EAAOG,cAAc,EAAOR,cAAc,EAAOa,UAAU,EAAOH,cAAc,KAjF7F,EAoFnBI,YAAc,WACZ,EAAK9a,SAAS,CAAEoa,iBAAiB,EAAOC,YAAY,EAAOG,cAAc,EAAOR,cAAc,EAAOU,cAAc,EAAOD,WAAW,KArFpH,EAuFnBM,SAAW,SAACvG,EAAOwG,GAQjB7Q,OAAO8Q,OAAOC,YAAY,CAAE5Y,KAAM,iBAAkBkS,QAAOwG,UAAU,MA/FpD,EAiGnB5B,WAAa,WACX,EAAKpZ,SAAS,CAAE6a,UAAW,EAAK3a,MAAM2a,YAlGrB,EAoGnBxT,UAAY,SAACF,GACX,EAAKnH,SAAS,CAAE0a,cAAc,EAAMG,UAAU,EAAMJ,WAAW,IAAS,kBAAM,EAAKU,KAAKzC,WAAWvR,OArGlF,EAuGnBiU,aAAe,WACb,EAAKpb,SAAS,CAAE0a,cAAc,EAAOG,UAAU,EAAOJ,WAAW,KAxGhD,EA2GnBrK,uBAAyB,WAAuB,IAAtB6C,EAAqB,wDAC7C,EAAKjT,SAAS,CAAEsY,sBAAuBrF,KA5GtB,EA+GnBoI,iBA/GmB,uCA+GA,WAAQ7K,EAAYtJ,EAAUuJ,EAAiBC,EAAiBf,GAAhE,eAAA3S,EAAA,6DACjB,EAAKoT,wBAAuB,GADX,SAEI,EAAKkL,QAAQ7L,cAChC,EACAvI,EACAyI,EACA,EAAKzP,MAAMsG,aAAa7G,aAAa8B,eAAeqO,cAAcyL,gBANnD,cAEXC,EAFW,gBAQX,EAAKF,QAAQhL,YACpBkL,EACAhL,EACAtJ,EACAuJ,EACAC,EACAf,GAdkB,OAgBjB,EAAK2L,QAAQxK,kBACb,EAAKqK,KAAKhD,+BACV,EAAKnY,SAAS,CAAE6a,UAAU,EAAOH,cAAc,IAC/C,EAAKtK,wBAAwB,GAnBZ,4CA/GA,8DAEjB,EAAKlQ,MAAQ,CACXG,MAAO,GACPmG,aAAc,GACd7G,aAAc,GACd8b,SAAS,EACTzB,cAAc,EACdE,mBAAmB,EACnBG,YAAY,EACZG,cAAc,EACdP,aAAa,EACbG,iBAAiB,EACjBM,cAAc,EACdG,UAAU,EACVJ,WAAW,EACXZ,kBAAkB,EAClBX,gBAAiB,GACjBZ,uBAAuB,GAlBR,E,4FA4BnB,gCAAAtb,EAAA,6DACMyN,EAAgB,IAAIzM,EAEpB0d,EADYvY,EACUY,aAAaoG,OAAO3N,SAASoK,MACnD+U,EAAmBD,EAAUta,GACjCqJ,EAAcmR,kBAAkBD,GALlC,SAMQlR,EAAc8P,cANtB,uBAOQ9P,EAAcoR,kBAPtB,OASElf,KAAKqD,SAAS,CACZwG,aAAciE,EACdgR,SAAS,EACTpb,MAAO,CACLrB,MAAOyL,EAAcxL,WACrBsB,gBAAiBkK,EAAczL,SAdrC,iD,0EA0GA,WAAU,IAAD,OACP,EAAkCrC,KAAKuD,MAA/BsG,EAAR,EAAQA,aAAciV,EAAtB,EAAsBA,QAClBK,EAAqB,GAQzB,OANI3R,OAAO8Q,QACL9Q,OAAO4R,YAAc,MACvBD,GAAsB,mBAItBL,EACK,KAIP,qBAAKra,GAAG,qBAAqBD,UAAW2a,EAAxC,SACE,cAAC,IAAD,CAAqBE,aAAW,EAACC,cAAY,EAAClB,SAAUpe,KAAKoe,SAA7D,SACE,sBAAK3Z,GAAG,mBACND,UAAS,mEAE0B,IAA5BxE,KAAKuD,MAAMsa,aAAwB,OAAS,GAF1C,oBADX,UAME,cAAC,EAAD,CACEpT,MAAOZ,EAAa7G,aAAa8B,eAAeqO,cAAcoM,gBAC9DxC,QAASlT,EAAa7G,aAAa8B,eAAeqO,cAAcqM,MAChErE,YAAatR,EAAaxH,MAC1BmI,QAASxK,KAAKuD,MAAMgZ,gBACpB9D,WAAYzY,KAAKmd,uBACjBrU,YAAa9I,KAAKid,wBAClBjU,KAAMhJ,KAAKuD,MAAM2Z,iBACjBpd,OAAQ+J,EAAa/J,OACrB6C,SAAUkH,EAAalH,WAEzB,qBAAK6B,UAAW,eAAiBxE,KAAKuD,MAAMoY,sBAAwB,oBAAsB,IAAKjY,MAAO,CAAEsB,QAAShF,KAAKuD,MAAM2a,SAAW,QAAU,QAAjJ,UACKle,KAAKuD,MAAMua,WAAcjU,EAAarI,cAAcie,YACrD,cAAC,EAAD,CAAMvJ,IAAK,SAAAU,GAAc,EAAK4H,KAAO5H,GACjC6B,WAAYzY,KAAKmd,uBACjBtT,aAAcA,EACdgS,YAAa7b,KAAKye,aAClBhC,WAAYzc,KAAKyc,WACjBJ,YAAarc,KAAK0e,iBAClBjL,uBAAyBzT,KAAKyT,yBAChC,KAGN,sBAAKjP,UAAW,kCAAoCxE,KAAKuD,MAAMoY,sBAAwB,oBAAsB,IAA7G,UACE,sBAAKlX,GAAG,oBAAoBC,QAAS1E,KAAKwd,eAAgBhZ,UAAU,WAAWd,MAAO1D,KAAKuD,MAAMG,MAAjG,UACE,8BACE,qBAAKe,GAAG,0BAAR,SACE,qBAAKkE,IAAI,OAAOF,IAAG,UAAKoB,EAAa/J,OAAlB,YAA4B+J,EAAarI,cAAckH,KAAK5B,WAInF,sBAAMrC,GAAG,qBAAqBf,MAAO,CAAErB,MAAOwH,EAAavH,YAA3D,SAA0EuH,EAAarI,cAAcke,aAErG,sBAAMjb,GAAG,mBAAmBC,QAAS1E,KAAKyc,WAAY/Y,MAAO,CAAEsB,QAAShF,KAAKuD,MAAMwa,aAAe,QAAU,OAAQrR,OAAQ,cAAerK,MAAOwH,EAAavH,YAA/J,SACE,mBAAGkC,UAAU,+BAEf,+BACGxE,KAAKuD,MAAM8Z,aAAgB,cAAC,EAAD,CAAU1Z,SAAU3D,KAAKuD,MAAMG,MAAOV,aAAc6G,EAAa7G,aAAc2c,aAAc3f,KAAKuD,MAAM8Z,aAActZ,KAAM,WAAQ,EAAK4a,QAAQ3S,WAAY,EAAKmS,eAAiBja,gBAAiB,kBAAM,EAAKya,QAAQlM,uBAAuBlO,oBAAqB,WAAQ,EAAKoa,QAAQra,gBAAmBD,UAAW,kBAAM,EAAKmZ,oBAAwB,KAGvX,qBAAK/Y,GAAG,wBAAR,SACGzE,KAAKuD,MAAMsa,aACV,sBAAMrZ,UAAU,WAAWE,QAAS1E,KAAKge,eAAgBta,MAAO,CAAErB,MAAOwH,EAAavH,YAAtF,SAAoG,mBAAGkC,UAAU,+BAA+Bd,MAAO,CAAEkc,IAAK,MAAOC,KAAM,WACzK,QAGP7f,KAAKuD,MAAMka,gBACV,qBAAM/Z,MAAO,CAAEsB,QAAShF,KAAKuD,MAAMma,WAAa,QAAU,QAA1D,SACG1d,KAAKuD,MAAMga,kBAAqB,cAAC,EAAD,CAAa1T,aAAcA,EAAckE,wBAAyB/N,KAAK+N,0BACtG,cAAC,EAAD,CAASmI,IAAK,SAAAU,GAAc,EAAK+H,QAAU/H,GACzC/M,aAAcA,EACdc,kBAAmB3K,KAAKmd,uBACxB1L,eAAgBzR,KAAKyR,eACrB1D,wBAAyB/N,KAAK+N,wBAC9BhK,KAAM,WAAQ,EAAKoa,eACnBrM,eAAgB9R,KAAK8R,eACrBzN,UAAW,kBAAM,EAAKmZ,kBACtB9S,UAAW,SAACF,GAAc,EAAKE,UAAUF,IACzCiJ,uBAAwBzT,KAAKyT,2BAGjC,iB,GA3NOrO,aAoOV4X,ICxNA8C,E,kDAZb,WAAY5c,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,GAFI,E,0CAKnB,WACE,OACE,cAAC,EAAD,Q,GARY6B,aCGH2a,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9gB,SAAS0O,eAAe,SAM1ByR,M","file":"static/js/main.1a648388.chunk.js","sourcesContent":["const Api = function (options= {}) {\n    \n    // this.serverUrl = process.env.HOST_NAME\n    // this.serverProtocol = process.env.PROTOCOL\n    // this.origin = options.host || 'http://localhost:3000'\n\n    if (document.location.origin.includes(\":300\"))\n    {\n        this.origin = 'http://localhost:3000'\n    }\n    else{\n        this.origin = document.location.origin\n    }\n    \n    this.serverUrl = this.origin + '/api/v1'\n    this.baseUrl = this.serverUrl;\n}\n\nApi.prototype.origin = \"ASdas\"\n\nApi.prototype.get = async function (route = '') {\n    const res = await fetch(`${this.baseUrl}/${route}`)\n    const data = await res.json()\n    if (!data) {\n        return null\n    }\n    else {\n        return data\n    }\n}\nApi.prototype.post = async function (route = '', data = {}) {\n    const response = await fetch(`${this.baseUrl}/${route}`, {\n        method: 'POST',\n        cache: 'no-cache',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data) \n    });\n    return await response.json();\n}\n\nApi.prototype.postFile = async function (route = '', file_data = {}) {\n    const response = await fetch(`${this.baseUrl}/${route}`, {\n        method: 'POST',\n        cache: 'no-cache',\n        body: file_data \n    });\n    return await response.json();\n}\nexport default Api\n\n\n","import Api from \"./Api\";\n\nclass ContaktiChat {\n    constructor(options = {}) {\n        // this.serverProtocol = process.env.PROTOCOL\n        if (document.location.origin.includes(\":300\"))\n        {\n            this.origin = 'http://localhost:3000'\n        }\n        else{\n            this.origin = document.location.origin\n        }\n\n        this.serverUrl = this.origin + '/api/v1'\n        this.locale = 'en';\n        this.serviceChannel = null;\n        this.chat_settings = {};\n        this.url_obj = {\n            serverUrl: this.serverUrl,\n            serverProtocol: this.serverProtocol\n        };\n        this.api = new Api(this.url_obj);\n    }\n    setServiceChannel(channel){\n        this.serviceChannel = channel;\n    }\n\n    async setSettings() {\n        let res = await this.api.get(`chat/${this.serviceChannel}/get_chat_settings`);\n        this.chat_settings = res.settings;\n        this.chat_settings.chat_inquiry_fields = res.chat_inquiry_fields;\n        this.chat_settings.chat_initial_buttons = res.chat_initial_buttons;\n        this.chatBotEnabled = this.chat_settings.enable_chatbot;\n        this.chatWithHuman = !(this.chat_settings.enable_chatbot);\n        this.initialMsg = this.chat_settings.initial_msg;\n        this.color = this.chat_settings.color;\n        this.text_color = this.chat_settings.text_color;\n        this.agents_online = res.agents_online;\n        this.is_ad_finland = res.is_ad_finland_company\n        this.shipment_methods = res.shipment_methods\n        this.currency = res.currency || '€'\n\n        this.checkout_methods = []\n        if (this.chat_settings.checkout_paytrail) this.checkout_methods.push(\"checkout_paytrail\")\n        if (this.chat_settings.checkout_ticket) this.checkout_methods.push(\"checkout_ticket\")\n\n    }\n\n    async setTranslations() {\n        this.translations = await this.api.get(`chat/get_translations`);\n    }\n}\n\nexport default ContaktiChat\n","import React, { Component } from 'react';\n\nclass Dropdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: false,\n      showSendEmail: true,\n      showStart: false,\n      showEndChat: true,\n    }\n  }\n\n\n  // document.onclick = (event){\n  // \tif(!event.target.classList.contains('dropdown-toggle') && !event.target.classList.contains('fa-cog')){\n  // \t\tif(document.querySelector('.dropdown')){\n  // \t\t\tdocument.querySelector('.dropdown').classList.remove(\"open\");\n  // \t\t}\n  // \t}\n  // }\n\n  toggle_dropdown = (e) => {\n    // ele.parentElement.classList.remove(\"close-force\");\n    // e.target.parentNode.classList.toggle(\"open\");\n    this.setState({ expanded: !this.state.expanded });\n  }\n   mouseover = (e) => {\n    e.target.style.color = this.props.styleObj.color;\n    e.target.style.backgroundColor = this.props.styleObj.backgroundColor;\n  }\n  mouseout = (e) => {\n    e.target.style.color = this.props.styleObj.backgroundColor;\n    e.target.style.backgroundColor = this.props.styleObj.color;\n  }\n\n  end = () => {\n    this.props.quit();\n    this.setState({showEndChat: false});\n  }\n\n  sendchatHistory = () =>{\n    this.toggle_dropdown();\n    this.props.sendChatHistory();\n    this.setState({showSendEmail: false, showStart: true});\n  }\n\n  startChat =  async() =>{\n    this.setState({showStart: false});\n    await this.props.quit();\n    await this.props.startChat();\n  }\n\n  downloadChat = () => {\n    this.props.downloadChatHistory();\n  }\n\n\n  // mouseoverdownload(e) {\n  //   var x = document.getElementById(\"download_chat_history\");\n  //   x.style.color = document.getElementById('contakti-user-name').style.color;\n  //   x.style.backgroundColor = document.getElementById('contakti-msg-head').style.backgroundColor;\n  // }\n\n  // mouseoutdownload(e) {\n  //   var x = document.getElementById(\"download_chat_history\");\n  //   x.style.color = document.getElementById('contakti-msg-head').style.backgroundColor;\n  //   x.style.backgroundColor = document.getElementById('contakti-user-name').style.color;\n  // }\n\n  // mouseoversend(e) {\n  //   var y = document.getElementById(\"send_chat_history\");\n  //   y.style.color = document.getElementById('contakti-user-name').style.color;\n  //   y.style.backgroundColor = document.getElementById('contakti-msg-head').style.backgroundColor;\n  // }\n\n  // mouseoutsend(e) {\n  //   var y = document.getElementById(\"send_chat_history\");\n  //   y.style.color = document.getElementById('contakti-msg-head').style.backgroundColor;\n  //   y.style.backgroundColor = document.getElementById('contakti-user-name').style.color;\n  // }\n\n  // mouseovercancel(e) {\n  //   var z = document.getElementById(\"contakti-msg-close-chat\");\n  //   z.style.color = document.getElementById('contakti-user-name').style.color;\n  //   z.style.backgroundColor = document.getElementById('contakti-msg-head').style.backgroundColor;\n  // }\n\n  // mouseoutcancel(e) {\n  //   var z = document.getElementById(\"contakti-msg-close-chat\");\n  //   z.style.color = document.getElementById('contakti-msg-head').style.backgroundColor;\n  //   z.style.backgroundColor = document.getElementById('contakti-user-name').style.color;\n  // }\n\n  // mouseoverstart(e) {\n  //   var z = document.getElementById(\"contakti-msg-start-chat\");\n  //   z.style.color = document.getElementById('contakti-user-name').style.color;\n  //   z.style.backgroundColor = document.getElementById('contakti-msg-head').style.backgroundColor;\n  // }\n\n  // mouseoutstart(e) {\n  //   var z = document.getElementById(\"contakti-msg-start-chat\");\n  //   z.style.color = document.getElementById('contakti-msg-head').style.backgroundColor;\n  //   z.style.backgroundColor = document.getElementById('contakti-user-name').style.color;\n  // }\n\n\n\n\n\n  render() {\n    const {translations} = this.props\n    return (\n      <div className=\"dropdown chat-setting d--inline-block\" id=\"chat-setting-dropdown\" >\n        <button\n         style={{ color: this.props.styleObj.color }}\n          className=\"dropdown-toggle\"\n          onClick={this.toggle_dropdown}\n        >\n          <i className=\"fa fa-cog\"></i></button>\n\n        <ul className=\"chatsetting-dropdown-menu\" hidden={this.state.expanded ? false : true } id=\"chat-setting-dropdown-menu\">\n          <li>\n            <a id=\"download_chat_history\" style={{color: this.props.styleObj.backgroundColor, backgroundColor: this.props.styleObj.color }} onClick={this.downloadChat}  onMouseOver={this.mouseover} onMouseOut={this.mouseout}>\n             {translations.user_dashboard.download_txt_file}\n            </a>\n          </li>\n          <li>\n            <a id=\"send_chat_history\" style={{ display:this.state.showSendEmail? \"block\": \"none\", color: this.props.styleObj.backgroundColor, backgroundColor: this.props.styleObj.color }} onClick={this.sendchatHistory} onMouseOver={this.mouseover} onMouseOut={this.mouseout}>\n            {translations.user_dashboard.send_to_email}\n            </a>\n          </li>\n          <li>\n            <a id=\"contakti-msg-close-chat\" onClick={this.end} style={{ display:this.state.showEndChat? \"block\": \"none\" , color: this.props.styleObj.backgroundColor, backgroundColor: this.props.styleObj.color }} onMouseOver={this.mouseover} onMouseOut={this.mouseout}>\n            {translations.user_dashboard.end_chat}\n            </a>\n            <a id=\"contakti-msg-start-chat\" style={{ display:this.state.showStart? \"block\": \"none\", color: this.props.styleObj.backgroundColor, backgroundColor: this.props.styleObj.color }} onClick={this.startChat} onMouseOver={this.mouseover} onMouseOut={this.mouseout}>\n            {translations.user_dashboard.start_new_chat}\n            </a>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Dropdown;","const ChatMessage = function() {\n\n};\n\nChatMessage.prototype.asJSON = function() {\n    return JSON.stringify(this);\n};\nconst ChatMessageFactory = function(options) {\n    this.from = options.username;\n    this.channel = options.channel;\n    this.type = 'message';\n\n};\n\nChatMessageFactory.prototype.initialise = function() {\n\n}\nChatMessageFactory.prototype.newMessage = function(message, type, chatBot = false, from) {\n    var msg = new ChatMessage();\n    msg.from = from || this.from;\n    msg.channel_id = this.channel;\n    msg.type = type || this.type;\n    msg.chatbot = chatBot;\n    msg.message = message;\n    return msg;\n};\n\nChatMessageFactory.prototype.quitMessage = function() {\n    var msg = new ChatMessage();\n    msg.from = this.from;\n    msg.channel_id = this.channel;\n    msg.type = 'quit';\n    msg.message = 'Quitting.';\n    return msg;\n};\n\nChatMessageFactory.prototype.botToHumanSwitchMessage = function() {\n    var msg = new ChatMessage();\n    msg.from = this.from;\n    msg.channel_id = this.channel;\n    msg.type = 'botToHuman';\n    msg.message = 'Requesting human..';\n    return msg;\n};\n\n\nChatMessageFactory.prototype.fileMessage = function(file_url, file_path) {\n    var msg = new ChatMessage();\n    msg.from = this.from;\n    msg.channel_id = this.channel;\n    msg.type = 'file';\n    msg.message = file_url;\n    msg.file_path = file_path;\n    return msg;\n};\n\n\nexport default ChatMessageFactory","class ChatUtils {\n  static replaceURLs = (message) => {\n    if (!message) return '';\n    var urlRegex = /(((https?:\\/\\/)|(www\\.))[^\\s]+)/g;\n    let new_message = message.replace(urlRegex, function (url) {\n      var hyperlink = url;\n      if (!hyperlink.match('^https?:\\/\\/')) {\n        hyperlink = 'http://' + hyperlink;\n      }\n      return '<a href=\"' + hyperlink + '\" target=\"_blank\" rel=\"noopener noreferrer\">' + url + '</a>'\n    });\n\n    return new_message;\n  }\n\n  static replaceAllNewLines = (message) => {\n    if (!message) return '';\n    return message.replace(/\\n/g, '<br/>');\n  }\n\n  static convertHtmlToText = (html) => {\n    html = html.replace(/<style([\\s\\S]*?)<\\/style>/gi, '');\n    html = html.replace(/<script([\\s\\S]*?)<\\/script>/gi, '');\n    html = html.replace(/<\\/div>/ig, '\\n');\n    html = html.replace(/<\\/li>/ig, '\\n');\n    html = html.replace(/<li>/ig, '  *  ');\n    html = html.replace(/<\\/ul>/ig, '\\n');\n    html = html.replace(/<\\/p>/ig, '\\n');\n    html = html.replace(/<br\\s*[\\/]?>/gi, \"\\n\");\n    html = html.replace(/<[^>]+>/ig, '');\n    return html\n  }\n\n  static getUrlParams = (url) => {\n    var params = {};\n    (url + '?').split('?')[1].split('&').forEach(\n      function (pair) {\n        pair = (pair + '=').split('=').map(decodeURIComponent);\n        if (pair[0].length) {\n          params[pair[0]] = pair[1];\n        }\n      });\n\n    return params;\n  }\n\n  static displayPrice(price){\n    return Number(price).toFixed(2);\n  }\n};\n\nexport default ChatUtils","import parse from 'html-react-parser';\n\nconst Text = (props) => {\n    return parse(props.text)\n}\n \nexport default Text;","import React, { Component } from 'react';\nimport { Carousel } from 'react-bootstrap';\nclass CarouselWrapper extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { index: 0}\n    }\n    componentDidMount(){\n        let activeIndex = this.props.activeIndex ;\n        this.setState({ index: activeIndex});\n    }\n    handleSelect= (selectedIndex, e) => {\n        this.setState({ index: selectedIndex  });\n    }\n    render() { \n        \n        return ( <> \n        <Carousel activeIndex={this.state.index} onSelect={this.handleSelect}>\n            {this.props.images.map((image, index) => {\n                return (\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src={`${this.props.origin}${image.file.url}`}\n                            alt={image.file_name}\n                        />\n                    </Carousel.Item>\n                )\n            })}\n\n        </Carousel></> );\n    }\n}\n \nexport default CarouselWrapper;","import React, { Component } from 'react';\nimport { Button, Modal, } from 'react-bootstrap'\nimport CarouselWrapper from '../modules/utils/CarouselWrapper';\nclass MessageImagesModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    handleClose = () => {\n        this.props.handleClose()\n    }\n    render() {\n        return (\n            <>\n                <Modal show={this.props.showModal} onHide={this.handleClose}>\n                    <Modal.Body>\n                        <CarouselWrapper\n                            images={this.props.images}\n                            origin={this.props.origin}\n                            activeIndex={this.props.activeIndex}\n                        />\n                    </Modal.Body>\n                </Modal>\n            </>\n        );\n    }\n}\n\nexport default MessageImagesModal;","import React, { Component } from 'react';\nimport moment from 'moment';\nimport ChatUtils from '../../classes/ChatUtils';\nimport Text from '../modules/utils/Text';\nimport MessageImagesModal from './MessageImagesModal';\nclass Message extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.userName,\n      fromTime: this.props.envelope.from === this.username ? 'time_b' : 'time_a',\n      fromColor: this.props.from === this.username ? 'from_b' : 'from_a',\n      imageIndex: null,\n      showModal: false,\n      modalImages: []\n    }\n  }\n  handleMessageImageShow = (index, images) => {\n    this.setState({ imageIndex: index, showModal: true, modalImages: images});\n  }\n  handleMessageImageClose = () => {\n    this.setState({ showModal: false  });\n  }\n\n  render() {\n    var { contaktiChat } = this.props;\n\n    return (\n      <div className={this.props.bgClass} >\n        <MessageImagesModal\n         showModal={this.state.showModal}\n         activeIndex={this.state.imageIndex}\n         images={this.state.modalImages}\n         handleClose={this.handleMessageImageClose}\n         origin={contaktiChat.origin}/>\n        {this.props.envelope.type === 'file' ? (\n          <a download target=\"_blank\" rel=\"noreferrer\" href={ChatUtils.replaceAllNewLines(this.props.envelope.message)}>{`${this.props.envelope.from} ${contaktiChat.translations.user_dashboard.upload_chat}`}</a>\n\n        ) : (\n          <Text text={ChatUtils.replaceAllNewLines(ChatUtils.replaceURLs(this.props.envelope.message))} />\n        )}\n        { this.props.envelope.images ? (<div style={{gridTemplateColumns: \"auto auto auto auto\"}} className=\"d-grid mt-1\">\n          { this.props.envelope.images.map((image, index) => {\n            return(<div className=\"me-1 mb-1\">\n              <img src={`${contaktiChat.origin}${image.file.url}`} onClick={() => { this.handleMessageImageShow(index, this.props.envelope.images)}} style={{borderColor: contaktiChat.color}} className=\"img-thumbnail\"></img>\n            </div>)\n          })}\n\n        </div>) : \"\"\n        }\n        {\n          this.props.envelope.files ? (this.props.envelope.files.map((file) => {\n            return (\n              <div>\n                <a download target=\"_blank\" rel=\"noreferrer\" href={file.url}>{file.name}</a>\n              </div>)\n\n          })) : \"\"\n        }\n        {this.props.envelope.products ? (\n          <div id=\"chat-answer-products-wrapper\" className=\"mt-1\">\n            {this.props.envelope.products.map(product => {\n              return (<div className=\"answer_product\" key={`product-item-${product.id}`}>\n                <div className=\"child1\"><strong>{product.title}</strong> </div>\n                <div className=\"child2\">\n                  <a href=\"#\" onClick={() => this.props.addToCart(product)} className=\"add-to-cart-btn\" data-product-id={product.id} style={{ color: contaktiChat.text_color, backgroundColor: contaktiChat.color }}>\n                    <i className=\"fa fa-shopping-cart\"></i>\n                  </a>\n                </div>\n                <span onClick={() => {this.props.handleProductShow(product)}}> <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i> </span>\n              </div>)\n            })\n            }\n          </div>\n        ) : \"\"}\n\n        {this.props.envelope.action_buttons ? (\n          <div>\n               {this.props.envelope.action_buttons.map((btn, i) => {\n              return (\n                <div key={`action-buttons-${i}`}>\n                  <br />\n                  {btn.hyper_link && btn.hyper_link.length > 0 ? <a href={((!/^https?:\\/\\//i.test(btn.hyper_link))?'http://': \"\") + btn.hyper_link} className=\"action-button\" target=\"_blank\" style={{ backgroundColor: contaktiChat.color, color: contaktiChat.text_color }}><Text text={btn.text} /></a> :\n                    <button className=\"action-button\" style={{ backgroundColor: contaktiChat.color, color: contaktiChat.text_color }} onClick={this.props.sendCustomActionMessage}><Text text={btn?.text} /> </button>\n                  }\n                  <br />\n                </div>\n              )\n\n            })\n            }\n          </div>\n\n        ) : \"\"}\n        {\n          this.props.envelope.type !== 'quit' && this.props.envelope.type !== 'initial' ? (\n            <div>\n              <br />\n              <div className={`msg_time${this.state.fromTime}`}> {moment(this.props.envelope.timestamp ? this.props.envelope.timestamp : \"\").local().format('D.M.YYYY HH.mm')}</div>\n              <div className={`msg_from${this.state.fromColor}`}>{this.props.envelope.from} </div>\n              {this.props.envelope.from === this.props.userName ? (\n                <div>\n                  {this.props.userInfo.map((info, i) => {\n                    return (<div key={`user-info-${i}`} className={`msg_from${this.state.fromColor}`}>{info} </div>)\n                  })}\n                </div>\n              ) : \"\"}\n            </div>\n          ) : \"\"}\n      </div>);\n  }\n}\n\nexport default Message;\n","import React, { Component } from 'react';\nimport Api from '../../classes/Api';\nclass SendChatHistory extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            chat_history: \"\"\n        }\n    }\n    componentDidMount() {\n        this.setState({ chat_history: this.props.transcript });\n    }\n\n    handleChange = (event, key) => {\n        let state = this.state;\n        let inputName = event.target.name;\n        state[inputName] = event.target.value;\n        this.setState({ ...state });\n    }\n\n    sendEmail = () => {\n        let email = this.state.email;\n        let message = this.state.chat_history;\n        var url = 'chat/' + this.props.contaktiChat.serviceChannel + '/send_email_chat_history';\n        let data = { email: email, message: message };\n        new Api().post(url, data);\n        this.props.quitChat();\n    }\n\n    cancel = async () => {\n       await this.props.quitChat();\n        this.props.startChat();\n    }\n\n    render() {\n        const translations = this.props.contaktiChat.translations.user_dashboard\n        const color = this.props.bgColor\n        return (\n            <div id=\"contakti-user-details\" className=\"flex-column justify-content-between d-flex pt-2 px-1\">\n                <div>\n                  <label>{translations.send_chat_history_title}</label>\n                  <input type=\"email\" name=\"email\" onChange={this.handleChange} value={this.state.email} placeholder={translations.messageemail_chat} className=\"form-control callback-control\" id=\"send-chat-history-email\" />\n                  <br /><br />\n                  <textarea placeholder={translations.messagemsg_chat} className=\"form-control sendchat--history\" rows=\"4\" id=\"send-chat-history-message\" name=\"chat_history\" onChange={this.handleChange} value={this.state.chat_history} ></textarea>\n                  <br />\n                  <input type=\"hidden\" id=\"chat-client-container\" name=\"chat-client-container\" />\n                </div>\n                <div className=\"pb-2\">\n                  <div className=\"send-button-container pull-left\">\n                      <button id=\"send-chat-history-send\" className=\"send\" style={{ backgroundColor: color, margin: \"5px\" }}    onClick={this.sendEmail}>{translations.messagesend_chat}  </button>\n                      <span></span>\n                      <button id=\"send-chat-history-cancel\" className=\"send\" style={{ backgroundColor: color, margin: \"5px\" }}  onClick={this.cancel} >{translations.messagesend_cancel}</button>\n                  </div>\n                  <div className=\"pull-right\">\n                      Powered by <a href=\"http://contakti.com\" target=\"_blank\" rel=\"noreferrer\" style={{ position: \"relative\" }}>contakti.com</a>\n                      <div className=\"send-button-container pull-left\">\n\n                      </div>\n                  </div>\n                </div>\n            </div>);\n    }\n}\n\nexport default SendChatHistory;","import React, { Component } from 'react';\nimport ChatMessageFactory from '../../classes/MessageFactory';\nimport Message from './Message';\nimport Api from '../../classes/Api';\nimport moment from 'moment';\nimport SendChatHistory from '../others/SendChatHistory';\nimport _ from 'lodash';\nimport Text from '../modules/utils/Text';\nimport ChatUtils from '../../classes/ChatUtils';\nclass ChatBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chatChannel: null,\n      fayeServer: null,\n      messageContainer: document.getElementById('chat_area'),\n      username: '',\n      email: '',\n      phone: '',\n      messageFactory: new ChatMessageFactory({ username: this.username, channel: this.chatChannel, email: this.email, phone: this.phone }),\n      quitSent: false,\n      messageCame: false,\n      agentPresent: false,\n      agentsCount: 0,\n      connectTimeout: 0,\n      started: false,\n      messages: [],\n      messagEnvelopes: [],\n      contaktiChat: {},\n      showDetailInput: true,\n      showChat: false,\n      newMessage: \"\",\n      disableChatSendDisabled: false,\n      disableMessageInput: false,\n      showNoAgentOnline: false,\n      agentName: \"\",\n      showSendChatHistoryFlag: false,\n      chat_transcript: \"\",\n      showCustomActionButtion: false,\n      customActionButtionText: \"\",\n      uploadedFileUrls: [],\n      orderCreated: false,\n      orderCheckoutMethod: \"\"\n    }\n  }\n  componentDidMount() {\n    if (!this.props.contaktiChat || (this.props.contaktiChat && Object.keys(this.props.contaktiChat).length === 0)) {\n      return;\n    }\n    let chat = this.props.contaktiChat\n\n    this.setState({ messageContainer: document.getElementById('chat_area') });\n    this.setState({ contaktiChat: chat }, async () => {\n      if (this.state.contaktiChat.chat_settings.format !== \"inquiry\" || this.state.contaktiChat.chat_settings.chat_inquiry_fields.length === 0) {\n        await this.startChat();\n      }\n      // window.onbeforeunload = this.quitChat;\n    });\n    this.setSendDisabled();\n  }\n\n  onStartClientResponse = (response) => {\n    if ((!this.state.agentPresent) && this.state.contaktiChat.chatWithHuman) {\n      this.setSendDisabled()\n    }\n\n    response.callback = this.onMessageReceived;\n    response.connect = true;\n\n    this.setState({ chatChannel: response.channel });\n    this.setState({ fayeServer: response.server });\n    window.Danthes.sign(response);\n    // Set client info in redis to use when client closes or reloads the chat.\n    setTimeout(() => {\n      const url = this.state.contaktiChat.serverUrl + `/chat/set_client_info?channel_id=${this.state.chatChannel}`\n      fetch(url, {\n        \"Content-Type\": \"application/json\"\n      });\n    }, 2000);\n\n  };\n\n\n\n  displayNoAgentOnlineScreen = (timeOut = 60000) => {\n    let contakti_chat = this.state.contaktiChat;\n    if (contakti_chat.agents_online == false && contakti_chat.chatWithHuman == true)\n    {\n      this.props.showNoAgentOnlineScreen();\n    }\n    else{\n      this.setState({\n        connectTimeout: setTimeout(() => {\n          this.scrollDown();\n          this.setState({ showNoAgentOnline: true });\n        }, timeOut)\n      });\n    }\n\n  };\n\n  successCallback = (data) => {\n    let contakti_chat = this.state.contaktiChat;\n    if (data.agent_online == false)\n    {\n      this.displayNoAgentOnlineScreen(0);\n    }\n    else\n    {\n      contakti_chat.chatWithHuman = true;\n      contakti_chat.chatBotEnabled = false;\n      this.setState({ contaktiChat: contakti_chat }, () => {\n        this.setSendDisabled();\n        this.displayNoAgentOnlineScreen();\n      });\n    }\n  }\n  onMessageReceived = (envelope) => {\n    if (envelope.type === 'indicator') {\n      return\n    }\n    //TODO indicators\n    var indicators = document.getElementById('contakti-msg-indicator');\n    this.setState({ messageCame: true });\n    if (envelope.type === 'agent_indicator') {\n      indicators = document.getElementById('contakti-msg-indicator');\n      var has_cookies = localStorage.getItem('indicator_state')\n      if (!has_cookies) {\n        // setCookies\n        localStorage.setItem('indicator_state', 'true')\n        indicators.innerHTML = envelope.from + this.state.contaktiChat.translations.user_dashboard.typing_text + '<div id=\"wave\"> <span class=\"dot\"></span> <span class=\"dot\"></span> <span class=\"dot\"></span> </div>';\n        this.setState({\n          connectTimeout: setTimeout(function () {\n            var indicators = document.getElementById('contakti-msg-indicator');\n            indicators.innerHTML = '';\n            // remove cookie\n            localStorage.removeItem('indicator_state')\n          }, 5000)\n        });\n      }\n    }\n    else {\n      if (envelope.type === 'quit') {\n        this.setState({ agentsCount: this.state.agentsCount - 1 });\n        envelope.message = `${envelope.from} ${this.state.contaktiChat.translations.user_dashboard.quit_chat}`;\n        if (this.state.agentsCount < 1) {\n          // Disable send button. Do stuff!\n          this.setState({ agentPresent: false });\n          this.setSendDisabled();\n        }\n      }\n      else if (envelope.type === 'join') {\n        this.setState({ agentsCount: this.state.agentsCount + 1 });\n        if (this.state.agentPresent) {\n          envelope.message = `${envelope.from} ${this.state.contaktiChat.translations.user_dashboard.join_chat}`;\n        } else {\n          envelope.message = `${envelope.from} ${this.state.contaktiChat.chat_settings.welcome_message}`;\n        }\n        this.setState({ agentPresent: true, agentName: envelope.from });\n        clearTimeout(this.state.connectTimeout);\n        this.setSendDisabled();\n      }\n      else if (envelope.type === 'switch_to_human') {\n        envelope.message = `${this.state.contaktiChat.translations.user_dashboard.ask_human_to_help}`;\n        if (envelope.from !== this.username) {\n          indicators.innerText = \"\";\n        }\n        this.changeFromBotToHumanChat(this.successCallback);\n      }\n      let { messages, chat_transcript } = this.state;\n      if (envelope) messages.push(envelope);\n      chat_transcript = this.getChatTranscript()\n      this.setState({ messages, chat_transcript })\n      if (envelope.has_custom_action && envelope.custom_action_text) {\n        this.setState({ showCustomActionButtion: true, customActionButtionText: envelope.custom_action_text });\n      }\n      if (envelope.from !== this.state.username) {\n        indicators.innerText = \"\";\n      }\n\n    }\n    this.scrollDown();\n  };\n\n\n\n\n  changeFromBotToHumanChat = async (successCallback) => {\n\n    let client_data = [];\n    if (this.state.contaktiChat.chat_settings.format === 'inquiry') {\n      client_data = this.state.contaktiChat.chat_settings.chat_inquiry_fields.map(field => {\n        return { label: field.title, value: this.state[_.camelCase(field.title)] }\n      })\n    }\n    else {\n      client_data = [\n        { label: \"Name\", value: this.state.username }\n      ]\n    }\n    let params = {\n      chatbot: false,\n      channel_id: this.state.chatChannel,\n      name: this.state.username,\n      email: this.state.email,\n      phone: this.state.phone,\n      chat_display_fields: client_data,\n      is_ad_finland_company: this.state.contaktiChat.is_ad_finland\n        }\n    // var options = \"chatbot=\" + false + \"&name=\" + this.state.username + \"&email=\" + this.state.email + \"&phone=\" + this.state.phone + \"&channel_id=\" + encodeURIComponent(this.state.chatChannel);\n    let route = `/chat/${this.state.contaktiChat.serviceChannel}/bot_initiate_human_chat`;\n    let res = await new Api().post(route, params);\n    successCallback(res);\n  }\n\n\n  setUsername(name) {\n    if (!name) {\n      name = 'Anonymous';\n    }\n    this.setState({ username: name });\n    let msgFactory = this.state.messageFactory\n    msgFactory.from = name;\n    this.setState({ messageFactory: msgFactory });\n  };\n\n  sendCustomActionMessage = (e) => {\n    this.sendMessage(e.target.innerText);\n  }\n\n  sendMessage = (msg_text = \"\") => {\n    if (msg_text.length === 0) {\n      msg_text = this.state.newMessage;\n    }\n    if (msg_text.length > 0) {\n      var msg = this.state.messageFactory.newMessage(msg_text, null, this.state.contaktiChat.chatBotEnabled);\n      let route = this._channelUrl();\n      new Api().post(route, msg);\n      this.setState({ newMessage: \"\" })\n    }\n  };\n\n\n\n  _channelUrl = () => {\n    return this.state.chatChannel + '/send_msg';\n  };\n\n  scrollDown = () => {\n    if (this.messagesListContainer) {\n      this.messagesListContainer.scrollIntoView({ behavior: \"smooth\", block: \"end\", inline: \"nearest\" });\n    }\n  };\n\n  sendQuitNotify = () => {\n    if (this.state.quitSent) return;\n    this.setState({ quitSent: true });\n    var msg = this.state.messageFactory.quitMessage();\n    let route = this._channelUrl();\n    new Api().post(route, msg);\n    var ret = true ? null : ':D'; // Some browsers need fooling to evaluate onbeforeunload\n    return ret;\n  };\n\n  quitChat = async () => {\n    if (this.state.agentPresent) {\n      this.sendQuitNotify();\n    } else {\n      if (this.state.chatChannel) {\n        let route = `/chat/${this.state.contaktiChat.serviceChannel}/abort_chat?channel_id=${encodeURIComponent(this.state.chatChannel)}`;\n        await new Api().get(route);\n      }\n    }\n  };\n  _channelIndicatorUrl = () => {\n\n    return this.state.chatChannel + \"/send_indicator\";\n  };\n\n  onKeyIndicator = () => {\n    var msg = this.state.messageFactory.newMessage(\"Customer typing\");\n    let route = this._channelIndicatorUrl();\n    new Api().post(route, msg);\n  };\n\n  onKeyPress = (event) => {\n    var keyCode = event.keyCode;\n    if (keyCode !== 13) {\n      this.onKeyIndicator();\n    }\n\n  };\n\n  onSendClicked = (event) => {\n    this.setSendDisabled();\n    this.sendMessage();\n  };\n\n  startChat = async (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    let name = \"Anonymous\";\n    if (this.state.contaktiChat.chat_settings.format === 'inquiry') {\n      name = this.state[_.camelCase(this.state.contaktiChat.chat_settings.chat_inquiry_fields[0]?.title)]\n    }\n    this.setState({\n      showDetailInput: false,\n      showChat: true,\n      username: this.state.username.length > 0 ? this.state.username : name,\n      messageFactory: new ChatMessageFactory({\n        username: this.state.username.length > 0 ? this.state.username : name,\n        channel: this.state.chatChannel,\n        email: this.state.email,\n        phone: this.state.phone\n      })\n    });\n    this.props.toggleDropDown(true);\n    if (this.state.contaktiChat.chatWithHuman) {\n      this.displayNoAgentOnlineScreen();\n    }\n    let client_data = [];\n    if (this.state.contaktiChat.chat_settings.format === 'inquiry') {\n      client_data = this.state.contaktiChat.chat_settings.chat_inquiry_fields.map(field => {\n        return { label: field.title, value: this.state[_.camelCase(field.title)] }\n      })\n    }\n    else {\n      client_data = [\n        { label: \"Name\", value: name }\n      ]\n    }\n    let params = {\n      chatbot: this.state.contaktiChat.chatBotEnabled,\n      name: name,\n      email: this.state.email,\n      phone: this.state.phone,\n      chat_display_fields: client_data,\n      is_ad_finland_company: this.state.contaktiChat.is_ad_finland\n    }\n\n    let route = `chat/${this.state.contaktiChat.serviceChannel}/initiate_chat`;\n    let res = await new Api().post(route, params);\n\n    if (this.state.contaktiChat.initialMsg.length > 0) {\n      var msg = this.state.messageFactory.newMessage(this.state.contaktiChat.initialMsg, \"initial\", this.state.contaktiChat.chatBotEnabled, this.state.contaktiChat.chat_settings.bot_alias);\n      if (this.state.contaktiChat.chatBotEnabled && this.state.contaktiChat.chat_settings.enable_initial_buttons) {\n        msg.action_buttons = this.state.contaktiChat.chat_settings.chat_initial_buttons.map(btn => {return{ text: btn.title}});\n      }\n      let moment1 = moment;\n      msg.timestamp = moment1().local().format();\n      let msgs = this.state.messages\n      msgs.push(msg);\n      this.setState({ messages: msgs });\n    }\n    this.props.setChatStarted();\n    this.onStartClientResponse(res);\n  };\n\n  setSendDisabled = (event) => {\n    if (!this.state.agentPresent && this.state.contaktiChat?.chatWithHuman) {\n      this.setState({ disableChatSendDisabled: true })\n      if (!this.state.agentPresent && this.state.contaktiChat?.chatWithHuman) {\n        this.setState({ disableChatSendDisabled: true })\n\n      }\n    } else {\n      this.setState({ disableChatSendDisabled: false })\n    }\n  };\n\n  maximize() {\n    document.getElementById('contakti-msg-box').style.bottom = '0px';\n    var chatSettingDrowpdown = document.getElementById('chat-setting-dropdown')\n    if (chatSettingDrowpdown && document.getElementsByClassName('show-dropdown').length > 0) {\n      document.getElementById('chat-setting-dropdown').style.display = \"block\";\n    }\n    document.getElementById('contakti-msg-minimize').classList.remove('hide');\n    var sendButton = document.getElementById('contakti-chat-send-btn');\n    sendButton.onclick = this._onSendClicked.bind(this);\n    this.setState({ messageContainer: document.getElementById('contakti-msg-body') });\n    this.setState({ minimized: false });\n  };\n\n  updateUserDetail = () => {\n  }\n\n  handleChange = (event, key) => {\n    let state = this.state;\n    let inputName = event.target.name;\n    state[inputName] = event.target.value;\n    this.setState({ ...state });\n  }\n  uploadFile = () => {\n    this.fileInput.click();\n  }\n  handleFileChange = async (e) => {\n    // const fileData = e.target.files[0];\n\n    let file = e.target.files[0];\n\n\n    var formdata = new FormData();\n    formdata.append(\"upload\", file, file.name);\n\n    let response = await new Api().postFile('chat/uploadfile', formdata);\n    this.state.uploadedFileUrls.push(response.file_url)\n    var msg = this.state.messageFactory.fileMessage(response.file_url, response.file_path);\n    let route = this._channelUrl();\n    new Api().post(route, msg);\n\n  }\n\n  showSendChatHistory = () => {\n    this.setState({ showSendChatHistoryFlag: true });\n  }\n  getChatTranscript = () => {\n    let transcript = \"\";\n    this.state.messages.forEach(message => {\n      let chatUtils = ChatUtils\n      if(message && message.message){\n      transcript += chatUtils.convertHtmlToText(message?.message)\n      transcript += '\\n'\n      }\n      if (message && message.files) {\n        message.files.forEach(file => {\n          transcript += file.url;\n          transcript += '\\n'\n        })\n      }\n      if (message && message.action_buttons) {\n        message.action_buttons.forEach(btn => {\n          transcript += btn.text;\n          if(btn.hyper_link && btn.hyper_link.length > 0 ){\n            transcript +=  `( ${btn.hyper_link} )`\n          }\n          transcript += '\\n';\n        })\n      }\n      if (message && message.type !== 'quit') {\n        let _moment = moment;\n        transcript += _moment(message.timestamp ? message.timestamp : []).local().format('D.M.YYYY HH.mm')\n        transcript += '\\n';\n        transcript += message.from;\n        transcript += '\\n';\n      }\n      transcript += '\\n';\n    })\n    return transcript;\n  }\n\n  downloadChat = () => {\n    this.fileDownload.click();\n  }\n\n  createTicket = async (isFromCart = false, products = [], sum = \"\", title=\"\" ) => {\n    const task_data = {};\n    task_data['channel_id'] = this.state.chatChannel\n    task_data['media_channel_id'] = this.state.contaktiChat.serviceChannel;\n    task_data['messages_attributes'] = [];\n    task_data['messages_attributes'][0] = {};\n    task_data['messages_attributes'][0]['title'] = title;\n    task_data['messages_attributes'][0][\"channel_type\"] = 'chat';\n    if (this.state.customActionButtionText.length > 0 && title.length === 0) {\n      task_data['messages_attributes'][0]['title'] = this.state.customActionButtionText;\n    }\n    task_data['messages_attributes'][0]['to'] = 'Internal';\n    task_data['messages_attributes'][0]['from'] = this.state.username;\n    task_data['user_uploaded_file_urls'] = this.state.uploadedFileUrls;\n    if (this.state.email.length > 0) task_data['messages_attributes'][0]['from'] = this.state.email;\n    let transcript = \"\";\n    if (this.state.contaktiChat.chat_settings.format === 'inquiry') {\n      this.state.contaktiChat.chat_settings.chat_inquiry_fields.forEach(field => {\n        transcript += `${field.title} : ${this.state[_.camelCase(field.title)]}\\n`;\n      })\n    }\n    else {\n      transcript += `${this.state.contaktiChat.translations.service_channels.name} : ${this.state.username}\\n`;\n    }\n    transcript += `\\n`;\n    if(this.state.newMessage.length > 0){\n      var msg = this.state.messageFactory.newMessage(this.state.newMessage);\n      let {messages} = this.state;\n      messages.push(msg);\n    }\n    transcript += this.getChatTranscript();\n    if(isFromCart === true){\n      transcript +=  `${this.state.contaktiChat.translations.user_dashboard.shopping_cart.order_details}: \\n`\n      products.forEach(product => {\n        transcript += `${product.title}&nbsp&nbsp&nbsp&nbsp&nbsp${product.quantity}-${this.state.contaktiChat.translations.user_dashboard.shopping_cart.items}&nbsp&nbsp&nbsp&nbsp&nbsp${ChatUtils.displayPrice(product.price)}${this.state.contaktiChat.currency}\\n`\n      })\n      transcript += `\\n${this.state.contaktiChat.translations.user_dashboard.shopping_cart.total}: ${ChatUtils.displayPrice(sum)}${this.state.contaktiChat.currency}\\n`\n\n    }\n\n    task_data['messages_attributes'][0]['description'] = transcript;\n    task_data['type'] = 'chat';\n    const url = 'tasks/create_task_from_chat'\n    this.props.setPluginDisabledState(true);\n    let createdTask = await new Api().post(url, task_data);\n    this.setState( { showCustomActionButtion: false, customActionButtionText: \"\" } );\n    if (!isFromCart) {\n\t\t\tthis.props.setPluginDisabledState(false);\n\t\t\tthis.props.quit();\n\t\t}\n    this.quitChat();\n\n\n    return createdTask.id;\n  }\n\n  createOrder = async (task_id = null, customerId = null, products = [], checkout_method = \"\", shipment_method={}, sum=\"\" ) => {\n    let data = {};\n    data['customer_id'] = customerId;\n    data['checkout_method'] = checkout_method;\n    data['shipment_method_id'] = shipment_method.id;\n    data['task_id'] = task_id;\n    data['currency'] = this.state.contaktiChat.currency;\n    data['total'] = sum;\n    data['order_products_attributes'] = [];\n    data['inquiry_fields_data'] = [];\n    data['service_channel_id'] = this.state.contaktiChat.serviceChannel;\n\n    if (this.state.contaktiChat.chat_settings.format === 'inquiry') {\n      data['inquiry_fields_data'] = this.state.contaktiChat.chat_settings.chat_inquiry_fields.map(field => {\n        return { label: field.title, value: this.state[_.camelCase(field.title)] }\n      })\n    }\n\n    products.forEach( async (product) => {\n      let p = {\n        chatbot_product_id: product.id,\n        quantity: product.quantity,\n        currency: this.state.contaktiChat.currency,\n        price: product.price\n      }\n      data['order_products_attributes'].push(p);\n    })\n    await new Api().post( 'orders', data )\n\n    this.setState({ orderCheckoutMethod: checkout_method });\n  }\n\n  setOrderCreated = () => {\n    this.setState({ orderCreated:  true});\n  }\n\n  render() {\n    if (!this.state.contaktiChat) {\n      return null;\n    }\n    const { contaktiChat, disableChatSendDisabled } = this.state;\n    const { messages } = this.state;\n\n    let inquiryData = [];\n    if (contaktiChat.chat_settings?.format === 'inquiry') {\n      contaktiChat.chat_settings.chat_inquiry_fields.forEach((field, index) => {\n        if (index > 0) {\n          inquiryData.push(this.state[_.camelCase(field.title)]);\n        }\n      })\n    }\n\n    let order_success_msg = this.state.orderCheckoutMethod == \"checkout_paytrail\" ? this.props.contaktiChat.translations.user_dashboard.shopping_cart.note_for_order_payment : this.props.contaktiChat.translations.user_dashboard.shopping_cart.thanks_for_order\n\n    return (\n\n      <div id=\"contakti-msg-container\" className=\"msg_wrap h-100\">\n        { this.state.orderCreated ?\n          <div className=\"text-center h-100 d-flex flex-column mx-2 pt-5\">\n            <Text text={ order_success_msg } />\n          </div>\n          :\n          (\n            <div>\n        <div id=\"contakti-chat-agent-details\" className=\"msg_agent\" style={{ display: this.state.agentName === \"\" ? \"none\" : \"block\", color: this.props.contaktiChat.text_color, backgroundColor: this.props.contaktiChat.color }}>\n          <div className=\"msg_agent_name\" id=\"contakti-chat-agent-name\">{this.state.agentName}</div>\n        </div>\n        {\n          contaktiChat?.chat_settings?.format === \"inquiry\" && contaktiChat?.chat_settings.chat_inquiry_fields.length > 0 ?\n            <div id=\"contakti-user-details\" className=\"h-100 px-1\" style={{ display: this.state.showDetailInput ? 'block' : 'none' }} >\n              <form className=\"flex-column justify-content-between d-flex h-100\" onSubmit={async (event) => { await this.startChat(event); }}>\n                <div style={{ maxHeight: \"330px\", overflow: \"auto\", marginTop: \"115px\" }} >\n                  {contaktiChat?.chat_settings.chat_inquiry_fields.map((field, index) => {\n                    return (<div key={`inquiry-fields-${index}`}><label>{field.title}</label>\n                      <input type={field.input_type} required className=\"form-control-start\" value={this.state[_.camelCase(field.title)] || \"\"} name={_.camelCase(field.title)} onChange={this.handleChange} id=\"contakti-input-name\" />\n                    </div>\n                    )\n                  })}\n                </div>\n                <div style={{ textAlign: 'center', marginBottom: \"20px\" }} >\n                  <div>\n                    <input type=\"submit\" id=\"contakti-input-details-submit\" className=\"btn btn-default btn-block\" value={contaktiChat.translations.user_dashboard.start_chat} style={{ backgroundColor: this.props.contaktiChat.color, color: this.props.contaktiChat.text_color }} />\n                  </div>\n                  <div >\n                    Powered by <a href=\"http://contakti.com\" target=\"_blank\" rel=\"noreferrer\">contakti.com</a>\n                  </div>\n                </div>\n              </form>\n            </div>\n            : null\n        }\n        {this.state.showSendChatHistoryFlag ? (<SendChatHistory contaktiChat={contaktiChat} bgColor={contaktiChat.color} transcript={this.state.chat_transcript} quitChat={() => { this.props.quit(); this.quitChat(); }} startChat={() => this.props.startChat()} />) : (\n          <div className={this.state.showDetailInput === false ? '' : 'd-none'}>\n\n            <div id=\"contakti-msg-body\" className=\"msg_bodyclient\">\n              {contaktiChat?.chat_settings?.format === \"inquiry\" && contaktiChat?.chat_settings.chat_inquiry_fields.length > 0 ? (\n                null\n              ) : \"\"}\n              <div style={{ display: this.state.showChat ? 'block' : 'none' }} id=\"chat_area\" ref={(el) => { this.messagesListContainer = el; }}>\n                {\n                  this.state.showNoAgentOnline ? (\n                    <div className=\"msg_n\">{contaktiChat.translations.user_dashboard.chat_not_available}<a href=\"#\" onClick={this.props.showNoAgentOnlineScreen} id=\"contakti_chat_not_available_link\"> {contaktiChat.translations.user_dashboard.chat_leave_a_message_link}</a></div>\n                  ) : (\n\n                    <div>\n                      {\n                        messages.map((message, index) => {\n                          return (\n                            <Message key={index}\n                              envelope={message}\n                              handleProductShow={this.props.handleProductShow}\n                              bgClass={message.from === this.state.username ? 'msg_b' : 'msg_a'}\n                              userName={this.state.username}\n                              sendCustomActionMessage={this.sendCustomActionMessage}\n                              addToCart={(product) => { this.props.addToCart(product) }}\n                              contaktiChat={contaktiChat}\n                              userInfo={inquiryData}\n                            />\n                          );\n\n                        })\n                      }\n                    </div>\n\n                  )}\n              </div>\n            </div>\n            <div id=\"contakti-msg-indicator\" className=\"msg_indictor\"> </div>\n            <div id=\"contakti-msg-footer\" className=\"msg_footer\" style={{ display: this.state.showChat ? 'block' : 'none' }}>\n              <div className=\"block-row\">\n                <div className=\"input-block\">\n                  <textarea\n                    id=\"contakti-chat-text-input\"\n                    value={this.state.newMessage}\n                    disabled={disableChatSendDisabled}\n                    name='newMessage'\n                    onChange={this.handleChange}\n                    className=\"msg_input form-control\"\n                    placeholder={contaktiChat?.translations?.user_dashboard.type_message}\n                    onKeyPress={(event) => {\n                      if (event.charCode === 13) {\n                        event.preventDefault();\n                        this.onSendClicked();\n                      }\n                      else {\n                        this.onKeyPress(event);\n                      }\n                    }}\n                    disabled={this.state.disableChatSendDisabled ? true : false}\n                    rows=\"3\" />\n                </div>\n                <div className=\"button-block\">\n                  <a\n                    className={`contakti-chat-send-btn ${this.state.newMessage.length > 0 ? \"\" : \"disabled\"}`}\n                    onClick={this.onSendClicked}\n                    style={{ backgroundColor: this.props.contaktiChat.color, color: this.props.contaktiChat.text_color }}>\n                    <span className=\"fa fa-send\"></span>\n                  </a>\n                </div>\n              </div>\n              <div className=\"block-row mb-1\">\n                <div className=\"pull-left\">\n                  <button id=\"custom_action_button\" onClick={() => this.createTicket()} style={{ visibility: this.state.showCustomActionButtion ? 'visible' : 'hidden' }}> {this.state.customActionButtionText}</button>\n                </div>\n              </div>\n              <div className=\"block-row mb-10\">\n                <div className=\"pull-left\">\n                  <a onClick={this.uploadFile} id=\"contakti-open-file\">{contaktiChat.translations?.user_dashboard.attachment_chat}</a>\n                </div>\n                <div className=\"pull-right\">\n                  Powered by <a href=\"http://contakti.com\" target=\"_blank\" rel=\"noreferrer\" style={{ marginRight: '10px' }}>contakti.com</a>\n                </div>\n              </div>\n              <form id=\"contakti-file-upload-form\" style={{ display: 'none' }}>\n                <input type=\"file\" id=\"contakti-file-upload-input\" ref={instance => { this.fileInput = instance; }} name=\"upload\" onChange={this.handleFileChange} />\n              </form>\n            </div>\n          </div>\n        )}\n        </div>\n        )}\n\n        <a ref={instance => { this.fileDownload = instance; }} style={{ display: \"none\" }} href={`data:text/plain;charset=utf-8,${encodeURIComponent(this.state.chat_transcript)}`} download=\"chat_history.txt\"></a>\n      </div>\n    );\n  }\n}\n\nexport default ChatBox;\n","import React, { Component } from 'react';\nimport Api from '../../classes/Api';\nimport Text from '../modules/utils/Text';\nclass CallBackBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      phone: \"\",\n      date: \"\",\n      time: \"\",\n      email: \"\",\n      message: \"\",\n      callBackSent: false\n\n    }\n  }\n\n  createCallBack = () => {\n    let number = this.state.phone\n    let date = this.state.date\n    let time = this.state.time\n    let datetime = '';\n    if (date.length > 0) {\n      datetime = new Date(`${date}`);\n      if (time.length > 0) {\n        datetime = new Date(`${date}T${time}`);\n      }\n    }\n    let email = this.state.email\n    let message = this.state.message\n    let url = '/chat/' + this.props.contaktiChat.serviceChannel + '/create_callback'\n    new Api().post(url, { number: number, datetime: datetime, email: email, message: message });\n    document.getElementById('contakti-user-name').innerHTML = this.props.contaktiChat.translations.user_dashboard.thanks_chat;\n    this.setState({callBackSent: true})\n  }\n\n\n  handleChange = (event, key) => {\n    let state = this.state;\n    let inputName = event.target.name;\n    state[inputName] = event.target.value;\n    this.setState({ ...state });\n  }\n  render() {\n    return (\n      <div className=\"call_back_box h-100\">\n      { this.state.callBackSent? (<div style={{textAlign: \"center\", fontSize: \"110%\", paddingTop: \"3em\"}}> <Text text={this.props.contaktiChat.translations.user_dashboard.sentmessage_chat} /> </div>) : (\n      <form id=\"contakti-user-details\" onSubmit={this.createCallBack} className=\"h-100 flex-column justify-content-between d-flex\">\n        <div className=\"row\">\n          <div className=\"col-12 pb-2\">\n            <label>{this.props.contaktiChat.translations.user_dashboard.callback_chat}</label>\n          </div>\n\n          <div className=\"col-12 pb-2\">\n            <div>\n              <div className=\"small-label pb-2\">{this.props.contaktiChat.translations.user_dashboard.cbnumber_chat}</div>\n              <input type=\"text\" onChange={this.handleChange} placeholder={this.props.contaktiChat.translations.user_dashboard.cbnumber_chat} name=\"phone\" className=\"form-control callback-control\" value={this.state.phone} id=\"messagebox-callback-number\" required />\n            </div>\n            <div style={{clear: \"both\"}}></div>\n          </div>\n\n          <div className=\"col-12\">\n            <div className=\"small-label pb-2\">{this.props.contaktiChat.translations.user_dashboard.time_chat}</div>\n            <div style={{clear: \"both\"}}></div>\n\n            <div style={{width: \"50%\", float: \"left\", boxSizing: \"border-box\",  paddingRight: \"20px\"}}>\n              <input type=\"date\" id=\"messagebox-date-field\" name=\"date\" value={this.state.date} onChange={this.handleChange} />\n            </div>\n\n            <div style={{width: \"50%\", float: \"left\", boxSizing: \"border-box\",  paddingRight: \"20px\"}}>\n              <input type=\"time\" id=\"messagebox-time-field\" name=\"time\" value={this.state.time} onChange={this.handleChange} />\n            </div>\n\n\n            <div style={{clear: \"both\"}}></div>\n          </div>\n          <div className=\"col-12 pb-2\">\n            <label>{this.props.contaktiChat.translations.user_dashboard.message_chat}</label>\n            <input type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} placeholder={this.props.contaktiChat.translations.user_dashboard.messageemail_chat} className=\"form-control callback-control\" id=\"messagebox-email\" required />\n            <br />\n            <textarea name=\"message\" value={this.state.message} onChange={this.handleChange} placeholder={this.props.contaktiChat.translations.user_dashboard.messagemsg_chat} className=\"form-control\" rows=\"8\" id=\"messagebox-message\"></textarea>\n\n          </div>\n        </div>\n          <div className=\"footer-sec\">\n            <div className=\"send-button-container pull-left\">\n              <button  type=\"submit\" id=\"messagebox-send\" className={`send ${this.state.phone.length > 0 && this.state.email.length > 0  ? \"\" : \"disabled\"}`} style={{backgroundColor: this.props.contaktiChat.color }} ><span className=\"fa fa-send\"></span></button>\n            </div>\n            <div className=\"pull-right\">\n              Powered by <a href=\"http://contakti.com\" target=\"_blank\" rel=\"noreferrer\" style={{position: \"relative\"}}>contakti.com</a>\n              <div className=\"send-button-container pull-left\">\n\n              </div>\n            </div>\n          </div>\n      </form>\n      )}\n      </div>\n\n    );\n  }\n}\n\nexport default CallBackBox;","import React, { Component } from 'react';\nimport ChatUtils from '../../classes/ChatUtils';\n\nclass Product extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n\n\n  onProductRemove = (p) => {\n    this.props.onProductRemove(p);\n  }\n\n  increaseQuantity = (product) => {\n    this.props.increaseQuantity(product)\n  }\n\n  decreaseQuantity = (product) => {\n    if (product.quantity > 1) {\n      product.quantity -= 1;\n      this.props.replaceProduct(product)\n    }\n  }\n\n\n  render() {\n    let { products, currency } = this.props;\n    const {translations} = this.props\n\n    return (\n      <table className=\"table table-condensed table-striped \">\n        <thead>\n          <tr>\n            <th className=\"border-0\">{translations.product_title}</th>\n            <th className=\"border-0 text-center\">{translations.quantity}</th>\n            <th className=\"border-0 text-center\">{translations.price}</th>\n            <th className=\"border-0 text-center\">{translations.action}</th>\n          </tr>\n        </thead>\n\n        <tbody id=\"cart_body\">\n          {\n            products.map((product, index) => {\n              return <tr key={index}>\n                <td className=\"px-1 border-0\"><a href=\"#\" onClick={()=> { this.props.handleShow(product) }}>{product?.title}</a></td>\n                <td className=\"px-1 border-0\">\n                  <div className=\"center\" style={{ position: \"relative\" }}>\n                    <span onClick={() => this.increaseQuantity(product)}> <i className=\"fa fa-plus\"></i> </span>\n                    <input type=\"text\" className=\"form-control\" style={{ width: \"50px\", margin: \"0px 5px\" }} value={product?.quantity} readOnly />\n                    <span onClick={() => this.decreaseQuantity(product)} > <i className=\"fa fa-minus\" ></i></span>\n                  </div>\n                </td>\n                <td className=\"px-1 border-0 text-center\">{ChatUtils.displayPrice(product?.price)}{currency}</td>\n                <td className=\"px-1 border-0 center\">\n                  <button\n                    onClick={() => this.onProductRemove(product)}\n                    className=\"btn btn-danger \" ><i className=\"fa fa-times\" disabled ></i></button>\n                </td>\n              </tr>\n\n            })\n          }\n        </tbody>\n\n      </table>\n\n    );\n  }\n}\nexport default Product;","import React, { Component } from \"react\";\nimport { ReactDOM } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport _, { times } from \"lodash\";\nimport Api from \"../../classes/Api\";\n\nclass CustomerFormModal extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\terrors: {},\n\t\t\tselectedShipmentMethod: this.props.contaktiChat.shipment_methods[0],\n\t\t\tselectedCheckoutMethod: this.props.contaktiChat.checkout_methods[0],\n\t\t\tdisabledFormContent: false,\n\t\t};\n\t\tthis.customerFormInputs = [\n\t\t\t\"full_name\",\n\t\t\t\"email\",\n\t\t\t\"phone_number\",\n\t\t\t\"street_address\",\n\t\t\t\"city\",\n\t\t\t\"zip_code\",\n\t\t];\n\t}\n\n\tcomponentDidMount() {\n\t\tdocument.addEventListener(\"keydown\", (e) => {\n\t\t\tif (e.key === \"Escape\") {\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t});\n\t}\n\n\thandleClose = () => {\n\t\tthis.setState({ errors: {} });\n\t\tthis.props.handleClose();\n\t};\n\n\tsubmitForm = () => {\n\t\tthis.form.dispatchEvent(\n\t\t\tnew Event(\"submit\", { cancelable: true, bubbles: true })\n\t\t);\n\t};\n\terrors(key) {\n\t\tif (this.state.errors[key]) {\n\t\t\treturn (\n\t\t\t\t<span\n\t\t\t\t\tclassName=\"w-100 text-end text-danger\"\n\t\t\t\t\tstyle={{ fontSize: \"0.75rem\" }}\n\t\t\t\t>\n\t\t\t\t\t{`${this.props.translations.user_dashboard.shopping_cart.customer[key]} `}\n\t\t\t\t\t{this.state.errors[key].map((e) => {\n\t\t\t\t\t\treturn e;\n\t\t\t\t\t})}\n\t\t\t\t</span>\n\t\t\t);\n\t\t}\n\t}\n\n\tsetPluginDisabledState = (disabled) => {\n\t\tthis.setState({ disabledFormContent: disabled });\n\t\tthis.props.setPluginDisabledState(disabled);\n\t};\n\n\thandleShipmentChange = (event) => {\n\t\tlet selectedId = event.target.value;\n\t\tlet selected_method = this.state.selectedShipmentMethod;\n\t\t_.each(this.props.contaktiChat.shipment_methods, (method) => {\n\t\t\tif (selectedId == method.id) {\n\t\t\t\tselected_method = method;\n\t\t\t}\n\t\t});\n\t\tthis.setState({ selectedShipmentMethod: selected_method });\n\t};\n\n\thandleCheckoutMethodChange = (event) => {\n\t\tthis.setState({ selectedCheckoutMethod: event.target.value });\n\t};\n\n\thandleSubmit = async (e) => {\n\t\tthis.setState({\n\t\t\terrors: {},\n\t\t});\n\t\te.preventDefault();\n\t\tthis.setPluginDisabledState(true);\n\t\tlet customerData = {};\n\t\tlet form = e.target;\n\t\tcustomerData[ \"customer\" ] = {};\n\t\tcustomerData[\"customer\"][\"full_name\"] = form.full_name.value;\n\t\tcustomerData[\"customer\"][\"email\"] = form.email.value;\n\t\tcustomerData[\"customer\"][\"phone_number\"] = form.phone_number.value;\n\t\tcustomerData[\"customer\"][\"street_address\"] = form.street_address.value;\n\t\tcustomerData[\"customer\"][\"city\"] = form.city.value;\n\t\tcustomerData[\"customer\"][\"zip_code\"] = form.zip_code.value;\n\n\t\tconst url = \"customers\";\n\t\tlet createdCustomer = await new Api().post(url, customerData);\n\t\tif (createdCustomer && !createdCustomer.errors) {\n\t\t\tthis.props.handleCartOrder(\n\t\t\t\tcreatedCustomer.id,\n\t\t\t\tthis.state.selectedCheckoutMethod,\n\t\t\t\tthis.state.selectedShipmentMethod\n\t\t\t);\n\t\t} else if (createdCustomer.errors) {\n\t\t\tthis.setState({\n\t\t\t\terrors: createdCustomer.errors,\n\t\t\t});\n\t\t\tthis.setPluginDisabledState(false);\n\t\t} else {\n\t\t\tthis.setPluginDisabledState(false);\n\t\t}\n\t};\n\n\trender() {\n\t\tconst cartTranslations =\n\t\t\tthis.props.translations.user_dashboard.shopping_cart;\n\t\tconst customerTranslations = cartTranslations.customer;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Modal\n\t\t\t\t\tshow={this.props.show}\n\t\t\t\t\tonHide={this.handleClose}\n\t\t\t\t\tbackdrop=\"static\"\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\tthis.state.disabledFormContent == true ? \"disabled-content\" : \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Modal.Header closeButton className=\"py-1\">\n\t\t\t\t\t\t\t<Modal.Title>{customerTranslations.title}</Modal.Title>\n\t\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t\t<Modal.Body>\n\t\t\t\t\t\t\t<form\n\t\t\t\t\t\t\t\tref={(f) => {\n\t\t\t\t\t\t\t\t\tthis.form = f;\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonSubmit={(e) => {\n\t\t\t\t\t\t\t\t\tthis.handleSubmit(e);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tclassName=\"form-group mb-1\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{this.customerFormInputs.map((field_name) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"d-flex w-100 justify-content-between\">\n\t\t\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fw-bold\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: \"0.8rem\" }}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{customerTranslations[field_name]}\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>{this.errors(field_name)}</span>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control py-1\"\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: \"0.7rem\" }}\n\t\t\t\t\t\t\t\t\t\t\t\tname={field_name}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</form>\n\n\t\t\t\t\t\t\t<div className=\"row form-group\">\n\t\t\t\t\t\t\t\t<div className=\"col-6\">\n\t\t\t\t\t\t\t\t\t<label className=\"fw-bold\" style={{ fontSize: \"0.8rem\" }}>\n\t\t\t\t\t\t\t\t\t\t{cartTranslations.checkout_method}\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<div className=\"centera\" id=\"checkout_method_select\">\n\t\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control w-100 py-1\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: \"0.7rem\" }}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleCheckoutMethodChange}\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.selectedCheckoutMethod}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{this.props.contaktiChat.checkout_methods.map(\n\t\t\t\t\t\t\t\t\t\t\t\t(method) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={method}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.props.translations.service_channels[method]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div className=\"col-6\">\n\t\t\t\t\t\t\t\t\t<label className=\"fw-bold\" style={{ fontSize: \"0.8rem\" }}>\n\t\t\t\t\t\t\t\t\t\t{this.props.translations.shipment_methods.title}\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<div className=\"centera\" id=\"shipment_method_select\">\n\t\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control w-100 py-1\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: \"0.7rem\" }}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleShipmentChange}\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.selectedShipmentMethod.id}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{this.props.contaktiChat.shipment_methods.map(\n\t\t\t\t\t\t\t\t\t\t\t\t(method, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={method.id} key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{method.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Modal.Body>\n\t\t\t\t\t\t<Modal.Footer className=\"py-1\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\t\t\tstyle={{ background: this.props.buttonColor }}\n\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\tonClick={this.submitForm}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{this.state.selectedCheckoutMethod == \"checkout_paytrail\"\n\t\t\t\t\t\t\t\t\t? cartTranslations.checkout_button_paytrail\n\t\t\t\t\t\t\t\t\t: cartTranslations.checkout_button_ticket}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Modal.Footer>\n\t\t\t\t\t</div>\n\t\t\t\t</Modal>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default CustomerFormModal;\n","import React, { Component } from 'react';\nimport Product from './Product';\nimport CustomerFormModal from './CustomerFormModal';\nimport ChatUtils from '../../classes/ChatUtils';\nimport _ from 'lodash';\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\t\t\tproducts: [],\n\t\t\tshipmentMethods: [],\n\t\t\tsum: 0,\n\t\t\tcurrency: this.props.contaktiChat.currency,\n\t\t\tshowModal: false,\n\t\t\tshowCustomerFormModal: false,\n\t\t\tselectedProduct: {},\n\t\t};\n  }\n  componentDidMount() {\n    this.countSum();\n    let { contaktiChat } = this.props;\n  }\n  handleCustomerFormModalClose = () => {\n    this.setState({ showCustomerFormModal: false });\n  };\n  handleCustomerFormModalShow = () => {\n    this.setState({ showCustomerFormModal: true });\n  }\n\n  setPluginDisabledState = (disabled) => {\n    this.props.setPluginDisabledState( disabled );\n    this.setState( { disableChatboxContent: disabled });\n  }\n\n  onProductRemove = (product) => {\n    let { products } = this.state;\n    products = _.reject(products, (p) => {\n      return p.id === product.id;\n    });\n    this.setState({ products }, () => {\n      if (this.state.products.length === 0) {\n        this.props.onCartEmpty();\n      }\n      this.countSum();\n    });\n\n  }\n\n  addProduct = (p) => {\n    let { products } = this.state;\n    var product = _.find(products, { id: p.id });\n    if (product) {\n      product.quantity += 1;\n      this.replaceProduct(product);\n    }\n    else {\n      p.quantity = 1;\n      products.push(p)\n      this.setState({ products }, () => this.countSum());\n\n    }\n  }\n\n\n  countSum = () => {\n    let sum = 0;\n    let { products } = this.state;\n    _.each(products, (product) => {\n      sum += (product.price * product.quantity);\n    });\n    this.setState({ sum });\n  }\n\n  replaceProduct = (product) => {\n    let { products } = this.state;\n    var index = _.findIndex(products, { id: product.id });\n    products.splice(index, 1, product);\n    this.setState({ products });\n    this.countSum();\n  }\n\n  handleCartOrder = ( customerId, checkoutMethod, shipmentMethod ) => {\n    this.props.handleOrder(\n      customerId,\n      this.state.products,\n      checkoutMethod,\n      shipmentMethod,\n      this.state.sum\n    )\n  }\n\n  render() {\n    let { products } = this.state;\n    const { contaktiChat } = this.props\n    let color = contaktiChat.color;\n    let text_color = contaktiChat.text_color;\n    const { translations } = contaktiChat;\n    const cartTranslations = translations.user_dashboard.shopping_cart;\n    \n    return (\n\t\t\t<div id=\"contakti_cart_box\" className=\"cart_box\">\n\t\t\t\t<CustomerFormModal\n\t\t\t\t\tcontaktiChat={contaktiChat}\n\t\t\t\t\ttranslations={translations}\n\t\t\t\t\tbuttonColor={contaktiChat.color}\n\t\t\t\t\thandleShow={this.handleCustomerFormModalShow}\n\t\t\t\t\thandleClose={this.handleCustomerFormModalClose}\n\t\t\t\t\thandleCartOrder={this.handleCartOrder}\n\t\t\t\t\tshow={this.state.showCustomerFormModal}\n\t\t\t\t\torigin={contaktiChat.origin}\n          setPluginDisabledState={ this.setPluginDisabledState }\n\t\t\t\t/>\n\t\t\t\t<div className=\"msg_head\" style={{ backgroundColor: color }}>\n\t\t\t\t\t<span id=\"contakti-user-name\" style={{ color: text_color }}>\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t{cartTranslations.cart_title}\n\t\t\t\t\t</span>\n\t\t\t\t\t<span\n\t\t\t\t\t\tid=\"close-cart-icon\"\n\t\t\t\t\t\tclassName=\"float-end p-1 mr-2 d-none d-sm-block d-md-none\"\n\t\t\t\t\t\tonClick={this.props.toggleCart}\n\t\t\t\t\t>\n\t\t\t\t\t\t<i className=\"fa fa-times\"></i>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"cart_body d-flex flex-column justify-content-between\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Product\n\t\t\t\t\t\t\tproducts={products}\n\t\t\t\t\t\t\tonProductRemove={this.onProductRemove}\n\t\t\t\t\t\t\tincreaseQuantity={this.addProduct}\n\t\t\t\t\t\t\treplaceProduct={this.replaceProduct}\n\t\t\t\t\t\t\ttranslations={cartTranslations}\n\t\t\t\t\t\t\thandleShow={this.props.handleShow}\n\t\t\t\t\t\t\tcurrency={this.state.currency}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<table className=\"table table-condensed table-striped \">\n\t\t\t\t\t\t\t<tbody id=\"cart_body\">\n\t\t\t\t\t\t\t\t<tr className=\"table-active\">\n\t\t\t\t\t\t\t\t\t<td className=\"px-1 border-0 text-end\" colSpan=\"3\">\n\t\t\t\t\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\t\t\t\t{cartTranslations.total}:{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t{`${ChatUtils.displayPrice(this.state.sum)}${\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.currency\n\t\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td className=\"px-1 border-0 \" />\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"text-center flex-end\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=\"btn w-50\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tcolor: text_color,\n\t\t\t\t\t\t\t\t\tbackgroundColor: color,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClick={this.handleCustomerFormModalShow}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{cartTranslations.checkout}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n  }\n}\n\nexport default Cart;\n","import React, { Component } from 'react';\nimport { Button, Modal, } from 'react-bootstrap'\nimport CarouselWrapper from '../modules/utils/CarouselWrapper';\nimport ChatUtils from '../../classes/ChatUtils';\n\nclass ProductInfoModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: false,\n\n        }\n    }\n    handleClose = () => {\n        this.props.handleClose();\n    }\n    render() {\n        let { product, currency } = this.props\n        return (\n            <>\n                <Modal show={this.props.show} onHide={this.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>{this.props.title}</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"d-flex justify-content-between px-2\">\n                            <span className=\"float-start\">{product.title}</span>\n                            <span className=\"float-end\">{ChatUtils.displayPrice(product.price)}{currency}</span>\n                        </div>\n                        <hr />\n                        {product.images && product.images.length > 0 &&\n                            <div>\n                                <CarouselWrapper \n                                images={product.images}\n                                origin={this.props.origin}\n                                 />    \n                                <hr />\n                            </div>\n                        }\n\n                        <div  className=\"overflow-auto mt-1 px-2\" >\n                            <div>{product.description}</div>\n                            {product.attachments && product.attachments.length > 0 && <div>\n                                {product.attachments.map((f, index) => {\n                                    return (\n                                        <span className=\"mx-1\">\n                                            <a className=\"text-decoration-none\" href={`${this.props.origin}${f.file.url}`} download >{f.file_name}</a>\n                                        </span>\n                                    )\n                                })}\n                            </div>\n                            }\n\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" style={{ background: this.props.buttonColor }}  size=\"sm\" onClick={this.handleClose}>\n                            {this.props.btnText}\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default ProductInfoModal;\n","import React, { Component } from 'react';\nimport ContaktiChat from '../../classes/ContaktiChat';\nimport Dropdown from './Dropdown';\nimport ChatBox from '../chat_box/ChatBox';\nimport CallBackBox from '../others/CallBackBox';\nimport ChatUtils from '../../classes/ChatUtils';\nimport ReactResizeDetector from 'react-resize-detector/build/withPolyfill';\nimport Cart from '../shopping_cart/Cart';\nimport ProductInfoModal from '../shopping_cart/ProductInfoModal';\n\nclass ChatPlugin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      style: {},\n      contaktiChat: {},\n      translations: {},\n      loading: true,\n      showDropDown: false,\n      showNoAgentScreen: false,\n      showPlugin: false,\n      showMinimize: false,\n      chatStarted: false,\n      chatInitialized: false,\n      showCartIcon: false,\n      showCart: false,\n      cartEmpty: true,\n      showProductModal: false,\n      selectedProduct: {},\n      disableChatboxContent: false\n    }\n  }\n  handleProductModalClose = () => {\n    this.setState({ showProductModal: false })\n  };\n  handleProductModalShow = (p) => {\n    this.setState({ showProductModal: true, selectedProduct: p });\n  }\n\n  async componentDidMount() {\n    let contakti_chat = new ContaktiChat();\n    let chatUtils = ChatUtils\n    let urlParams = chatUtils.getUrlParams(window.location.href)\n    let serviceChannelId = urlParams.id;\n    contakti_chat.setServiceChannel(serviceChannelId);\n    await contakti_chat.setSettings();\n    await contakti_chat.setTranslations();\n\n    this.setState({\n      contaktiChat: contakti_chat,\n      loading: false,\n      style: {\n        color: contakti_chat.text_color,\n        backgroundColor: contakti_chat.color\n      }\n    });\n  }\n\n  toggleDropDown = (flag) => {\n    this.setState({ showDropDown: flag });\n  }\n  setChatStarted = () => {\n    if (!this.state.chatStarted) {\n      this.setState({ chatStarted: true });\n    }\n  }\n  showNoAgentOnlineScreen = (e) => {\n    this.setState({ showNoAgentScreen: true });\n    if (e) e.preventDefault();\n  }\n  showChatPlugin = async () => {\n    if (!this.state.chatInitialized) {\n      this.setState({ chatInitialized: true });\n    }\n    if (!this.state.showPlugin) {\n      let cont_chat = this.state.contaktiChat\n      await cont_chat.setSettings();\n      this.setState({ showPlugin: true, showMinimize: true, contaktiChat: cont_chat });\n\n      if (this.state.chatStarted) {\n        this.setState({ showDropDown: true });\n      }\n      if (!this.state.cartEmpty) {\n        this.setState({ showCartIcon: true });\n      }\n\n    }\n\n  }\n  hideChatPlugin = (e) => {\n    e.stopPropagation();\n    if (this.state.showPlugin) {\n      this.setState({ showPlugin: false, showMinimize: false, showDropDown: false, showCart: false, showCartIcon: false });\n    }\n  }\n  destroyChat = () => {\n    this.setState({ chatInitialized: false, showPlugin: false, showMinimize: false, showDropDown: false, showCartIcon: false, cartEmpty: true });\n  }\n  onResize = (width, height) => {\n    // if (width < 350){\n    //   // width = 350;\n    // }\n    // if ( height < 535)\n    // {\n    //   // height = 535;\n    // }\n    window.parent.postMessage({ type: 'set_dimensions', width, height }, \"*\");\n  }\n  toggleCart = () => {\n    this.setState({ showCart: !this.state.showCart });\n  }\n  addToCart = (product) => {\n    this.setState({ showCartIcon: true, showCart: true, cartEmpty: false }, () => this.cart.addProduct(product));\n  }\n  hideCartIcon = () => {\n    this.setState({ showCartIcon: false, showCart: false, cartEmpty: true });\n  }\n\n  setPluginDisabledState = (disabled = false) => {\n    this.setState({ disableChatboxContent: disabled });\n  }\n\n  createCartTicket = async ( customerId, products, checkout_method, shipment_method, sum ) => {\n    this.setPluginDisabledState(true);\n    const taskId = await this.chatBox.createTicket(\n      true,\n      products,\n      sum,\n      this.state.contaktiChat.translations.user_dashboard.shopping_cart.order_products\n    );\n    await this.chatBox.createOrder(\n\t\t\ttaskId,\n\t\t\tcustomerId,\n\t\t\tproducts,\n\t\t\tcheckout_method,\n\t\t\tshipment_method,\n\t\t\tsum\n\t\t);\n    this.chatBox.setOrderCreated();\n    this.cart.handleCustomerFormModalClose();\n    this.setState({ showCart: false, showCartIcon: false });\n    this.setPluginDisabledState( false );\n  }\n\n\n  render() {\n    const { contaktiChat, loading } = this.state;\n    let parent_width_class = '';\n\n    if (window.parent) {\n      if (window.outerWidth <= 600) {\n        parent_width_class += ' max-600-width '\n      }\n    }\n\n    if (loading) {\n      return null;\n    }\n\n    return (\n      <div id=\"contakti-chat-main\" className={parent_width_class}>\n        <ReactResizeDetector handleWidth handleHeight onResize={this.onResize} >\n          <div id=\"contakti-msg-box\"\n            className={`\n                 chat-plugin-parent\n                 ${this.state.showMinimize === true ? \"open\" : \"\"}\n              `}\n          >\n            <ProductInfoModal\n              title={contaktiChat.translations.user_dashboard.shopping_cart.product_details}\n              btnText={contaktiChat.translations.user_dashboard.shopping_cart.close}\n              buttonColor={contaktiChat.color}\n              product={this.state.selectedProduct}\n              handleShow={this.handleProductModalShow}\n              handleClose={this.handleProductModalClose}\n              show={this.state.showProductModal}\n              origin={contaktiChat.origin}\n              currency={contaktiChat.currency}\n            />\n            <div className={\"cart-parent\" + (this.state.disableChatboxContent ? ' disabled-content' : '')} style={{ display: this.state.showCart ? \"block\" : \"none\" }}>\n              {(!this.state.cartEmpty) && contaktiChat.chat_settings.enable_cart ? (\n                <Cart ref={instance => { this.cart = instance; }}\n                    handleShow={this.handleProductModalShow}\n                    contaktiChat={contaktiChat}\n                    onCartEmpty={this.hideCartIcon}\n                    toggleCart={this.toggleCart}\n                    handleOrder={this.createCartTicket}\n                    setPluginDisabledState={ this.setPluginDisabledState }/>\n              ) : \"\"}\n            </div>\n\n            <div className={\"chat-parent flex-column d-flex\" + (this.state.disableChatboxContent ? ' disabled-content' : '')}>\n              <div id=\"contakti-msg-head\" onClick={this.showChatPlugin} className=\"msg_head\" style={this.state.style}>\n                <div>\n                  <div id=\"contakti-logo-container\">\n                    <img alt=\"logo\" src={`${contaktiChat.origin}/${contaktiChat.chat_settings.file.url}`} />\n                  </div>\n                </div>\n\n                <span id=\"contakti-user-name\" style={{ color: contaktiChat.text_color }}>{contaktiChat.chat_settings.chat_title}</span>\n\n                <span id=\"cart_show_button\" onClick={this.toggleCart} style={{ display: this.state.showCartIcon ? \"block\" : \"none\", margin: '5px 5px 0 0', color: contaktiChat.text_color }}>\n                  <i className=\"fa fa-shopping-cart mt-1\"></i>\n                </span>\n                <span>\n                  {this.state.showDropDown ? (<Dropdown styleObj={this.state.style} translations={contaktiChat.translations} showDropdown={this.state.showDropDown} quit={() => { this.chatBox.quitChat(); this.destroyChat() }} sendChatHistory={() => this.chatBox.showSendChatHistory()} downloadChatHistory={() => { this.chatBox.downloadChat(); }} startChat={() => this.showChatPlugin()} />) : \"\"}\n                </span>\n\n                <div id=\"contakti-msg-minimize\" >\n                  {this.state.showMinimize ? (\n                    <span className=\"fa-stack\" onClick={this.hideChatPlugin} style={{ color: contaktiChat.text_color }}><i className=\"fa fa-stack-2x fa-angle-down\" style={{ top: '3px', left: '0px' }}></i></span>\n                  ) : \"\"}\n                </div>\n              </div>\n              {this.state.chatInitialized ? (\n                <div  style={{ display: this.state.showPlugin ? \"block\" : \"none\" }}>\n                  {this.state.showNoAgentScreen ? (<CallBackBox contaktiChat={contaktiChat} showNoAgentOnlineScreen={this.showNoAgentOnlineScreen} ></CallBackBox>) : (\n                    <ChatBox ref={instance => { this.chatBox = instance; }}\n                      contaktiChat={contaktiChat}\n                      handleProductShow={this.handleProductModalShow}\n                      toggleDropDown={this.toggleDropDown}\n                      showNoAgentOnlineScreen={this.showNoAgentOnlineScreen}\n                      quit={() => { this.destroyChat() }}\n                      setChatStarted={this.setChatStarted}\n                      startChat={() => this.showChatPlugin()}\n                      addToCart={(product) => { this.addToCart(product) }}\n                      setPluginDisabledState={this.setPluginDisabledState}\n                    ></ChatBox>)}\n                </div>\n              ) : \"\"}\n            </div>\n          </div>\n        </ReactResizeDetector>\n      </div>\n    );\n  }\n}\n\nexport default ChatPlugin;\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.scss';\nimport './components/chat_plugin/ChatPlugin'\nimport ChatPlugin from './components/chat_plugin/ChatPlugin';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <ChatPlugin />\n    );\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './style.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}