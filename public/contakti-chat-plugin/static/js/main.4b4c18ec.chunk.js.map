{"version":3,"sources":["classes/Api.js","classes/ContaktiChat.js","components/chat_plugin/Dropdown.jsx","classes/MessageFactory.js","classes/ChatUtils.js","components/modules/utils/Text.jsx","components/shopping_cart/ProductInfoModal.jsx","components/chat_box/Message.jsx","components/others/SendChatHistory.jsx","components/chat_box/ChatBox.jsx","components/others/CallBackBox.jsx","components/shopping_cart/Product.jsx","components/shopping_cart/Cart.jsx","components/chat_plugin/ChatPlugin.jsx","App.js","reportWebVitals.js","index.js"],"names":["Api","document","location","origin","includes","this","serverUrl","baseUrl","prototype","get","a","route","fetch","res","json","data","post","method","cache","headers","body","JSON","stringify","response","postFile","file_data","ContaktiChat","locale","serviceChannel","chat_settings","url_obj","serverProtocol","api","channel","settings","chat_inquiry_fields","chat_initial_buttons","chatBotEnabled","enable_chatbot","chatWithHuman","initialMsg","initial_msg","color","text_color","agents_online","translations","Dropdown","props","toggle_dropdown","e","setState","expanded","state","mouseover","target","style","styleObj","backgroundColor","mouseout","end","quit","showEndChat","sendchatHistory","sendChatHistory","showSendEmail","showStart","startChat","downloadChat","downloadChatHistory","className","id","onClick","hidden","onMouseOver","onMouseOut","user_dashboard","download_txt_file","display","send_to_email","end_chat","start_new_chat","Component","ChatMessage","asJSON","ChatMessageFactory","options","from","username","type","initialise","newMessage","message","chatBot","msg","channel_id","chatbot","quitMessage","botToHumanSwitchMessage","fileMessage","file_url","file_path","ChatUtils","replaceURLs","replace","url","hyperlink","match","getUrlParams","params","split","forEach","pair","map","decodeURIComponent","length","Text","parse","text","ProductInfoModal","handleClose","show","Modal","onHide","Header","closeButton","Title","title","Body","content","price","Footer","Button","variant","background","buttonColor","btnText","Message","showModal","handleShow","p","modalText","modalProductPrice","currency","userName","fromTime","envelope","fromColor","contaktiChat","bgClass","shopping_cart","product_details","close","download","rel","href","replaceAll","upload_chat","files","file","name","products","product","addToCart","data-product-id","class","aria-hidden","action_buttons","btn_text","i","sendCustomActionMessage","moment","timestamp","local","format","userInfo","info","SendChatHistory","handleChange","event","key","value","sendEmail","email","chat_history","quitChat","cancel","transcript","bgColor","send_chat_history_title","onChange","placeholder","messageemail_chat","messagemsg_chat","rows","margin","messagesend_chat","messagesend_cancel","position","ChatBox","onStartClientResponse","agentPresent","setSendDisabled","callback","onMessageReceived","connect","chatChannel","fayeServer","server","window","Danthes","sign","setTimeout","displayNoAgentOnlineScreen","timeOut","contakti_chat","showNoAgentOnlineScreen","connectTimeout","scrollDown","showNoAgentOnline","successCallback","agent_online","indicators","getElementById","messageCame","localStorage","getItem","setItem","innerHTML","typing_text","removeItem","agentsCount","quit_chat","join_chat","welcome_message","agentName","clearTimeout","ask_human_to_help","innerText","changeFromBotToHumanChat","messages","chat_transcript","push","has_custom_action","custom_action_text","showCustomActionButtion","customActionButtionText","client_data","field","label","_","camelCase","phone","chat_display_fields","sendMessage","msg_text","messageFactory","_channelUrl","messagesListContainer","scrollIntoView","behavior","block","inline","sendQuitNotify","quitSent","encodeURIComponent","_channelIndicatorUrl","onKeyIndicator","onKeyPress","keyCode","onSendClicked","preventDefault","showDetailInput","showChat","toggleDropDown","bot_alias","enable_initial_buttons","btn","moment1","msgs","setChatStarted","disableChatSendDisabled","updateUserDetail","uploadFile","fileInput","click","handleFileChange","formdata","FormData","append","uploadedFileUrls","showSendChatHistory","showSendChatHistoryFlag","getChatTranscript","fileDownload","createTicket","task_data","messageContainer","started","messagEnvelopes","disableMessageInput","Object","keys","chat","msgFactory","bottom","getElementsByClassName","classList","remove","onclick","_onSendClicked","bind","minimized","inquiryData","index","onSubmit","maxHeight","overflow","marginTop","input_type","required","textAlign","marginBottom","start_chat","ref","el","chat_not_available","chat_leave_a_message_link","disabled","type_message","charCode","visibility","attachment_chat","marginRight","instance","CallBackBox","createCallBack","number","date","time","datetime","Date","thanks_chat","callBackSent","fontSize","paddingTop","sentmessage_chat","callback_chat","cbnumber_chat","clear","time_chat","width","float","boxSizing","paddingRight","message_chat","Product","onProductRemove","increaseQuantity","decreaseQuantity","quantity","replaceProduct","product_title","action","readonly","colSpan","total","Cart","reject","onCartEmpty","countSum","addProduct","find","sum","each","findIndex","splice","cart_title","toggleCart","payment_method","shipment_method","checkout","ChatPlugin","flag","showDropDown","chatStarted","showNoAgentScreen","showChatPlugin","chatInitialized","showPlugin","cont_chat","setSettings","showMinimize","cartEmpty","showCartIcon","hideChatPlugin","stopPropagation","showCart","destroyChat","onResize","height","parent","postMessage","cart","hideCartIcon","loading","urlParams","serviceChannelId","setServiceChannel","setTranslations","parent_width_class","outerWidth","handleWidth","handleHeight","enable_cart","alt","src","chat_title","showDropdown","chatBox","top","left","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4b4c18ec.chunk.js","sourcesContent":["const Api = function (options= {}) {\n    \n    // this.serverUrl = process.env.HOST_NAME\n    // this.serverProtocol = process.env.PROTOCOL\n    // this.origin = options.host || 'http://localhost:3000'\n\n    if (document.location.origin.includes(\":300\"))\n    {\n        this.origin = 'http://localhost:3000'\n    }\n    else{\n        this.origin = document.location.origin\n    }\n    \n    this.serverUrl = this.origin + '/api/v1'\n    this.baseUrl = this.serverUrl;\n}\n\nApi.prototype.origin = \"ASdas\"\n\nApi.prototype.get = async function (route = '') {\n    const res = await fetch(`${this.baseUrl}/${route}`)\n    const data = await res.json()\n    if (!data) {\n        return null\n    }\n    else {\n        return data\n    }\n}\nApi.prototype.post = async function (route = '', data = {}) {\n    const response = await fetch(`${this.baseUrl}/${route}`, {\n        method: 'POST',\n        cache: 'no-cache',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data) \n    });\n    return await response.json();\n}\n\nApi.prototype.postFile = async function (route = '', file_data = {}) {\n    const response = await fetch(`${this.baseUrl}/${route}`, {\n        method: 'POST',\n        cache: 'no-cache',\n        body: file_data \n    });\n    return await response.json();\n}\nexport default Api\n\n\n","import Api from \"./Api\";\n\nclass ContaktiChat {\n    constructor(options = {}) {\n        // this.serverProtocol = process.env.PROTOCOL\n        if (document.location.origin.includes(\":300\"))\n        {\n            this.origin = 'http://localhost:3000'\n        }\n        else{\n            this.origin = document.location.origin\n        }\n\n        this.serverUrl = this.origin + '/api/v1'\n        this.locale = 'en';\n        this.serviceChannel = null;\n        this.chat_settings = {};\n        this.url_obj = {\n            serverUrl: this.serverUrl,\n            serverProtocol: this.serverProtocol\n        };\n        this.api = new Api(this.url_obj);\n    }\n    setServiceChannel(channel){\n        this.serviceChannel = channel;\n    }\n\n    async setSettings() {\n        let res = await this.api.get(`chat/${this.serviceChannel}/get_chat_settings`);\n        this.chat_settings = res.settings;\n        this.chat_settings.chat_inquiry_fields = res.chat_inquiry_fields;\n        this.chat_settings.chat_initial_buttons = res.chat_initial_buttons;\n        this.chatBotEnabled = this.chat_settings.enable_chatbot;\n        this.chatWithHuman = !(this.chat_settings.enable_chatbot);\n        this.initialMsg = this.chat_settings.initial_msg;\n        this.color = this.chat_settings.color;\n        this.text_color = this.chat_settings.text_color;\n        this.agents_online = res.agents_online;\n    }\n    async setTranslations() {\n        this.translations = await this.api.get(`chat/get_translations`);\n    }\n}\n\nexport default ContaktiChat\n","import React, { Component } from 'react';\n\nclass Dropdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: false,\n      showSendEmail: true,\n      showStart: false,\n      showEndChat: true,\n    }\n  }\n\n\n  // document.onclick = (event){\n  // \tif(!event.target.classList.contains('dropdown-toggle') && !event.target.classList.contains('fa-cog')){\n  // \t\tif(document.querySelector('.dropdown')){\n  // \t\t\tdocument.querySelector('.dropdown').classList.remove(\"open\");\n  // \t\t}\n  // \t}\n  // }\n\n  toggle_dropdown = (e) => {\n    // ele.parentElement.classList.remove(\"close-force\");\n    // e.target.parentNode.classList.toggle(\"open\");\n    this.setState({ expanded: !this.state.expanded });\n  }\n   mouseover = (e) => {\n    e.target.style.color = this.props.styleObj.color;\n    e.target.style.backgroundColor = this.props.styleObj.backgroundColor;\n  }\n  mouseout = (e) => {\n    e.target.style.color = this.props.styleObj.backgroundColor;\n    e.target.style.backgroundColor = this.props.styleObj.color;\n  }\n\n  end = () => {\n    this.props.quit();\n    this.setState({showEndChat: false});\n  }\n\n  sendchatHistory = () =>{\n    this.toggle_dropdown();\n    this.props.sendChatHistory();\n    this.setState({showSendEmail: false, showStart: true});\n  }\n\n  startChat =  async() =>{\n    this.setState({showStart: false});\n    await this.props.quit();\n    await this.props.startChat();\n  }\n\n  downloadChat = () => {\n    this.props.downloadChatHistory();\n  }\n\n\n  // mouseoverdownload(e) {\n  //   var x = document.getElementById(\"download_chat_history\");\n  //   x.style.color = document.getElementById('contakti-user-name').style.color;\n  //   x.style.backgroundColor = document.getElementById('contakti-msg-head').style.backgroundColor;\n  // }\n\n  // mouseoutdownload(e) {\n  //   var x = document.getElementById(\"download_chat_history\");\n  //   x.style.color = document.getElementById('contakti-msg-head').style.backgroundColor;\n  //   x.style.backgroundColor = document.getElementById('contakti-user-name').style.color;\n  // }\n\n  // mouseoversend(e) {\n  //   var y = document.getElementById(\"send_chat_history\");\n  //   y.style.color = document.getElementById('contakti-user-name').style.color;\n  //   y.style.backgroundColor = document.getElementById('contakti-msg-head').style.backgroundColor;\n  // }\n\n  // mouseoutsend(e) {\n  //   var y = document.getElementById(\"send_chat_history\");\n  //   y.style.color = document.getElementById('contakti-msg-head').style.backgroundColor;\n  //   y.style.backgroundColor = document.getElementById('contakti-user-name').style.color;\n  // }\n\n  // mouseovercancel(e) {\n  //   var z = document.getElementById(\"contakti-msg-close-chat\");\n  //   z.style.color = document.getElementById('contakti-user-name').style.color;\n  //   z.style.backgroundColor = document.getElementById('contakti-msg-head').style.backgroundColor;\n  // }\n\n  // mouseoutcancel(e) {\n  //   var z = document.getElementById(\"contakti-msg-close-chat\");\n  //   z.style.color = document.getElementById('contakti-msg-head').style.backgroundColor;\n  //   z.style.backgroundColor = document.getElementById('contakti-user-name').style.color;\n  // }\n\n  // mouseoverstart(e) {\n  //   var z = document.getElementById(\"contakti-msg-start-chat\");\n  //   z.style.color = document.getElementById('contakti-user-name').style.color;\n  //   z.style.backgroundColor = document.getElementById('contakti-msg-head').style.backgroundColor;\n  // }\n\n  // mouseoutstart(e) {\n  //   var z = document.getElementById(\"contakti-msg-start-chat\");\n  //   z.style.color = document.getElementById('contakti-msg-head').style.backgroundColor;\n  //   z.style.backgroundColor = document.getElementById('contakti-user-name').style.color;\n  // }\n\n\n\n\n\n  render() {\n    const {translations} = this.props\n    return (\n      <div className=\"dropdown chat-setting d--inline-block\" id=\"chat-setting-dropdown\" >\n        <button\n         style={{ color: this.props.styleObj.color }}\n          className=\"dropdown-toggle\"\n          onClick={this.toggle_dropdown}\n        >\n          <i className=\"fa fa-cog\"></i></button>\n\n        <ul className=\"chatsetting-dropdown-menu\" hidden={this.state.expanded ? false : true } id=\"chat-setting-dropdown-menu\">\n          <li>\n            <a id=\"download_chat_history\" style={{color: this.props.styleObj.backgroundColor, backgroundColor: this.props.styleObj.color }} onClick={this.downloadChat}  onMouseOver={this.mouseover} onMouseOut={this.mouseout}>\n             {translations.user_dashboard.download_txt_file}\n            </a>\n          </li>\n          <li>\n            <a id=\"send_chat_history\" style={{ display:this.state.showSendEmail? \"block\": \"none\", color: this.props.styleObj.backgroundColor, backgroundColor: this.props.styleObj.color }} onClick={this.sendchatHistory} onMouseOver={this.mouseover} onMouseOut={this.mouseout}>\n            {translations.user_dashboard.send_to_email}\n            </a>\n          </li>\n          <li>\n            <a id=\"contakti-msg-close-chat\" onClick={this.end} style={{ display:this.state.showEndChat? \"block\": \"none\" , color: this.props.styleObj.backgroundColor, backgroundColor: this.props.styleObj.color }} onMouseOver={this.mouseover} onMouseOut={this.mouseout}>\n            {translations.user_dashboard.end_chat}\n            </a>\n            <a id=\"contakti-msg-start-chat\" style={{ display:this.state.showStart? \"block\": \"none\", color: this.props.styleObj.backgroundColor, backgroundColor: this.props.styleObj.color }} onClick={this.startChat} onMouseOver={this.mouseover} onMouseOut={this.mouseout}>\n            {translations.user_dashboard.start_new_chat}\n            </a>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Dropdown;","const ChatMessage = function() {\n\n};\n\nChatMessage.prototype.asJSON = function() {\n    return JSON.stringify(this);\n};\nconst ChatMessageFactory = function(options) {\n    this.from = options.username;\n    this.channel = options.channel;\n    this.type = 'message';\n\n};\n\nChatMessageFactory.prototype.initialise = function() {\n\n}\nChatMessageFactory.prototype.newMessage = function(message, type, chatBot = false, from) {\n    var msg = new ChatMessage();\n    msg.from = from || this.from;\n    msg.channel_id = this.channel;\n    msg.type = type || this.type;\n    msg.chatbot = chatBot;\n    msg.message = message;\n    return msg;\n};\n\nChatMessageFactory.prototype.quitMessage = function() {\n    var msg = new ChatMessage();\n    msg.from = this.from;\n    msg.channel_id = this.channel;\n    msg.type = 'quit';\n    msg.message = 'Quitting.';\n    return msg;\n};\n\nChatMessageFactory.prototype.botToHumanSwitchMessage = function() {\n    var msg = new ChatMessage();\n    msg.from = this.from;\n    msg.channel_id = this.channel;\n    msg.type = 'botToHuman';\n    msg.message = 'Requesting human..';\n    return msg;\n};\n\n\nChatMessageFactory.prototype.fileMessage = function(file_url, file_path) {\n    var msg = new ChatMessage();\n    msg.from = this.from;\n    msg.channel_id = this.channel;\n    msg.type = 'file';\n    msg.message = file_url;\n    msg.file_path = file_path;\n    return msg;\n};\n\n\nexport default ChatMessageFactory","class ChatUtils {\n  static replaceURLs = (message) => {\n    if (!message) return '';\n\n    var urlRegex = /(((https?:\\/\\/)|(www\\.))[^\\s]+)/g;\n    return message.replace(urlRegex, function (url) {\n      var hyperlink = url;\n      if (!hyperlink.match('^https?:\\/\\/')) {\n        hyperlink = 'http://' + hyperlink;\n      }\n      return '<a href=\"' + hyperlink + '\" target=\"_blank\" rel=\"noopener noreferrer\">' + url + '</a>'\n    });\n  }\n  static getUrlParams = (url) => {\n    var params = {};\n    (url + '?').split('?')[1].split('&').forEach(\n      function (pair) {\n        pair = (pair + '=').split('=').map(decodeURIComponent);\n        if (pair[0].length) {\n          params[pair[0]] = pair[1];\n        }\n      });\n\n    return params;\n  }\n};\n\nexport default ChatUtils","import parse from 'html-react-parser';\n\nconst Text = (props) => {\n    return parse(props.text)\n}\n \nexport default Text;","import React, { Component } from 'react';\nimport { Button, Modal, } from 'react-bootstrap'\n\nclass ProductInfoModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: false,\n\n        }\n    }\n    handleClose = () => {\n        this.props.handleClose();\n    }\n    render() {\n        return (\n            <>\n                <Modal show={this.props.show} onHide={this.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>{this.props.title}</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <span className=\"float-start\">{this.props.content}</span>\n                        <span className=\"float-end\">{this.props.price}</span>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" style={{background: this.props.buttonColor}} onClick={this.handleClose}>\n                            {this.props.btnText}\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default ProductInfoModal;\n\n\n\n\n\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport ChatUtils from '../../classes/ChatUtils';\nimport Text from '../modules/utils/Text';\nimport ProductInfoModal from '../shopping_cart/ProductInfoModal';\nclass Message extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.userName,\n      fromTime: this.props.envelope.from === this.username ? 'time_b' : 'time_a',\n      fromColor: this.props.from === this.username ? 'from_b' : 'from_a',\n      showModal: false,\n      modalText: \"\",\n      modalProductPrice: \"\"\n    }\n  }\n\n  componentDidMount() {\n  }\n\n  handleClose = () => {\n    this.setState({showModal: false  })\n  };\n  handleShow = (p) => {\n    this.setState({showModal: true, modalText: p.title, modalProductPrice: `${p.currency} ${p.price}` });\n  }\n\n\n\n  render() {\n    var { contaktiChat } = this.props;\n    return (\n      <div className={this.props.bgClass} >\n        <ProductInfoModal \n        title={contaktiChat.translations.user_dashboard.shopping_cart.product_details}\n        btnText={contaktiChat.translations.user_dashboard.shopping_cart.close}\n        price={this.state.modalProductPrice}\n        buttonColor={contaktiChat.color}\n        content={this.state.modalText}\n        handleShow={this.handleShow}\n        handleClose={this.handleClose} \n        show={this.state.showModal}\n        />\n        {this.props.envelope.type === 'file' ? (\n          <a download target=\"_blank\" rel=\"noreferrer\" href={this.props.envelope.message.replaceAll(\"\\n\", '<br/>')}>{`${this.props.envelope.from} ${contaktiChat.translations.user_dashboard.upload_chat}`}</a>\n\n        ) : (\n          <Text text={ChatUtils.replaceURLs(this.props.envelope.message).replaceAll(\"\\n\", '<br/>')} />\n        )}\n        {\n          this.props.envelope.files ? (this.props.envelope.files.map((file) => {\n            return (\n              <div>\n                <a download target=\"_blank\" rel=\"noreferrer\" href={file.url}>{file.name}</a>\n              </div>)\n\n          })) : \"\"\n        }\n        {this.props.envelope.products ? (\n          <div id=\"chat-answer-products-wrapper\" className=\"mt-1\">\n            {this.props.envelope.products.map(product => {\n              return (<div className=\"answer_product\" key={`product-item-${product.id}`}>\n                <div className=\"child1\"><strong>{product.title}</strong> </div>\n                <div className=\"child2\">\n                  <a href=\"#\" onClick={() => this.props.addToCart(product)} className=\"add-to-cart-btn\" data-product-id={product.id} style={{ color: contaktiChat.text_color, backgroundColor: contaktiChat.color }}>\n                    <i className=\"fa fa-shopping-cart\"></i>\n                  </a>\n                </div>\n                <span onClick={() => {this.handleShow(product)}}> <i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i> </span>\n              </div>)\n            })\n            }\n          </div>\n        ) : \"\"}\n\n        {this.props.envelope.action_buttons ? (\n          <div>\n            {this.props.envelope.action_buttons.map((btn_text, i) => {\n              return (\n                <div key={`action-buttons-${i}`}>\n                  <br />\n                  <button className=\"action-button\" style={{ backgroundColor: contaktiChat.color, color: contaktiChat.text_color }} onClick={this.props.sendCustomActionMessage}><Text text={btn_text} /> </button>\n                  <br />\n                </div>\n              )\n\n            })\n            }\n          </div>\n\n        ) : \"\"}\n        {\n          this.props.envelope.type !== 'quit' && this.props.envelope.type !== 'initial' ? (\n            <div>\n              <br />\n              <div className={`msg_time${this.state.fromTime}`}> {moment(this.props.envelope.timestamp ? this.props.envelope.timestamp : \"\").local().format('D.M.YYYY HH.mm')}</div>\n              <div className={`msg_from${this.state.fromColor}`}>{this.props.envelope.from} </div>\n              {this.props.envelope.from === this.props.userName ? (\n                <div>\n                  {this.props.userInfo.map((info, i) => {\n                    return (<div key={`user-info-${i}`} className={`msg_from${this.state.fromColor}`}>{info} </div>)\n                  })}\n                </div>\n              ) : \"\"}\n            </div>\n          ) : \"\"}\n      </div>);\n  }\n}\n\nexport default Message;\n","import React, { Component } from 'react';\nimport Api from '../../classes/Api';\nclass SendChatHistory extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            chat_history: \"\"\n        }\n    }\n    componentDidMount() {\n        this.setState({ chat_history: this.props.transcript });\n    }\n\n    handleChange = (event, key) => {\n        let state = this.state;\n        let inputName = event.target.name;\n        state[inputName] = event.target.value;\n        this.setState({ ...state });\n    }\n\n    sendEmail = () => {\n        let email = this.state.email;\n        let message = this.state.chat_history;\n        var url = 'chat/' + this.props.contaktiChat.serviceChannel + '/send_email_chat_history';\n        let data = { email: email, message: message };\n        new Api().post(url, data);\n        this.props.quitChat();\n    }\n\n    cancel = async () => {\n       await this.props.quitChat();\n        this.props.startChat();\n    }\n\n    render() {\n        const translations = this.props.contaktiChat.translations.user_dashboard\n        const color = this.props.bgColor\n        return (\n            <div id=\"contakti-user-details\" className=\"flex-column justify-content-between d-flex h-100 pt-3 px-1\">\n                <div>\n                  <label>{translations.send_chat_history_title}</label>\n                  <input type=\"email\" name=\"email\" onChange={this.handleChange} value={this.state.email} placeholder={translations.messageemail_chat} className=\"form-control callback-control\" id=\"send-chat-history-email\" />\n                  <br /><br />\n                  <textarea placeholder={translations.messagemsg_chat} className=\"form-control sendchat--history\" rows=\"4\" id=\"send-chat-history-message\" name=\"chat_history\" onChange={this.handleChange} value={this.state.chat_history} ></textarea>\n                  <br />\n                  <input type=\"hidden\" id=\"chat-client-container\" name=\"chat-client-container\" />\n                </div>\n                <div className=\"pb-2\">\n                  <div className=\"send-button-container pull-left\">\n                      <button id=\"send-chat-history-send\" className=\"send\" style={{ backgroundColor: color, margin: \"5px\" }}    onClick={this.sendEmail}>{translations.messagesend_chat}  </button>\n                      <span></span>\n                      <button id=\"send-chat-history-cancel\" className=\"send\" style={{ backgroundColor: color, margin: \"5px\" }}  onClick={this.cancel} >{translations.messagesend_cancel}</button>\n                  </div>\n                  <div className=\"pull-right\">\n                      Powered by <a href=\"http://contakti.com\" target=\"_blank\" rel=\"noreferrer\" style={{ position: \"relative\" }}>contakti.com</a>\n                      <div className=\"send-button-container pull-left\">\n\n                      </div>\n                  </div>\n                </div>\n            </div>);\n    }\n}\n\nexport default SendChatHistory;","import React, { Component } from 'react';\nimport ChatMessageFactory from '../../classes/MessageFactory';\nimport Message from './Message';\nimport Api from '../../classes/Api';\nimport moment from 'moment';\nimport SendChatHistory from '../others/SendChatHistory';\nimport _ from 'lodash';\nclass ChatBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chatChannel: null,\n      fayeServer: null,\n      messageContainer: document.getElementById('chat_area'),\n      username: '',\n      email: '',\n      phone: '',\n      messageFactory: new ChatMessageFactory({ username: this.username, channel: this.chatChannel, email: this.email, phone: this.phone }),\n      quitSent: false,\n      messageCame: false,\n      agentPresent: false,\n      agentsCount: 0,\n      connectTimeout: 0,\n      started: false,\n      messages: [],\n      messagEnvelopes: [],\n      contaktiChat: {},\n      showDetailInput: true,\n      showChat: false,\n      newMessage: \"\",\n      disableChatSendDisabled: false,\n      disableMessageInput: false,\n      showNoAgentOnline: false,\n      agentName: \"\",\n      showSendChatHistoryFlag: false,\n      chat_transcript: \"\",\n      showCustomActionButtion: false,\n      customActionButtionText: \"\",\n      uploadedFileUrls: [],\n    }\n  }\n  componentDidMount() {\n    if (!this.props.contaktiChat || (this.props.contaktiChat && Object.keys(this.props.contaktiChat).length === 0)) {\n      return;\n    }\n    let chat = this.props.contaktiChat\n\n    this.setState({ messageContainer: document.getElementById('chat_area') });\n    this.setState({ contaktiChat: chat }, async () => {\n      if (this.state.contaktiChat.chat_settings.format !== \"inquiry\" || this.state.contaktiChat.chat_settings.chat_inquiry_fields.length === 0) {\n        await this.startChat();\n      }\n      // window.onbeforeunload = this.quitChat;\n    });\n    this.setSendDisabled();\n  }\n\n  onStartClientResponse = (response) => {\n    if ((!this.state.agentPresent) && this.state.contaktiChat.chatWithHuman) {\n      this.setSendDisabled()\n    }\n\n    response.callback = this.onMessageReceived;\n    response.connect = true;\n\n    this.setState({ chatChannel: response.channel });\n    this.setState({ fayeServer: response.server });\n    window.Danthes.sign(response);\n    // Set client info in redis to use when client closes or reloads the chat.\n    setTimeout(() => {\n      const url = this.state.contaktiChat.serverUrl + `/chat/set_client_info?channel_id=${this.state.chatChannel}`\n      fetch(url, {\n        \"Content-Type\": \"application/json\"\n      });\n    }, 2000);\n\n  };\n\n\n\n  displayNoAgentOnlineScreen = (timeOut = 60000) => {\n    let contakti_chat = this.state.contaktiChat;\n    if (contakti_chat.agents_online == false && contakti_chat.chatWithHuman == true)\n    {\n      this.props.showNoAgentOnlineScreen();\n    }\n    else{\n      this.setState({\n        connectTimeout: setTimeout(() => {\n          this.scrollDown();\n          this.setState({ showNoAgentOnline: true });\n        }, timeOut)\n      });\n    }\n\n  };\n\n  successCallback = (data) => {\n    let contakti_chat = this.state.contaktiChat;\n    if (data.agent_online == false)\n    {\n      this.displayNoAgentOnlineScreen(0);\n    }\n    else\n    {\n      contakti_chat.chatWithHuman = true;\n      contakti_chat.chatBotEnabled = false;\n      this.setState({ contaktiChat: contakti_chat }, () => {\n        this.setSendDisabled();\n        this.displayNoAgentOnlineScreen();\n      });\n    }\n  }\n  onMessageReceived = (envelope) => {\n    if (envelope.type === 'indicator') {\n      return\n    }\n    //TODO indicators\n    var indicators = document.getElementById('contakti-msg-indicator');\n    this.setState({ messageCame: true });\n    if (envelope.type === 'agent_indicator') {\n      indicators = document.getElementById('contakti-msg-indicator');\n      var has_cookies = localStorage.getItem('indicator_state')\n      if (!has_cookies) {\n        // setCookies\n        localStorage.setItem('indicator_state', 'true')\n        indicators.innerHTML = envelope.from + this.state.contaktiChat.translations.user_dashboard.typing_text + '<div id=\"wave\"> <span class=\"dot\"></span> <span class=\"dot\"></span> <span class=\"dot\"></span> </div>';\n        this.setState({\n          connectTimeout: setTimeout(function () {\n            var indicators = document.getElementById('contakti-msg-indicator');\n            indicators.innerHTML = '';\n            // remove cookie\n            localStorage.removeItem('indicator_state')\n          }, 5000)\n        });\n      }\n    }\n    else {\n      if (envelope.type === 'quit') {\n        this.setState({ agentsCount: this.state.agentsCount - 1 });\n        envelope.message = `${envelope.from} ${this.state.contaktiChat.translations.user_dashboard.quit_chat}`;\n        if (this.state.agentsCount < 1) {\n          // Disable send button. Do stuff!\n          this.setState({ agentPresent: false });\n          this.setSendDisabled();\n        }\n      }\n      else if (envelope.type === 'join') {\n        this.setState({ agentsCount: this.state.agentsCount + 1 });\n        if (this.state.agentPresent) {\n          envelope.message = `${envelope.from} ${this.state.contaktiChat.translations.user_dashboard.join_chat}`;\n        } else {\n          envelope.message = `${envelope.from} ${this.state.contaktiChat.chat_settings.welcome_message}`;\n        }\n        this.setState({ agentPresent: true, agentName: envelope.from });\n        clearTimeout(this.state.connectTimeout);\n        this.setSendDisabled();\n      }\n      else if (envelope.type === 'switch_to_human') {\n        envelope.message = `${this.state.contaktiChat.translations.user_dashboard.ask_human_to_help}`;\n        if (envelope.from !== this.username) {\n          indicators.innerText = \"\";\n        }\n        this.changeFromBotToHumanChat(this.successCallback);\n      }\n      let { messages, chat_transcript } = this.state;\n\n      messages.push(envelope);\n\n      this.setState({ messages, chat_transcript })\n      if (envelope.has_custom_action && envelope.custom_action_text) {\n        this.setState({ showCustomActionButtion: true, customActionButtionText: envelope.custom_action_text });\n      }\n      if (envelope.from !== this.state.username) {\n        indicators.innerText = \"\";\n      }\n\n    }\n    this.scrollDown();\n  };\n\n\n\n\n  changeFromBotToHumanChat = async (successCallback) => {\n\n    let client_data = [];\n    if (this.state.contaktiChat.chat_settings.format === 'inquiry') {\n      client_data = this.state.contaktiChat.chat_settings.chat_inquiry_fields.map(field => {\n        return { label: field.title, value: this.state[_.camelCase(field.title)] }\n      })\n    }\n    else {\n      client_data = [\n        { label: \"Name\", value: this.state.username }\n      ]\n    }\n    let params = {\n      chatbot: false,\n      channel_id: this.state.chatChannel,\n      name: this.state.username,\n      email: this.state.email,\n      phone: this.state.phone,\n      chat_display_fields: client_data\n    }\n    // var options = \"chatbot=\" + false + \"&name=\" + this.state.username + \"&email=\" + this.state.email + \"&phone=\" + this.state.phone + \"&channel_id=\" + encodeURIComponent(this.state.chatChannel);\n    let route = `/chat/${this.state.contaktiChat.serviceChannel}/bot_initiate_human_chat`;\n    let res = await new Api().post(route, params);\n    successCallback(res);\n  }\n\n\n  setUsername(name) {\n    if (!name) {\n      name = 'Anonymous';\n    }\n    this.setState({ username: name });\n    let msgFactory = this.state.messageFactory\n    msgFactory.from = name;\n    this.setState({ messageFactory: msgFactory });\n  };\n\n  sendCustomActionMessage = (e) => {\n    this.sendMessage(e.target.innerText);\n  }\n\n  sendMessage = (msg_text = \"\") => {\n    if (msg_text.length === 0) {\n      msg_text = this.state.newMessage;\n    }\n    if (msg_text.length > 0) {\n      var msg = this.state.messageFactory.newMessage(msg_text, null, this.state.contaktiChat.chatBotEnabled);\n      let route = this._channelUrl();\n      new Api().post(route, msg);\n      this.setState({ newMessage: \"\" })\n    }\n  };\n\n\n\n  _channelUrl = () => {\n    return this.state.chatChannel + '/send_msg';\n  };\n\n  scrollDown = () => {\n    if (this.messagesListContainer) {\n      this.messagesListContainer.scrollIntoView({ behavior: \"smooth\", block: \"end\", inline: \"nearest\" });\n    }\n  };\n\n  sendQuitNotify = () => {\n    if (this.state.quitSent) return;\n    this.setState({ quitSent: true });\n    var msg = this.state.messageFactory.quitMessage();\n    let route = this._channelUrl();\n    new Api().post(route, msg);\n    var ret = true ? null : ':D'; // Some browsers need fooling to evaluate onbeforeunload\n    return ret;\n  };\n\n  quitChat = async () => {\n    if (this.state.agentPresent) {\n      this.sendQuitNotify();\n    } else {\n      if (this.state.chatChannel) {\n        let route = `/chat/${this.state.contaktiChat.serviceChannel}/abort_chat?channel_id=${encodeURIComponent(this.state.chatChannel)}`;\n        await new Api().get(route);\n      }\n    }\n  };\n  _channelIndicatorUrl = () => {\n\n    return this.state.chatChannel + \"/send_indicator\";\n  };\n\n  onKeyIndicator = () => {\n    var msg = this.state.messageFactory.newMessage(\"Customer typing\");\n    let route = this._channelIndicatorUrl();\n    new Api().post(route, msg);\n  };\n\n  onKeyPress = (event) => {\n    var keyCode = event.keyCode;\n    if (keyCode !== 13) {\n      this.onKeyIndicator();\n    }\n\n  };\n\n  onSendClicked = (event) => {\n    this.setSendDisabled();\n    this.sendMessage();\n  };\n\n  startChat = async (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    let name = \"Anonymous\";\n    if (this.state.contaktiChat.chat_settings.format === 'inquiry') {\n      name = this.state[_.camelCase(this.state.contaktiChat.chat_settings.chat_inquiry_fields[0]?.title)]\n    }\n    this.setState({\n      showDetailInput: false,\n      showChat: true,\n      username: this.state.username.length > 0 ? this.state.username : name,\n      messageFactory: new ChatMessageFactory({\n        username: this.state.username.length > 0 ? this.state.username : name,\n        channel: this.state.chatChannel,\n        email: this.state.email,\n        phone: this.state.phone\n      })\n    });\n    this.props.toggleDropDown(true);\n    if (this.state.contaktiChat.chatWithHuman) {\n      this.displayNoAgentOnlineScreen();\n    }\n    let client_data = [];\n    if (this.state.contaktiChat.chat_settings.format === 'inquiry') {\n      client_data = this.state.contaktiChat.chat_settings.chat_inquiry_fields.map(field => {\n        return { label: field.title, value: this.state[_.camelCase(field.title)] }\n      })\n    }\n    else {\n      client_data = [\n        { label: \"Name\", value: name }\n      ]\n    }\n    let params = {\n      chatbot: this.state.contaktiChat.chatBotEnabled,\n      name: name,\n      email: this.state.email,\n      phone: this.state.phone,\n      chat_display_fields: client_data\n    }\n\n    let route = `chat/${this.state.contaktiChat.serviceChannel}/initiate_chat`;\n    let res = await new Api().post(route, params);\n\n    if (this.state.contaktiChat.initialMsg.length > 0) {\n      var msg = this.state.messageFactory.newMessage(this.state.contaktiChat.initialMsg, \"initial\", this.state.contaktiChat.chatBotEnabled, this.state.contaktiChat.chat_settings.bot_alias);\n      if (this.state.contaktiChat.chatBotEnabled && this.state.contaktiChat.chat_settings.enable_initial_buttons) {\n        msg.action_buttons = this.state.contaktiChat.chat_settings.chat_initial_buttons.map(btn => btn.title);\n      }\n      let moment1 = moment;\n      msg.timestamp = moment1().local().format();\n      let msgs = this.state.messages\n      msgs.push(msg);\n      this.setState({ messages: msgs });\n    }\n    this.props.setChatStarted();\n    this.onStartClientResponse(res);\n  };\n\n  setSendDisabled = (event) => {\n    if (!this.state.agentPresent && this.state.contaktiChat?.chatWithHuman) {\n      this.setState({ disableChatSendDisabled: true })\n      if (!this.state.agentPresent && this.state.contaktiChat?.chatWithHuman) {\n        this.setState({ disableChatSendDisabled: true })\n\n      }\n    } else {\n      this.setState({ disableChatSendDisabled: false })\n    }\n  };\n\n  maximize() {\n    document.getElementById('contakti-msg-box').style.bottom = '0px';\n    var chatSettingDrowpdown = document.getElementById('chat-setting-dropdown')\n    if (chatSettingDrowpdown && document.getElementsByClassName('show-dropdown').length > 0) {\n      document.getElementById('chat-setting-dropdown').style.display = \"block\";\n    }\n    document.getElementById('contakti-msg-minimize').classList.remove('hide');\n    var sendButton = document.getElementById('contakti-chat-send-btn');\n    sendButton.onclick = this._onSendClicked.bind(this);\n    this.setState({ messageContainer: document.getElementById('contakti-msg-body') });\n    this.setState({ minimized: false });\n  };\n\n  updateUserDetail = () => {\n  }\n\n  handleChange = (event, key) => {\n    let state = this.state;\n    let inputName = event.target.name;\n    state[inputName] = event.target.value;\n    this.setState({ ...state });\n  }\n  uploadFile = () => {\n    this.fileInput.click();\n  }\n  handleFileChange = async (e) => {\n    // const fileData = e.target.files[0];\n\n    let file = e.target.files[0];\n\n\n    var formdata = new FormData();\n    formdata.append(\"upload\", file, file.name);\n\n    let response = await new Api().postFile('chat/uploadfile', formdata);\n    this.state.uploadedFileUrls.push(response.file_url)\n    var msg = this.state.messageFactory.fileMessage(response.file_url, response.file_path);\n    let route = this._channelUrl();\n    new Api().post(route, msg);\n\n  }\n\n  showSendChatHistory = () => {\n    this.setState({ showSendChatHistoryFlag: true });\n  }\n  getChatTranscript = () => {\n    let transcript = \"\";\n    this.state.messages.forEach(message => {\n      transcript += message.message;\n      transcript += '\\n'\n      if (message.files) {\n        message.files.forEach(file => {\n          transcript += file.url;\n          transcript += '\\n'\n        })\n      }\n      if (message.action_buttons) {\n        message.action_buttons.forEach(btn_text => {\n          transcript += btn_text;\n          transcript += '\\n';\n        })\n      }\n      if (message.type !== 'quit') {\n        transcript += moment(message.timestamp ? message.timestamp : \"\").local().format('D.M.YYYY HH.mm')\n        transcript += '\\n';\n        transcript += message.from;\n        transcript += '\\n';\n      }\n      transcript += '\\n';\n    })\n    return transcript;\n  }\n\n  downloadChat = () => {\n    this.fileDownload.click();\n  }\n\n  createTicket = async () => {\n    const task_data = {};\n    task_data['channel_id'] = this.state.chatChannel\n    task_data['media_channel_id'] = this.state.contaktiChat.serviceChannel;\n    task_data['messages_attributes'] = [];\n    task_data['messages_attributes'][0] = {};\n    task_data['messages_attributes'][0]['title'] = \"\";\n    task_data['messages_attributes'][0][\"channel_type\"] = 'chat';\n    if (this.state.customActionButtionText.length > 0) {\n      task_data['messages_attributes'][0]['title'] = this.state.customActionButtionText;\n    }\n    task_data['messages_attributes'][0]['to'] = 'Internal';\n    task_data['messages_attributes'][0]['from'] = this.state.username;\n    task_data['user_uploaded_file_urls'] = this.state.uploadedFileUrls;\n    if (this.state.email.length > 0) task_data['messages_attributes'][0]['from'] = this.state.email;\n    let transcript = \"\";\n    if (this.state.contaktiChat.chat_settings.format === 'inquiry') {\n      this.state.contaktiChat.chat_settings.chat_inquiry_fields.forEach(field => {\n        transcript += `${field.title} : ${this.state[_.camelCase(field.title)]}\\n`;\n      })\n    }\n    else {\n      transcript += `Name : ${this.state.username}\\n`;\n    }\n    transcript += `\\n`;\n    transcript += this.getChatTranscript();\n    task_data['messages_attributes'][0]['description'] = transcript;\n    task_data['type'] = 'chat';\n    const url = 'tasks/create_task_from_chat'\n    await new Api().post(url, task_data);\n    this.setState({ showCustomActionButtion: false, customActionButtionText: \"\" });\n    this.quitChat();\n    this.props.quit();\n  }\n\n  render() {\n    if (!this.state.contaktiChat) {\n      return null;\n    }\n    const { contaktiChat, disableChatSendDisabled } = this.state;\n    const { messages } = this.state;\n\n    let inquiryData = [];\n    if (contaktiChat.chat_settings?.format === 'inquiry') {\n      contaktiChat.chat_settings.chat_inquiry_fields.forEach((field, index) => {\n        if (index > 0) {\n          inquiryData.push(this.state[_.camelCase(field.title)]);\n        }\n      })\n    }\n\n\n\n    return (\n\n      <div id=\"contakti-msg-container\" className=\"msg_wrap h-100\">\n        <div id=\"contakti-chat-agent-details\" className=\"msg_agent\" style={{ display: this.state.agentName === \"\" ? \"none\" : \"block\", color: this.props.contaktiChat.text_color, backgroundColor: this.props.contaktiChat.color }}>\n          <div className=\"msg_agent_name\" id=\"contakti-chat-agent-name\">{this.state.agentName}</div>\n        </div>\n        {\n          contaktiChat?.chat_settings?.format === \"inquiry\" && contaktiChat?.chat_settings.chat_inquiry_fields.length > 0 ?\n            <div id=\"contakti-user-details\" className=\"h-100 px-1\" style={{ display: this.state.showDetailInput ? 'block' : 'none' }} >\n              <form className=\"flex-column justify-content-between d-flex h-100\" onSubmit={async (event) => { await this.startChat(event); }}>\n                <div style={{ maxHeight: \"330px\", overflow: \"auto\", marginTop: \"115px\" }} >\n                  {contaktiChat?.chat_settings.chat_inquiry_fields.map((field, index) => {\n                    return (<div key={`inquiry-fields-${index}`}><label>{field.title}</label>\n                      <input type={field.input_type} required className=\"form-control-start\" value={this.state[_.camelCase(field.title)] || \"\"} name={_.camelCase(field.title)} onChange={this.handleChange} id=\"contakti-input-name\" />\n                    </div>\n                    )\n                  })}\n                </div>\n                <div style={{ textAlign: 'center', marginBottom: \"20px\" }} >\n                  <div>\n                    <input type=\"submit\" id=\"contakti-input-details-submit\" className=\"btn btn-default btn-block\" value={contaktiChat.translations.user_dashboard.start_chat} style={{ backgroundColor: this.props.contaktiChat.color, color: this.props.contaktiChat.text_color }} />\n                  </div>\n                  <div >\n                    Powered by <a href=\"http://contakti.com\" target=\"_blank\" rel=\"noreferrer\">contakti.com</a>\n                  </div>\n                </div>\n              </form>\n            </div>\n            : null\n        }\n        {this.state.showSendChatHistoryFlag ? (<SendChatHistory contaktiChat={contaktiChat} bgColor={contaktiChat.color} transcript={this.state.chat_transcript} quitChat={() => { this.props.quit(); this.quitChat(); }} startChat={() => this.props.startChat()} />) : (\n          <div className={this.state.showDetailInput === false ? '' : 'd-none'}>\n\n            <div id=\"contakti-msg-body\" className=\"msg_bodyclient\">\n              {contaktiChat?.chat_settings?.format === \"inquiry\" && contaktiChat?.chat_settings.chat_inquiry_fields.length > 0 ? (\n                null\n              ) : \"\"}\n              <div style={{ display: this.state.showChat ? 'block' : 'none' }} id=\"chat_area\" ref={(el) => { this.messagesListContainer = el; }}>\n                {\n                  this.state.showNoAgentOnline ? (\n                    <div className=\"msg_n\">{contaktiChat.translations.user_dashboard.chat_not_available}<a href=\"#\" onClick={this.props.showNoAgentOnlineScreen} id=\"contakti_chat_not_available_link\"> {contaktiChat.translations.user_dashboard.chat_leave_a_message_link}</a></div>\n                  ) : (\n\n                    <div>\n                      {\n                        messages.map((message, index) => {\n                          return (\n                            <Message key={index}\n                              envelope={message}\n                              bgClass={message.from === this.state.username ? 'msg_b' : 'msg_a'}\n                              userName={this.state.username}\n                              sendCustomActionMessage={this.sendCustomActionMessage}\n                              addToCart={(product) => { this.props.addToCart(product) }}\n                              contaktiChat={contaktiChat}\n                              userInfo={inquiryData}\n                            />\n                          );\n\n                        })\n                      }\n                    </div>\n\n                  )}\n              </div>\n            </div>\n            <div id=\"contakti-msg-indicator\" className=\"msg_indictor\"> </div>\n            <div id=\"contakti-msg-footer\" className=\"msg_footer\" style={{ display: this.state.showChat ? 'block' : 'none' }}>\n              <div className=\"block-row\">\n                <div className=\"input-block\">\n                  <textarea\n                    id=\"contakti-chat-text-input\"\n                    value={this.state.newMessage}\n                    disabled={disableChatSendDisabled}\n                    name='newMessage'\n                    onChange={this.handleChange}\n                    className=\"msg_input form-control\"\n                    placeholder={contaktiChat?.translations?.user_dashboard.type_message}\n                    onKeyPress={(event) => {\n                      if (event.charCode === 13) {\n                        event.preventDefault();\n                        this.onSendClicked();\n                      }\n                      else {\n                        this.onKeyPress(event);\n                      }\n                    }}\n                    disabled={this.state.disableChatSendDisabled ? true : false}\n                    rows=\"3\" />\n                </div>\n                <div className=\"button-block\">\n                  <a\n                    className={`contakti-chat-send-btn ${this.state.newMessage.length > 0 ? \"\" : \"disabled\"}`}\n                    onClick={this.onSendClicked}\n                    style={{ backgroundColor: this.props.contaktiChat.color, color: this.props.contaktiChat.text_color }}>\n                    <span className=\"fa fa-send\"></span>\n                  </a>\n                </div>\n              </div>\n              <div className=\"block-row mb-1\">\n                <div className=\"pull-left\">\n                  <button id=\"custom_action_button\" onClick={this.createTicket} style={{ visibility: this.state.showCustomActionButtion ? 'visible' : 'hidden' }}> {this.state.customActionButtionText}</button>\n                </div>\n              </div>\n              <div className=\"block-row mb-10\">\n                <div className=\"pull-left\">\n                  <a onClick={this.uploadFile} id=\"contakti-open-file\">{contaktiChat.translations?.user_dashboard.attachment_chat}</a>\n                </div>\n                <div className=\"pull-right\">\n                  Powered by <a href=\"http://contakti.com\" target=\"_blank\" rel=\"noreferrer\" style={{ marginRight: '10px' }}>contakti.com</a>\n                </div>\n              </div>\n              <form id=\"contakti-file-upload-form\" style={{ display: 'none' }}>\n                <input type=\"file\" id=\"contakti-file-upload-input\" ref={instance => { this.fileInput = instance; }} name=\"upload\" onChange={this.handleFileChange} />\n              </form>\n            </div>\n          </div>\n        )}\n        <a ref={instance => { this.fileDownload = instance; }} style={{ display: \"none\" }} href={`data:text/plain;charset=utf-8,${encodeURIComponent(this.state.chat_transcript)}`} download=\"chat_history.txt\"></a>\n      </div>\n    );\n  }\n}\n\nexport default ChatBox;\n","import React, { Component } from 'react';\nimport Api from '../../classes/Api';\nimport Text from '../modules/utils/Text';\nclass CallBackBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      phone: \"\",\n      date: \"\",\n      time: \"\",\n      email: \"\",\n      message: \"\",\n      callBackSent: false\n\n    }\n  }\n\n  createCallBack = () => {\n    let number = this.state.phone\n    let date = this.state.date\n    let time = this.state.time\n    let datetime = '';\n    if (date.length > 0) {\n      datetime = new Date(`${date}`);\n      if (time.length > 0) {\n        datetime = new Date(`${date}T${time}`);\n      }\n    }\n    let email = this.state.email\n    let message = this.state.message\n    let url = '/chat/' + this.props.contaktiChat.serviceChannel + '/create_callback'\n    new Api().post(url, { number: number, datetime: datetime, email: email, message: message });\n    document.getElementById('contakti-user-name').innerHTML = this.props.contaktiChat.translations.user_dashboard.thanks_chat;\n    this.setState({callBackSent: true})\n  }\n\n\n  handleChange = (event, key) => {\n    let state = this.state;\n    let inputName = event.target.name;\n    state[inputName] = event.target.value;\n    this.setState({ ...state });\n  }\n  render() {\n    return (\n      <div className=\"call_back_box h-100\">\n      { this.state.callBackSent? (<div style={{textAlign: \"center\", fontSize: \"110%\", paddingTop: \"3em\"}}> <Text text={this.props.contaktiChat.translations.user_dashboard.sentmessage_chat} /> </div>) : (\n      <form id=\"contakti-user-details\" onSubmit={this.createCallBack} className=\"h-100 flex-column justify-content-between d-flex\">\n        <div className=\"row\">\n          <div className=\"col-12 pb-2\">\n            <label>{this.props.contaktiChat.translations.user_dashboard.callback_chat}</label>\n          </div>\n\n          <div className=\"col-12 pb-2\">\n            <div>\n              <div className=\"small-label pb-2\">{this.props.contaktiChat.translations.user_dashboard.cbnumber_chat}</div>\n              <input type=\"text\" onChange={this.handleChange} placeholder={this.props.contaktiChat.translations.user_dashboard.cbnumber_chat} name=\"phone\" className=\"form-control callback-control\" value={this.state.phone} id=\"messagebox-callback-number\" required />\n            </div>\n            <div style={{clear: \"both\"}}></div>\n          </div>\n\n          <div className=\"col-12\">\n            <div className=\"small-label pb-2\">{this.props.contaktiChat.translations.user_dashboard.time_chat}</div>\n            <div style={{clear: \"both\"}}></div>\n\n            <div style={{width: \"50%\", float: \"left\", boxSizing: \"border-box\",  paddingRight: \"20px\"}}>\n              <input type=\"date\" id=\"messagebox-date-field\" name=\"date\" value={this.state.date} onChange={this.handleChange} />\n            </div>\n\n            <div style={{width: \"50%\", float: \"left\", boxSizing: \"border-box\",  paddingRight: \"20px\"}}>\n              <input type=\"time\" id=\"messagebox-time-field\" name=\"time\" value={this.state.time} onChange={this.handleChange} />\n            </div>\n\n\n            <div style={{clear: \"both\"}}></div>\n          </div>\n          <div className=\"col-12 pb-2\">\n            <label>{this.props.contaktiChat.translations.user_dashboard.message_chat}</label>\n            <input type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} placeholder={this.props.contaktiChat.translations.user_dashboard.messageemail_chat} className=\"form-control callback-control\" id=\"messagebox-email\" required />\n            <br />\n            <textarea name=\"message\" value={this.state.message} onChange={this.handleChange} placeholder={this.props.contaktiChat.translations.user_dashboard.messagemsg_chat} className=\"form-control\" rows=\"8\" id=\"messagebox-message\"></textarea>\n\n          </div>\n        </div>\n          <div className=\"footer-sec\">\n            <div className=\"send-button-container pull-left\">\n              <button  type=\"submit\" id=\"messagebox-send\" className={`send ${this.state.phone.length > 0 && this.state.email.length > 0  ? \"\" : \"disabled\"}`} style={{backgroundColor: this.props.contaktiChat.color }} ><span className=\"fa fa-send\"></span></button>\n            </div>\n            <div className=\"pull-right\">\n              Powered by <a href=\"http://contakti.com\" target=\"_blank\" rel=\"noreferrer\" style={{position: \"relative\"}}>contakti.com</a>\n              <div className=\"send-button-container pull-left\">\n\n              </div>\n            </div>\n          </div>\n      </form>\n      )}\n      </div>\n\n    );\n  }\n}\n\nexport default CallBackBox;","import React, { Component } from 'react';\nclass Product extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n\n\n  onProductRemove = (p) => {\n    this.props.onProductRemove(p);\n  }\n\n  increaseQuantity = (product) => {\n    this.props.increaseQuantity(product)\n  }\n\n  decreaseQuantity = (product) => {\n    if (product.quantity > 1) {\n      product.quantity -= 1;\n      this.props.replaceProduct(product)\n    }\n  }\n\n\n  render() {\n    let { products } = this.props;\n    const {translations} = this.props\n\n    return (\n      <table className=\"table table-condensed table-striped \">\n        <thead>\n          <tr>\n            <th className=\"border-0\">{translations.product_title}</th>\n            <th className=\"border-0 text-center\">{translations.quantity}</th>\n            <th className=\"border-0 text-center\">{translations.price}</th>\n            <th className=\"border-0 text-center\">{translations.action}</th>\n          </tr>\n        </thead>\n\n        <tbody id=\"cart_body\">\n          {\n            products.map((product, index) => {\n              return <tr key={index}>\n                <td className=\"px-1 border-0\"><a href=\"#\">{product?.title}</a></td>\n                <td className=\"px-1 border-0\">\n                  <div className=\"center\" style={{ position: \"relative\" }}>\n                    <span onClick={() => this.increaseQuantity(product)}> <i className=\"fa fa-plus\"></i> </span>\n                    <input type=\"text\" className=\"form-control\" style={{ width: \"50px\", margin: \"0px 5px\" }} value={product?.quantity} readonly />\n                    <span onClick={() => this.decreaseQuantity(product)} > <i className=\"fa fa-minus\" ></i></span>\n                  </div>\n                </td>\n                <td className=\"px-1 border-0 text-center\">{product?.currency} {product?.price}</td>\n                <td className=\"px-1 border-0 center\">\n                  <button\n                    onClick={() => this.onProductRemove(product)}\n                    className=\"btn btn-danger \" ><i className=\"fa fa-times\" disabled ></i></button>\n                </td>\n              </tr>\n\n            })\n          }\n          <tr className=\"table-active\">\n            <td className=\"px-1 border-0 text-end\" colSpan=\"3\">\n              <strong>{translations.total}: {this.props.total}</strong>\n             </td>\n             <td className=\"px-1 border-0 \"/>\n          </tr>\n        </tbody>\n\n      </table>\n\n    );\n  }\n}\nexport default Product;","import React, { Component } from 'react';\nimport Product from './Product';\nimport _ from 'lodash';\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      sum: 0,\n      currency: \"USD\"\n    }\n  }\n  componentDidMount() {\n    this.countSum();\n  }\n\n  onProductRemove = (product) => {\n    let { products } = this.state;\n    products = _.reject(products, (p) => {\n      return p.id === product.id;\n    });\n    this.setState({ products }, () => {\n      if (this.state.products.length === 0) {\n        this.props.onCartEmpty();\n      }\n      this.countSum();\n    });\n\n  }\n\n  addProduct = (p) => {\n    let { products } = this.state;\n    var product = _.find(products, { id: p.id });\n    if (product) {\n      product.quantity += 1;\n      this.replaceProduct(product);\n    }\n    else {\n      p.quantity = 1;\n      let currency = p.currency;\n      products.push(p)\n      this.setState({ products, currency }, () => this.countSum());\n\n    }\n  }\n\n\n  countSum = () => {\n    let sum = 0;\n    let { products } = this.state;\n    _.each(products, (product) => {\n      sum += (product.price * product.quantity);\n    });\n    this.setState({ sum });\n  }\n\n  replaceProduct = (product) => {\n    let { products } = this.state;\n    var index = _.findIndex(products, { id: product.id });\n    products.splice(index, 1, product);\n    this.setState({ products });\n    this.countSum();\n  }\n\n  render() {\n    let { products } = this.state;\n    let color = this.props.contaktiChat.color;\n    let text_color = this.props.contaktiChat.text_color;\n    const {translations} = this.props.contaktiChat\n    return (\n      <div id=\"contakti_cart_box\" className=\"cart_box\">\n        <div className=\"msg_head\" style={{ backgroundColor: color }}>\n          <span id=\"contakti-user-name\" style={{ color: text_color }}> {translations.user_dashboard.shopping_cart.cart_title}</span>\n          <span id=\"close-cart-icon\" className=\"float-end p-1 mr-2 d-none d-sm-block d-md-none\" onClick={this.props.toggleCart}><i className=\"fa fa-times\"></i></span>\n        </div>\n\n        <div className=\"cart_body d-flex flex-column justify-content-between\">\n          <div style={{maxHeight: \"270px\", overflow: \"auto\"}}>\n            <Product\n              products={products}\n              onProductRemove={this.onProductRemove}\n              increaseQuantity={this.addProduct}\n              replaceProduct={this.replaceProduct}\n              total={ `${this.state.currency} ${this.state.sum}` }\n              translations={translations.user_dashboard.shopping_cart}\n            />\n          </div>\n\n          <div className=\"text-center\">\n            <div className=\"row\">\n            <div className=\"col-6\">\n              <label> {translations.user_dashboard.shopping_cart.payment_method}</label>\n\n              <div className=\"centera\" id=\"paymenst_method_select\">\n                <select className=\"form-control w-100 m-auto\">\n                  <option> Card</option>\n                  <option> PayPal</option>\n                </select>\n              </div>\n              <br />\n            </div>\n            <div className=\"col-6\">\n              <label > {translations.user_dashboard.shopping_cart.shipment_method}</label>\n              <div className=\"centera\" id=\"payments_method_select\">\n                <select className=\"form-control w-100 m-auto\">\n                  <option> ABC</option>\n                  <option> DEF</option>\n                </select>\n              </div>\n            </div>\n\n            </div>\n\n\n            <div>\n              <button className=\"btn w-50\" style={{ color: text_color, backgroundColor: color }}> {translations.user_dashboard.shopping_cart.checkout}</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Cart;\n","import React, { Component } from 'react';\nimport ContaktiChat from '../../classes/ContaktiChat';\nimport Dropdown from './Dropdown';\nimport ChatBox from '../chat_box/ChatBox';\nimport CallBackBox from '../others/CallBackBox';\nimport ChatUtils from '../../classes/ChatUtils';\nimport ReactResizeDetector from 'react-resize-detector';\nimport Cart from '../shopping_cart/Cart';\n\nclass ChatPlugin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      style: {},\n      contaktiChat: {},\n      translations: {},\n      loading: true,\n      showDropDown: false,\n      showNoAgentScreen: false,\n      showPlugin: false,\n      showMinimize: false,\n      chatStarted: false,\n      chatInitialized: false,\n      showCartIcon: false,\n      showCart: false,\n      cartEmpty: true,\n    }\n  }\n\n  async componentDidMount() {\n    let contakti_chat = new ContaktiChat();\n    let chatUtils = ChatUtils\n    let urlParams = chatUtils.getUrlParams(window.location.href)\n    let serviceChannelId = urlParams.id;\n    contakti_chat.setServiceChannel(serviceChannelId);\n    await contakti_chat.setSettings();\n    await contakti_chat.setTranslations();\n    this.setState({\n      contaktiChat: contakti_chat,\n      loading: false,\n      style: {\n        color: contakti_chat.text_color,\n        backgroundColor: contakti_chat.color\n      }\n    });\n  }\n\n  toggleDropDown = (flag) => {\n    this.setState({ showDropDown: flag });\n  }\n  setChatStarted = () => {\n    if (!this.state.chatStarted) {\n      this.setState({ chatStarted: true });\n    }\n  }\n  showNoAgentOnlineScreen = (e) => {\n    this.setState({ showNoAgentScreen: true });\n    if (e) e.preventDefault();\n  }\n  showChatPlugin = async () => {\n    if (!this.state.chatInitialized) {\n      this.setState({ chatInitialized: true });\n    }\n    if (!this.state.showPlugin) {\n      let cont_chat = this.state.contaktiChat\n      await cont_chat.setSettings();\n      this.setState({ showPlugin: true, showMinimize: true, contaktiChat: cont_chat });\n\n      if (this.state.chatStarted) {\n        this.setState({ showDropDown: true });\n      }\n      if(!this.state.cartEmpty){\n        this.setState({ showCartIcon: true });\n      }\n\n    }\n\n  }\n  hideChatPlugin = (e) => {\n    e.stopPropagation();\n    if (this.state.showPlugin) {\n      this.setState({ showPlugin: false, showMinimize: false, showDropDown: false, showCart: false, showCartIcon: false });\n    }\n  }\n  destroyChat = () => {\n    this.setState({ chatInitialized: false, showPlugin: false, showMinimize: false, showDropDown: false, showCartIcon: false , cartEmpty: true   });\n  }\n  onResize = (width, height) => {\n    window.parent.postMessage({ type: 'set_dimensions', width, height }, \"*\");\n  }\n  toggleCart = () => {\n    this.setState({ showCart: !this.state.showCart });\n  }\n  addToCart = (product) => {\n    this.setState({ showCartIcon: true, cartEmpty: false }, () => this.cart.addProduct(product) );\n  }\n  hideCartIcon = () => {\n    this.setState({ showCartIcon: false, showCart: false, cartEmpty: true });\n  }\n\n\n  render() {\n    const { contaktiChat, loading } = this.state;\n    let parent_width_class = '';\n\n    if (window.parent)\n    {\n      if (window.outerWidth <= 600)\n      {\n        parent_width_class += ' max-600-width '  \n      }\n    }\n\n    if (loading) {\n      return null;\n    }\n    return (\n      <div id=\"contakti-chat-main\" className={parent_width_class}>\n        <ReactResizeDetector handleWidth handleHeight onResize={this.onResize} >\n          <div id=\"contakti-msg-box\"\n            className={`\n                 chat-plugin-parent\n                 ${this.state.showMinimize === true ? \"open\" : \"\"}\n              `}\n            >\n            <div className=\"cart-parent\" style={{ display: this.state.showCart ? \"block\" : \"none\" }}>\n              { (!this.state.cartEmpty)&&contaktiChat.chat_settings.enable_cart ? (\n              <Cart ref={instance => { this.cart = instance; }} contaktiChat={contaktiChat} onCartEmpty={this.hideCartIcon} toggleCart={this.toggleCart} />\n              ): \"\"}\n            </div>\n\n            <div className=\"chat-parent flex-column d-flex\">\n              <div id=\"contakti-msg-head\" onClick={this.showChatPlugin} className=\"msg_head\" style={this.state.style}>\n                <div>\n                  <div id=\"contakti-logo-container\">\n                    <img alt=\"logo\" src={`${contaktiChat.origin}/${contaktiChat.chat_settings.file.url}`} />\n                  </div>\n                </div>\n\n                <span id=\"contakti-user-name\" style={{ color: contaktiChat.text_color }}>{contaktiChat.chat_settings.chat_title}</span>\n\n                <span id=\"cart_show_button\" onClick={this.toggleCart} style={{ display: this.state.showCartIcon ? \"block\" : \"none\", margin: '5px 5px 0 0', color: contaktiChat.text_color }}>\n                  <i className=\"fa fa-shopping-cart mt-1\"></i>\n                </span>\n                <span>\n                  {this.state.showDropDown ? (<Dropdown styleObj={this.state.style} translations={contaktiChat.translations} showDropdown={this.state.showDropDown} quit={() => { this.chatBox.quitChat(); this.destroyChat() }} sendChatHistory={() => this.chatBox.showSendChatHistory()} downloadChatHistory={() => { this.chatBox.downloadChat(); }} startChat={() => this.showChatPlugin()} />) : \"\"}\n                </span>\n\n                <div id=\"contakti-msg-minimize\" >\n                  {this.state.showMinimize ? (\n                    <span className=\"fa-stack\" onClick={this.hideChatPlugin} style={{ color: contaktiChat.text_color }}><i className=\"fa fa-stack-2x fa-angle-down\" style={{ top: '3px', left: '0px' }}></i></span>\n                  ) : \"\"}\n                </div>\n              </div>\n              {this.state.chatInitialized ? (\n                <div className=\"h-100 px-1\" style={{ display: this.state.showPlugin ? \"block\" : \"none\" }}>\n                  {this.state.showNoAgentScreen ? (<CallBackBox contaktiChat={contaktiChat} showNoAgentOnlineScreen={this.showNoAgentOnlineScreen} ></CallBackBox>) : (\n                    <ChatBox ref={instance => { this.chatBox = instance; }}\n                      contaktiChat={contaktiChat}\n                      toggleDropDown={this.toggleDropDown}\n                      showNoAgentOnlineScreen={this.showNoAgentOnlineScreen}\n                      quit={() => { this.destroyChat() }}\n                      setChatStarted={this.setChatStarted}\n                      startChat={() => this.showChatPlugin()}\n                      addToCart={(product) => { this.addToCart(product) }}\n                    ></ChatBox>)}\n                </div>\n              ) : \"\"}\n            </div>\n          </div>\n        </ReactResizeDetector>\n      </div>\n    );\n  }\n}\n\nexport default ChatPlugin;\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.scss';\nimport './components/chat_plugin/ChatPlugin'\nimport ChatPlugin from './components/chat_plugin/ChatPlugin';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <ChatPlugin />\n    );\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './style.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}